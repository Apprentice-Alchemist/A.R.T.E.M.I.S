// Generated by Haxe 4.0.5
(function ($hx_exports, $global) { "use strict";
$hx_exports["com"] = $hx_exports["com"] || {};
$hx_exports["com"]["raidandfade"] = $hx_exports["com"]["raidandfade"] || {};
$hx_exports["com"]["raidandfade"]["haxicord"] = $hx_exports["com"]["raidandfade"]["haxicord"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Bot = function() { };
$hxClasses["Bot"] = Bot;
Bot.__name__ = true;
Bot.main = function() {
	if(!Bot.hasStartedBefore) {
		Bot.hasStartedBefore = true;
		lib_EvalHandler.init();
		lib_Logger.logs = lib_Logger.getLogData();
		lib_Logger.setTrace();
	}
	try {
		Bot.bot = new com_raidandfade_haxicord_DiscordClient(Bot.getToken());
		Bot.bot.onReady = Bot.onReady;
		Bot.bot.onMessage = MessageHandler.handle;
		Bot.bot.onGuildCreate = function(g) {
		};
		Bot.bot.onMemberJoin = Bot.onMemberJoin;
	} catch( e ) {
		haxe_CallStack.lastException = e;
		haxe_Log.trace("Fatal Error : " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),{ fileName : "Source/Bot.hx", lineNumber : 32, className : "Bot", methodName : "main"});
		Bot.main();
	}
};
Bot.onDelay = function() {
	haxe_Timer.delay(Bot.onDelay,10000);
};
Bot.onReady = function() {
	haxe_Log.trace("Ready!",{ fileName : "Source/Bot.hx", lineNumber : 36, className : "Bot", methodName : "onReady"});
	haxe_Log.trace("Invite link : " + Bot.bot.getInviteLink(com_raidandfade_haxicord_utils_DPERMS.ADMINISTRATOR),{ fileName : "Source/Bot.hx", lineNumber : 36, className : "Bot", methodName : "onReady"});
};
Bot.onMemberJoin = function(g,m) {
};
Bot.getToken = function() {
	if(sys_FileSystem.exists("auth.json")) {
		return lib_JsonHandler.read("auth.json").token;
	} else {
		return process.env["token"].toString();
	}
};
Bot.getModioKey = function() {
	if(sys_FileSystem.exists("auth.json")) {
		return lib_JsonHandler.read("auth.json").modio_key;
	} else {
		return process.env["modio_key"].toString();
	}
};
var CommandHandler = function() { };
$hxClasses["CommandHandler"] = CommandHandler;
CommandHandler.__name__ = true;
CommandHandler.init = function(_bot) {
	CommandHandler.has_init = true;
	CommandHandler.bot = _bot;
	CommandHandler.addCommand("kick",new commands_Kick());
	CommandHandler.addCommand("mod",new commands_Mod());
};
CommandHandler.addCommand = function(cname,cclass) {
	if(!CommandHandler.has_init) {
		CommandHandler.init(Bot.bot);
	}
	cname = cname.toLowerCase();
	var _this = CommandHandler.commands;
	if(__map_reserved[cname] != null ? _this.existsReserved(cname) : _this.h.hasOwnProperty(cname)) {
		throw new js__$Boot_HaxeError("Command " + cname + " set twice");
	}
	var _this1 = CommandHandler.commands;
	if(__map_reserved[cname] != null) {
		_this1.setReserved(cname,cclass);
	} else {
		_this1.h[cname] = cclass;
	}
};
CommandHandler.getCommands = function() {
	if(!CommandHandler.has_init) {
		CommandHandler.init(Bot.bot);
	}
	return CommandHandler.commands;
};
CommandHandler.handle = function(m) {
	if(!CommandHandler.has_init) {
		CommandHandler.init(Bot.bot);
	}
	if(m.content.substring(0,Bot.prefix.length) == Bot.prefix) {
		var command = m.content.substring(Bot.prefix.length,m.content.indexOf(" ") > 0 ? m.content.indexOf(" ") : m.content.length);
		haxe_Log.trace(command,{ fileName : "Source/CommandHandler.hx", lineNumber : 42, className : "CommandHandler", methodName : "handle"});
		switch(command) {
		case "eval":
			CommandHandler.eval(m);
			return;
		case "help":
			var commands = CommandHandler.getCommands();
			var stringBuf_b = "";
			var o = commands.keys();
			while(o.hasNext()) {
				var o1 = o.next();
				if((__map_reserved[o1] != null ? commands.getReserved(o1) : commands.h[o1]).name == "help") {
					continue;
				}
				stringBuf_b += Std.string("\n" + (__map_reserved[o1] != null ? commands.getReserved(o1) : commands.h[o1]).name + " : " + (__map_reserved[o1] != null ? commands.getReserved(o1) : commands.h[o1]).shortHelp());
			}
			m.reply({ embed : { title : "Available Commands", description : stringBuf_b}});
			break;
		case "logs":
			m.reply({ content : "Start logs."},function(m1,e) {
				var _g = 0;
				var _g1 = lib_Logger.formatLogs();
				while(_g < _g1.length) {
					var o2 = _g1[_g];
					++_g;
					m1.reply({ content : o2},function(m2,e1) {
						m2.reply({ content : "End logs."});
					});
				}
			});
			return;
		default:
			var _this = CommandHandler.commands;
			if(__map_reserved[command] != null ? _this.existsReserved(command) : _this.h.hasOwnProperty(command)) {
				var _this1 = CommandHandler.commands;
				(__map_reserved[command] != null ? _this1.getReserved(command) : _this1.h[command]).call(m,Bot.bot);
			} else {
				m.reply({ content : "No command found : " + command});
			}
			return;
		}
	}
};
CommandHandler.eval = function(m) {
	if(m.author.id.id != "525025580106907659") {
		m.reply({ content : "You are not allowed to use this command!"});
		return;
	} else if(m.author.id.id == "525025580106907659") {
		m.reply({ embed : { description : lib_EvalHandler.evaluate(m.content.substring(m.content.indexOf(" "),m.content.length))}});
		return;
	} else {
		return;
	}
};
CommandHandler.parseArgs = function(m,n) {
	var tmp = HxOverrides.substr(m.content,m.content.indexOf(" "),null);
	var args = tmp.split("\" \"");
	return args;
};
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = true;
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new js__$Boot_HaxeError("Date.format %" + e + "- not implemented yet.");
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len1 = f.length - p;
	r_b += len1 == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len1);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = true;
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = true;
IntIterator.prototype = {
	hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
Math.__name__ = true;
var MessageHandler = function(_bot) {
	this.bot = _bot;
};
$hxClasses["MessageHandler"] = MessageHandler;
MessageHandler.__name__ = true;
MessageHandler.handle = function(m) {
	if(m.content.substring(0,Bot.prefix.length) == Bot.prefix) {
		CommandHandler.handle(m);
		return;
	} else {
		return;
	}
};
MessageHandler.handleMessage = function(m) {
	var content = m.content;
	if(content.toLowerCase().indexOf("good bot") != -1) {
		m.reply({ content : "Thanks, I do my best!"});
		haxe_Log.trace("message handled",{ fileName : "Source/MessageHandler.hx", lineNumber : 26, className : "MessageHandler", methodName : "handleMessage"});
		return true;
	} else if(content.toLowerCase().indexOf("bad bot") != -1) {
		m.reply({ content : "Sorry, I'll do better next time."});
		haxe_Log.trace("message handled",{ fileName : "Source/MessageHandler.hx", lineNumber : 30, className : "MessageHandler", methodName : "handleMessage"});
		return true;
	} else if(m.mentions.lastIndexOf(Bot.bot.user) != null) {
		m.reply({ content : "Hello, did you call me? If you want to know what I can do type `]help`!"});
		return true;
	}
	haxe_Log.trace("message handled",{ fileName : "Source/MessageHandler.hx", lineNumber : 36, className : "MessageHandler", methodName : "handleMessage"});
	return false;
};
MessageHandler.prototype = {
	__class__: MessageHandler
};
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var v = parseInt(x, (x[(i + 1)]=="x" || x[(i + 1)]=="X") ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = true;
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = true;
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeString: function(s,encoding) {
		var b = haxe_io_Bytes.ofString(s,encoding);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
};
var _$Sys_FileOutput = function(fd) {
	this.fd = fd;
};
$hxClasses["_Sys.FileOutput"] = _$Sys_FileOutput;
_$Sys_FileOutput.__name__ = true;
_$Sys_FileOutput.__super__ = haxe_io_Output;
_$Sys_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		js_node_Fs.writeSync(this.fd,String.fromCodePoint(c));
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		return js_node_Fs.writeSync(this.fd,js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length),pos,len);
	}
	,writeString: function(s,encoding) {
		js_node_Fs.writeSync(this.fd,s);
	}
	,flush: function() {
		js_node_Fs.fsyncSync(this.fd);
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileOutput
});
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = true;
var _$Sys_FileInput = function(fd) {
	this.fd = fd;
};
$hxClasses["_Sys.FileInput"] = _$Sys_FileInput;
_$Sys_FileInput.__name__ = true;
_$Sys_FileInput.__super__ = haxe_io_Input;
_$Sys_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		var buf = js_node_buffer_Buffer.alloc(1);
		try {
			js_node_Fs.readSync(this.fd,buf,0,1,null);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		try {
			return js_node_Fs.readSync(this.fd,buf,pos,len,null);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileInput
});
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = true;
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var ctorName = enm.__constructs__[a._hx_index];
		var params = enm[ctorName].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
		var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var com_raidandfade_haxicord_DiscordClient = $hx_exports["com"]["raidandfade"]["haxicord"]["DiscordClient"] = function(_tkn,_shardInfo,_etf,_zlib,_storage) {
	if(_zlib == null) {
		_zlib = true;
	}
	if(_etf == null) {
		_etf = false;
	}
	this.etfFormat = false;
	this.zlibCompress = false;
	this.reconnectTimeout = 1;
	this.resumeable = false;
	this.ready = false;
	this.token = _tkn;
	this.isBot = true;
	this.endpoints = new com_raidandfade_haxicord_endpoints_Endpoints(this);
	this.zlibCompress = _zlib;
	this.etfFormat = _etf;
	if(this.etfFormat) {
		throw new js__$Boot_HaxeError("ETF is not yet supported. set _etf to false");
	}
	if(_shardInfo != null) {
		this.shardInfo = _shardInfo;
	}
	if(_storage == null) {
		this.dataCache = new com_raidandfade_haxicord_cachehandler_MemoryCache();
	} else {
		this.dataCache = _storage;
	}
	haxe_Log.trace("Starting Client",{ fileName : "com/raidandfade/haxicord/DiscordClient.hx", lineNumber : 149, className : "com.raidandfade.haxicord.DiscordClient", methodName : "new"});
	this.endpoints.getGateway(this.isBot,$bind(this,this.connect));
	haxe_MainLoop.add($bind(this,this.tick));
};
$hxClasses["com.raidandfade.haxicord.DiscordClient"] = com_raidandfade_haxicord_DiscordClient;
com_raidandfade_haxicord_DiscordClient.__name__ = true;
com_raidandfade_haxicord_DiscordClient.prototype = {
	tick: function() {
	}
	,start: function() {
	}
	,connect: function(gateway,error) {
		var _gthis = this;
		try {
			haxe_Log.trace("Connecting",{ fileName : "com/raidandfade/haxicord/DiscordClient.hx", lineNumber : 170, className : "com.raidandfade.haxicord.DiscordClient", methodName : "connect"});
			if(error != null) {
				throw js__$Boot_HaxeError.wrap(error);
			}
			var url = gateway.url + "/?v=" + com_raidandfade_haxicord_DiscordClient.gatewayVersion;
			if(this.etfFormat) {
				url += "&encoding=etf";
			} else {
				url += "&encoding=json";
			}
			if(this.zlibCompress) {
				url += "&compress=zlib-stream";
			}
			this.ws = new com_raidandfade_haxicord_websocket_WebSocketConnection(url);
			this.ws.onMessage = $bind(this,this.webSocketMessage);
			this.ws.onClose = function(m) {
				if(_gthis.hbThread != null) {
					_gthis.hbThread.stop();
				}
				if(m == 4006) {
					_gthis.session = "";
				}
				if(_gthis.session == "") {
					_gthis.resumeable = false;
				}
				throw new js__$Boot_HaxeError("Socket Closed with code " + m);
			};
			this.ws.onError = function(e) {
				_gthis.resumeable = false;
				haxe_Log.trace(e,{ fileName : "com/raidandfade/haxicord/DiscordClient.hx", lineNumber : 207, className : "com.raidandfade.haxicord.DiscordClient", methodName : "connect"});
				throw new js__$Boot_HaxeError("Websocket errored!");
			};
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			haxe_Log.trace(((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1,{ fileName : "com/raidandfade/haxicord/DiscordClient.hx", lineNumber : 211, className : "com.raidandfade.haxicord.DiscordClient", methodName : "connect"});
		}
	}
	,sendWs: function(d) {
		this.ws.sendJson(d);
	}
	,webSocketMessage: function(msg) {
		var f = $bind(this,this.handleWebSocketMessage);
		var msg1 = msg;
		haxe_MainLoop.runInMainThread(function() {
			f(msg1);
		});
	}
	,handleWebSocketMessage: function(msg) {
		var m = JSON.parse(msg);
		try {
			switch(m.op) {
			case 0:
				this.receiveEvent(m);
				break;
			case 9:
				haxe_Log.trace("Session was invalidated, killing.",{ fileName : "com/raidandfade/haxicord/DiscordClient.hx", lineNumber : 252, className : "com.raidandfade.haxicord.DiscordClient", methodName : "handleWebSocketMessage"});
				this.resumeable = !m.d;
				this.ws.close();
				break;
			case 10:
				var seq = 0;
				if(this.hbThread != null) {
					seq = this.hbThread.getSeq();
				}
				if(this.resumeable) {
					this.sendWs(com_raidandfade_haxicord__$DiscordClient_WSPrepareData.Resume(this.token,this.session,seq));
				} else {
					this.sendWs(com_raidandfade_haxicord__$DiscordClient_WSPrepareData.Identify(this.token,this.shardInfo));
				}
				this.hbThread = new com_raidandfade_haxicord__$DiscordClient_HeartbeatThread(m.d.heartbeat_interval,this.ws,seq,this);
				break;
			case 11:
				this.ws_latency = Date.now() / 1000 - this.lastbeat;
				this.reconnectTimeout = 1;
				break;
			default:
			}
		} catch( er ) {
			haxe_CallStack.lastException = er;
			var er1 = ((er) instanceof js__$Boot_HaxeError) ? er.val : er;
			haxe_Log.trace("UNCAUGHT ERROR IN EVENT CALLBACK.",{ fileName : "com/raidandfade/haxicord/DiscordClient.hx", lineNumber : 261, className : "com.raidandfade.haxicord.DiscordClient", methodName : "handleWebSocketMessage"});
			haxe_Log.trace(Std.string(er1) + haxe_CallStack.toString(haxe_CallStack.exceptionStack()),{ fileName : "com/raidandfade/haxicord/DiscordClient.hx", lineNumber : 262, className : "com.raidandfade.haxicord.DiscordClient", methodName : "handleWebSocketMessage"});
		}
	}
	,receiveEvent: function(m) {
		var _gthis = this;
		var d = m.d;
		this.hbThread.setSeq(m.s);
		this.onRawEvent(m.t,d);
		switch(m.t) {
		case "CHANNEL_CREATE":
			this.onChannelCreate(this._newChannel(d));
			break;
		case "CHANNEL_DELETE":
			this.removeChannel(d);
			this.onChannelDelete(d);
			break;
		case "CHANNEL_PINS_UPDATE":
			break;
		case "CHANNEL_UPDATE":
			this.onChannelUpdate(this._newChannel(d));
			break;
		case "GUILD_BAN_ADD":
			var u = this.getUserUnsafe(d);
			var g = this.getGuildUnsafe(d.guild_id);
			g._addBan(u);
			this.onMemberBan(g,u);
			break;
		case "GUILD_BAN_REMOVE":
			var u1 = this.getUserUnsafe(d);
			var g1 = this.getGuildUnsafe(d.guild_id);
			g1._removeBan(u1);
			this.onMemberUnban(g1,u1);
			break;
		case "GUILD_CREATE":
			if(this.ready) {
				if(this.dataCache.getGuild(d.id) == null) {
					var g2 = this._newGuild(d);
					this.onGuildCreate(g2);
					this.onGuildJoin(g2);
				}
			} else {
				var g3 = this._newGuild(d);
				this.onGuildCreate(g3);
				var _g = [];
				var _g1 = 0;
				var _g2 = this.dataCache.getAllGuilds();
				while(_g1 < _g2.length) {
					var v = _g2[_g1];
					++_g1;
					if(v.unavailable) {
						_g.push(v);
					}
				}
				this.unavailableGuilds = _g.length;
				var done = this.unavailableGuilds == 0;
				if(done && !this.ready) {
					this.ready = true;
					this._onReady();
				}
			}
			break;
		case "GUILD_DELETE":
			this.onGuildLeave(this.getGuildUnsafe(d.id));
			this.onGuildDelete(d.id);
			this.removeGuild(d.id);
			break;
		case "GUILD_EMOJIS_UPDATE":
			var g4 = this.getGuildUnsafe(d.guild_id);
			g4._updateEmojis(d.emojis);
			this.onGuildEmojisUpdate(g4,d.emojis);
			break;
		case "GUILD_INTEGRATIONS_UPDATE":
			break;
		case "GUILD_MEMBERS_CHUNK":
			var members = d.members;
			var g5 = this.getGuildUnsafe(d.guild_id);
			var _g3 = 0;
			while(_g3 < members.length) {
				var m1 = members[_g3];
				++_g3;
				this.onMemberJoin(g5,g5._newMember(m1));
			}
			break;
		case "GUILD_MEMBER_ADD":
			var g6 = this.getGuildUnsafe(d.guild_id);
			this._newUser(d.user);
			this.onMemberJoin(g6,g6._newMember(d));
			break;
		case "GUILD_MEMBER_REMOVE":
			var g7 = this.getGuildUnsafe(d.guild_id);
			g7.members.remove(d.user.id);
			this.onMemberLeave(g7,this.getUserUnsafe(d.user.id));
			break;
		case "GUILD_MEMBER_UPDATE":
			var g8 = this.getGuildUnsafe(d.guild_id);
			this.onMemberUpdate(g8,g8._newMember(d));
			break;
		case "GUILD_ROLE_CREATE":
			var g9 = this.getGuildUnsafe(d.guild_id);
			this.onRoleCreate(g9,g9._newRole(d.role));
			break;
		case "GUILD_ROLE_DELETE":
			var g10 = this.getGuildUnsafe(d.guild_id);
			g10.roles.remove(d.role_id);
			this.onRoleDelete(g10,d.role_id);
			break;
		case "GUILD_ROLE_UPDATE":
			var g11 = this.getGuildUnsafe(d.guild_id);
			this.onRoleUpdate(g11,g11._newRole(d.role));
			break;
		case "GUILD_UPDATE":
			this.onGuildUpdate(this._newGuild(d));
			break;
		case "MESSAGE_CREATE":
			this.onMessage(this._newMessage(d));
			break;
		case "MESSAGE_DELETE":
			this.removeMessage(d);
			this.onMessageDelete(d);
			break;
		case "MESSAGE_DELETE_BULK":
			var msgs = d.ids;
			var _g4 = 0;
			while(_g4 < msgs.length) {
				var m2 = msgs[_g4];
				++_g4;
				this.removeMessage(m2);
				this.onMessageDelete(m2);
			}
			break;
		case "MESSAGE_REACTION_ADD":
			this.getMessage(d.message_id,d.channel_id,function(m3) {
				m3._addReaction(_gthis.getUserUnsafe(d.user_id),d.emoji);
				_gthis.onReactionAdd(m3,_gthis.getUserUnsafe(d.user_id),d.emoji);
			});
			break;
		case "MESSAGE_REACTION_REMOVE":
			this.getMessage(d.message_id,d.channel_id,function(m4) {
				m4._delReaction(_gthis.getUserUnsafe(d.user_id),d.emoji);
				_gthis.onReactionRemove(m4,_gthis.getUserUnsafe(d.user_id),d.emoji);
			});
			break;
		case "MESSAGE_REACTION_REMOVE_ALL":
			this.getMessage(d.message_id,d.channel_id,function(m5) {
				var _g5 = 0;
				var _g11 = m5.reactions;
				while(_g5 < _g11.length) {
					var r = _g11[_g5];
					++_g5;
					if(d.who != null) {
						_gthis.onReactionRemove(m5,_gthis.getUserUnsafe(d.who),d.emoji);
					} else {
						_gthis.onReactionRemove(m5,null,d.emoji);
					}
				}
				m5._purgeReactions();
			});
			break;
		case "MESSAGE_UPDATE":
			if(this.dataCache.getMessage(d.id) != null) {
				this.onMessageEdit(this._newMessage(d));
			}
			break;
		case "CHANNEL_PINS_ACK":case "PRESENCES_REPLACE":
			break;
		case "PRESENCE_UPDATE":
			var m6 = this.getGuildUnsafe(d.guild_id).getMemberUnsafe(d.user.id);
			if(m6 != null) {
				m6._updatePresence(d);
			}
			break;
		case "READY":
			var re = d;
			var _g6 = 0;
			var _g12 = re.guilds;
			while(_g6 < _g12.length) {
				var g12 = _g12[_g6];
				++_g6;
				this._newGuild(g12);
			}
			this.user = this._newUser(re.user);
			this.session = re.session_id;
			this.resumeable = true;
			var _g7 = [];
			var _g13 = 0;
			var _g21 = re.guilds;
			while(_g13 < _g21.length) {
				var v1 = _g21[_g13];
				++_g13;
				if(v1.unavailable) {
					_g7.push(v1);
				}
			}
			this.unavailableGuilds = _g7.length;
			if(re.guilds.length == 0) {
				this.ready = true;
				this._onReady();
			}
			break;
		case "RESUMED":
			this.ready = true;
			break;
		case "TYPING_START":
			try {
				this.onTypingStart(this.getUserUnsafe(d.user_id),this.getChannelUnsafe(d.channel_id),d.timestamp);
			} catch( e ) {
				haxe_CallStack.lastException = e;
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			}
			break;
		case "USER_UPDATE":
			break;
		case "VOICE_SERVER_UPDATE":
			break;
		case "VOICE_STATE_UPDATE":
			break;
		case "WEBHOOKS_UPDATE":
			break;
		default:
			haxe_Log.trace("Unhandled event " + m.t,{ fileName : "com/raidandfade/haxicord/DiscordClient.hx", lineNumber : 431, className : "com.raidandfade.haxicord.DiscordClient", methodName : "receiveEvent"});
		}
	}
	,setStatus: function(status) {
		var msg = { "op" : 3, "d" : status};
		if(msg.d.status == null) {
			msg.d.status = this.user.presence.status;
		}
		if(msg.d.afk == null) {
			msg.d.afk = false;
		}
		if(msg.d.since == null) {
			msg.d.since = null;
		}
		if(msg.d.game == null) {
			msg.d.game = null;
		}
		this.sendWs(msg);
	}
	,setActivity: function(activity) {
		this.setStatus({ "game" : activity});
	}
	,getInviteLink: function(perms) {
		if(perms == null) {
			perms = 0;
		}
		var clid = this.user.id.id;
		var permstr = "";
		if(perms != 0) {
			permstr = "&perms=" + perms;
		}
		return "https://discordapp.com/api/oauth2/authorize?client_id=" + clid + "&scope=bot" + permstr;
	}
	,listVoiceRegions: function(cb) {
		this.endpoints.listVoiceRegions(cb);
	}
	,createGuild: function(guild_data,cb) {
		this.endpoints.createGuild(guild_data,cb);
	}
	,sendMessage: function(channel_id,message,cb) {
		var udmch = this.dataCache.getUserDMChannel(channel_id);
		if(udmch != null) {
			this.endpoints.sendMessage(udmch,message,cb);
		} else {
			var u = this.dataCache.getUser(channel_id);
			if(u != null) {
				this.endpoints.createDM({ recipient_id : channel_id},function(ch,e) {
					ch.sendMessage(message,cb);
				});
			} else {
				this.endpoints.sendMessage(channel_id,message,cb);
			}
		}
	}
	,getInvite: function(invite_code,cb) {
		this.endpoints.getInvite(invite_code,cb);
	}
	,joinInvite: function(invite_code,cb) {
		if(this.isBot) {
			return;
		}
		this.endpoints.acceptInvite(invite_code,cb);
	}
	,deleteInvite: function(invite_code,cb) {
		this.endpoints.deleteInvite(invite_code,cb);
	}
	,createDMGroup: function(data,cb) {
		this.endpoints.createGroupDM(data,cb);
	}
	,editUser: function(user_data,cb) {
		this.endpoints.editUser(user_data,cb);
	}
	,getGuilds: function(filter,cb) {
		this.endpoints.getGuilds(filter,cb);
	}
	,getConnections: function(cb) {
		this.endpoints.getConnections(cb);
	}
	,removeChannel: function(id) {
		var c = this.dataCache.getChannel(id);
		if(c != null && c.type != 1) {
			var gc = js_Boot.__cast(c , com_raidandfade_haxicord_types_GuildChannel);
			var g = gc.getGuild();
			if(gc.type == 0) {
				g.textChannels.remove(c.id.id);
			} else {
				g.voiceChannels.remove(c.id.id);
			}
		}
		this.dataCache.delChannel(id);
	}
	,removeMessage: function(id) {
		this.dataCache.delMessage(id);
	}
	,removeGuild: function(id) {
		this.dataCache.delGuild(id);
	}
	,removeUser: function(id) {
		this.dataCache.delUser(id);
	}
	,getGuild: function(id,cb) {
		var g = this.dataCache.getGuild(id);
		if(g != null) {
			cb(g);
		} else {
			this.endpoints.getGuild(id,function(r,e) {
				if(e != null) {
					throw new js__$Boot_HaxeError(e);
				}
				cb(r);
			});
		}
	}
	,getGuildUnsafe: function(id) {
		var g = this.dataCache.getGuild(id);
		if(g != null) {
			return g;
		} else {
			throw new js__$Boot_HaxeError("Guild not in cache. try loading it safely first!");
		}
	}
	,getDMChannels: function(cb) {
		this.endpoints.getDMChannels(function(r,e) {
			if(e != null) {
				throw js__$Boot_HaxeError.wrap(e);
			}
			cb(r);
		});
	}
	,getDMChannelsUnsafe: function() {
		return this.dataCache.getAllDMChannels();
	}
	,getChannel: function(id,cb) {
		var c = this.dataCache.getChannel(id);
		if(c != null) {
			cb(c);
		} else {
			this.endpoints.getChannel(id,function(r,e) {
				if(e != null) {
					throw js__$Boot_HaxeError.wrap(e);
				}
				cb(r);
			});
		}
	}
	,getChannelUnsafe: function(id) {
		var c = this.dataCache.getChannel(id);
		if(c != null) {
			return c;
		} else {
			c = this.dataCache.getDMChannel(id);
			if(c != null) {
				return c;
			} else {
				throw new js__$Boot_HaxeError("Channel not in cache. try loading it safely first!");
			}
		}
	}
	,getUser: function(id,cb) {
		var _gthis = this;
		var u = this.dataCache.getUser(id);
		if(u != null) {
			cb(u);
		} else {
			this.endpoints.getUser(id,function(r,e) {
				if(e != null) {
					throw js__$Boot_HaxeError.wrap(e);
				}
				_gthis.dataCache.setUser(id,r);
				cb(r);
			});
		}
	}
	,getUserUnsafe: function(id,partial) {
		if(partial == null) {
			partial = true;
		}
		var u = this.dataCache.getUser(id);
		if(u != null) {
			return u;
		} else if(partial) {
			var u1 = new com_raidandfade_haxicord_types_User(null,this);
			u1.id = new com_raidandfade_haxicord_types_Snowflake(id);
			return u1;
		} else {
			throw new js__$Boot_HaxeError("User not in cache. try loading it safely first!");
		}
	}
	,getMessage: function(id,channel_id,cb) {
		var m = this.dataCache.getMessage(id);
		if(m != null) {
			cb(m);
		} else {
			this.endpoints.getMessage(channel_id,id,function(r,e) {
				if(e != null) {
					throw js__$Boot_HaxeError.wrap(e);
				}
				cb(r);
			});
		}
	}
	,getMessageUnsafe: function(id) {
		var m = this.dataCache.getMessage(id);
		if(m != null) {
			return m;
		} else {
			throw new js__$Boot_HaxeError("Message not in cache. try loading it safely first!");
		}
	}
	,_newMessage: function(message_struct) {
		var id = message_struct.id;
		var m = this.dataCache.getMessage(id);
		if(m != null) {
			m._update(message_struct);
			return m;
		} else {
			var msg = new com_raidandfade_haxicord_types_Message(message_struct,this);
			this.dataCache.setMessage(id,msg);
			return msg;
		}
	}
	,_newUser: function(user_struct) {
		var id = user_struct.id;
		var u = this.dataCache.getUser(id);
		if(u != null) {
			u._update(user_struct);
			return u;
		} else {
			var user = new com_raidandfade_haxicord_types_User(user_struct,this);
			this.dataCache.setUser(id,user);
			return user;
		}
	}
	,_newChannel: function(channel_struct) {
		return (this.__newChannel(channel_struct))(channel_struct);
	}
	,__newChannel: function(channel_struct) {
		if(channel_struct.type == "text" || channel_struct.type == "voice") {
			channel_struct.type = channel_struct.type == "text" ? 0 : 2;
		}
		var id = channel_struct.id;
		if(channel_struct.type == 1) {
			return $bind(this,this._newDMChannel);
		}
		var chan = this.dataCache.getChannel(id);
		if(chan != null) {
			var c = js_Boot.__cast(chan , com_raidandfade_haxicord_types_GuildChannel);
			if(c.type == 0) {
				(js_Boot.__cast(chan , com_raidandfade_haxicord_types_TextChannel))._update(channel_struct);
			} else if(c.type == 2) {
				(js_Boot.__cast(chan , com_raidandfade_haxicord_types_VoiceChannel))._update(channel_struct);
			} else {
				(js_Boot.__cast(chan , com_raidandfade_haxicord_types_CategoryChannel))._update(channel_struct);
			}
			var f = function(c1,_) {
				return c1;
			};
			var c2 = c;
			return function(_1) {
				return f(c2,_1);
			};
		} else {
			var channel = (com_raidandfade_haxicord_types_Channel.fromStruct(channel_struct))(channel_struct,this);
			this.dataCache.setChannel(id,channel);
			var c3 = js_Boot.__cast(channel , com_raidandfade_haxicord_types_GuildChannel);
			try {
				this.getGuildUnsafe(c3.guild_id.id)._addChannel(c3);
			} catch( e ) {
				haxe_CallStack.lastException = e;
				var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			}
			return function(_2) {
				return channel;
			};
		}
	}
	,_newDMChannel: function(channel_struct) {
		var id = channel_struct.id;
		var dmch = this.dataCache.getDMChannel(id);
		if(dmch != null) {
			dmch._update(channel_struct);
			return dmch;
		} else {
			var channel = com_raidandfade_haxicord_types_DMChannel.fromStruct(channel_struct,this);
			this.dataCache.setDMChannel(id,channel);
			if(channel.recipient != null) {
				this.dataCache.setUserDMChannel(channel.recipient.id.id,id);
			} else if(channel.recipients != null && channel.recipients.length == 1) {
				this.dataCache.setUserDMChannel(channel.recipients[0].id.id,id);
			}
			return channel;
		}
	}
	,_newGuild: function(guild_struct) {
		var id = guild_struct.id;
		var g = this.dataCache.getGuild(id);
		if(g != null) {
			g._update(guild_struct);
			return g;
		} else {
			var guild = new com_raidandfade_haxicord_types_Guild(guild_struct,this);
			this.dataCache.setGuild(id,guild);
			return guild;
		}
	}
	,_onReady: function() {
		this.onReady();
	}
	,onReady: function() {
	}
	,onChannelCreate: function(c) {
	}
	,onChannelUpdate: function(c) {
	}
	,onChannelDelete: function(channel_id) {
	}
	,onGuildJoin: function(g) {
	}
	,onGuildLeave: function(g) {
	}
	,onGuildCreate: function(g) {
	}
	,onGuildUpdate: function(g) {
	}
	,onGuildDelete: function(guild_id) {
	}
	,onGuildEmojisUpdate: function(g,emojis) {
	}
	,onMemberJoin: function(g,m) {
	}
	,onMemberUpdate: function(g,m) {
	}
	,onMemberBan: function(g,u) {
	}
	,onMemberUnban: function(g,u) {
	}
	,onMemberLeave: function(g,u) {
	}
	,onRoleCreate: function(g,r) {
	}
	,onRoleUpdate: function(g,r) {
	}
	,onRoleDelete: function(g,role_id) {
	}
	,onMessage: function(m) {
	}
	,onMessageEdit: function(m) {
	}
	,onMessageDelete: function(message_id) {
	}
	,onReactionAdd: function(m,u,e) {
	}
	,onReactionRemove: function(m,u,e) {
	}
	,onReactionPurge: function(m) {
	}
	,onTypingStart: function(u,c,t) {
	}
	,onRawEvent: function(e,d) {
	}
	,__class__: com_raidandfade_haxicord_DiscordClient
};
var com_raidandfade_haxicord__$DiscordClient_WSPrepareData = function() { };
$hxClasses["com.raidandfade.haxicord._DiscordClient.WSPrepareData"] = com_raidandfade_haxicord__$DiscordClient_WSPrepareData;
com_raidandfade_haxicord__$DiscordClient_WSPrepareData.__name__ = true;
com_raidandfade_haxicord__$DiscordClient_WSPrepareData.Identify = function(t,s,p,c,l) {
	if(l == null) {
		l = 59;
	}
	if(c == null) {
		c = false;
	}
	if(p == null) {
		p = { "$os" : "", "$browser" : com_raidandfade_haxicord_DiscordClient.libName, "$device" : com_raidandfade_haxicord_DiscordClient.libName, "$referrer" : "", "$referring_domain" : ""};
	}
	if(s == null) {
		s = [0,1];
	}
	return { "op" : 2, "d" : { "token" : t, "properties" : p, "compress" : c, "large_threshhold" : l, "shard" : s}};
};
com_raidandfade_haxicord__$DiscordClient_WSPrepareData.Resume = function(token,session_id,sequence) {
	return { "op" : 6, "d" : { "token" : token, "session_id" : session_id, "seq" : sequence}};
};
com_raidandfade_haxicord__$DiscordClient_WSPrepareData.Heartbeat = function(seq) {
	return { "op" : 1, "d" : seq};
};
var com_raidandfade_haxicord__$DiscordClient_HeartbeatThread = function(_d,_w,_s,_b) {
	this.delay = _d / 1000 - 2;
	this.ws = _w;
	this.seq = _s;
	this.cl = _b;
	var tmp = Date.now();
	this.cl.lastbeat = tmp / 1000;
	this.going = true;
	haxe_MainLoop.addThread($bind(this,this.beat));
};
$hxClasses["com.raidandfade.haxicord._DiscordClient.HeartbeatThread"] = com_raidandfade_haxicord__$DiscordClient_HeartbeatThread;
com_raidandfade_haxicord__$DiscordClient_HeartbeatThread.__name__ = true;
com_raidandfade_haxicord__$DiscordClient_HeartbeatThread.prototype = {
	setSeq: function(_s) {
		this.seq = _s;
	}
	,getSeq: function() {
		return this.seq;
	}
	,beat: function() {
		if(Date.now() / 1000 - this.cl.lastbeat >= this.delay) {
			var tmp = Date.now();
			this.cl.lastbeat = tmp / 1000;
			this.ws.sendJson(com_raidandfade_haxicord__$DiscordClient_WSPrepareData.Heartbeat(this.seq));
		}
		haxe_Timer.delay($bind(this,this.beat),500);
	}
	,stop: function() {
		this.going = false;
	}
	,__class__: com_raidandfade_haxicord__$DiscordClient_HeartbeatThread
};
var com_raidandfade_haxicord_cachehandler_CacheMap = function(maxlen) {
	this.data = new haxe_ds_StringMap();
	this.idx = [];
	this.maxlen = maxlen;
	if(this.maxlen == 0) {
		this.idx = null;
	}
};
$hxClasses["com.raidandfade.haxicord.cachehandler.CacheMap"] = com_raidandfade_haxicord_cachehandler_CacheMap;
com_raidandfade_haxicord_cachehandler_CacheMap.__name__ = true;
com_raidandfade_haxicord_cachehandler_CacheMap.prototype = {
	set: function(id,val) {
		while(this.idx != null && this.idx.length > this.maxlen) {
			var oid = this.idx.shift();
			this.data.remove(oid);
		}
		if(this.idx != null) {
			var _this = this.data;
			if(!(__map_reserved[id] != null ? _this.existsReserved(id) : _this.h.hasOwnProperty(id))) {
				this.idx.push(id);
				var _this1 = this.data;
				if(__map_reserved[id] != null) {
					_this1.setReserved(id,val);
				} else {
					_this1.h[id] = val;
				}
			}
		} else {
			var _this2 = this.data;
			if(__map_reserved[id] != null) {
				_this2.setReserved(id,val);
			} else {
				_this2.h[id] = val;
			}
		}
	}
	,get: function(id) {
		var _this = this.data;
		if(__map_reserved[id] != null) {
			return _this.getReserved(id);
		} else {
			return _this.h[id];
		}
	}
	,remove: function(id) {
		if(this.data.remove(id)) {
			if(this.idx != null) {
				HxOverrides.remove(this.idx,id);
			}
		}
	}
	,iterator: function() {
		var _this = this.data;
		return new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
	}
	,__class__: com_raidandfade_haxicord_cachehandler_CacheMap
};
var com_raidandfade_haxicord_cachehandler_DataCache = function() { };
$hxClasses["com.raidandfade.haxicord.cachehandler.DataCache"] = com_raidandfade_haxicord_cachehandler_DataCache;
com_raidandfade_haxicord_cachehandler_DataCache.__name__ = true;
com_raidandfade_haxicord_cachehandler_DataCache.__isInterface__ = true;
com_raidandfade_haxicord_cachehandler_DataCache.prototype = {
	__class__: com_raidandfade_haxicord_cachehandler_DataCache
};
var com_raidandfade_haxicord_cachehandler_MemoryCache = function() {
	this.userDMChannels = new haxe_ds_StringMap();
	this.guildCache = new com_raidandfade_haxicord_cachehandler_CacheMap(2500);
	this.dmChannelCache = new com_raidandfade_haxicord_cachehandler_CacheMap(0);
	this.channelCache = new com_raidandfade_haxicord_cachehandler_CacheMap(0);
	this.userCache = new com_raidandfade_haxicord_cachehandler_CacheMap(0);
	this.messageCache = new com_raidandfade_haxicord_cachehandler_CacheMap(5000);
};
$hxClasses["com.raidandfade.haxicord.cachehandler.MemoryCache"] = com_raidandfade_haxicord_cachehandler_MemoryCache;
com_raidandfade_haxicord_cachehandler_MemoryCache.__name__ = true;
com_raidandfade_haxicord_cachehandler_MemoryCache.__interfaces__ = [com_raidandfade_haxicord_cachehandler_DataCache];
com_raidandfade_haxicord_cachehandler_MemoryCache.prototype = {
	setMessage: function(id,m) {
		this.messageCache.set(id,m);
	}
	,setUser: function(id,u) {
		this.userCache.set(id,u);
	}
	,setChannel: function(id,ch) {
		this.channelCache.set(id,ch);
	}
	,setDMChannel: function(id,dmch) {
		this.dmChannelCache.set(id,dmch);
	}
	,setGuild: function(id,g) {
		this.guildCache.set(id,g);
	}
	,setUserDMChannel: function(id,dmchid) {
		var _this = this.userDMChannels;
		if(__map_reserved[id] != null) {
			_this.setReserved(id,dmchid);
		} else {
			_this.h[id] = dmchid;
		}
	}
	,delMessage: function(id) {
		this.messageCache.remove(id);
	}
	,delUser: function(id) {
		this.userCache.remove(id);
	}
	,delChannel: function(id) {
		this.channelCache.remove(id);
	}
	,delDMChannel: function(id) {
		this.dmChannelCache.remove(id);
	}
	,delGuild: function(id) {
		this.guildCache.remove(id);
	}
	,delUserDMChannel: function(id) {
		this.userDMChannels.remove(id);
	}
	,getMessage: function(id) {
		return this.messageCache.get(id);
	}
	,getUser: function(id) {
		return this.userCache.get(id);
	}
	,getChannel: function(id) {
		return this.channelCache.get(id);
	}
	,getDMChannel: function(id) {
		return this.dmChannelCache.get(id);
	}
	,getGuild: function(id) {
		return this.guildCache.get(id);
	}
	,getUserDMChannel: function(id) {
		var _this = this.userDMChannels;
		if(__map_reserved[id] != null) {
			return _this.getReserved(id);
		} else {
			return _this.h[id];
		}
	}
	,getAllDMChannels: function() {
		var _g = [];
		var dm = this.dmChannelCache.iterator();
		while(dm.hasNext()) {
			var dm1 = dm.next();
			_g.push(dm1);
		}
		return _g;
	}
	,getAllGuilds: function() {
		var _g = [];
		var g = this.guildCache.iterator();
		while(g.hasNext()) {
			var g1 = g.next();
			_g.push(g1);
		}
		return _g;
	}
	,__class__: com_raidandfade_haxicord_cachehandler_MemoryCache
};
var com_raidandfade_haxicord_endpoints_Endpoints = function(_c) {
	this.globalQueue = [];
	this.limitedQueue = new haxe_ds_StringMap();
	this.rateLimitCache = new haxe_ds_StringMap();
	this.globalLocked = false;
	this.client = _c;
};
$hxClasses["com.raidandfade.haxicord.endpoints.Endpoints"] = com_raidandfade_haxicord_endpoints_Endpoints;
com_raidandfade_haxicord_endpoints_Endpoints.__name__ = true;
com_raidandfade_haxicord_endpoints_Endpoints.prototype = {
	getGateway: function(bot,cb) {
		if(bot == null) {
			bot = false;
		}
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/gateway" + (bot ? "/bot" : ""),[]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,getChannel: function(channel_id,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}",[channel_id]);
		this.callEndpoint("GET",endpoint,function(ch,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client._newChannel(ch);
				cb(tmp,null);
			}
		});
	}
	,createChannel: function(guild_id,channel_data,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/channels",[guild_id]);
		this.callEndpoint("POST",endpoint,cb,channel_data);
	}
	,modifyChannel: function(channel_id,channel_data,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}",[channel_id]);
		this.callEndpoint("PATCH",endpoint,function(ch,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client._newChannel(ch);
				cb(tmp,null);
			}
		},channel_data);
	}
	,deleteChannel: function(channel_id,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}",[channel_id]);
		this.callEndpoint("DELETE",endpoint,function(ch,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client._newChannel(ch);
				cb(tmp,null);
			}
		});
	}
	,editChannelPermissions: function(channel_id,overwrite_id,new_permission,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/permissions/{1}",[channel_id,overwrite_id]);
		this.callEndpoint("PUT",endpoint,cb,new_permission);
	}
	,deleteChannelPermission: function(channel_id,overwrite_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/permissions/{1}",[channel_id,overwrite_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,getChannelInvites: function(channel_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/invites",[channel_id]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,createChannelInvite: function(channel_id,invite,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/invites",[channel_id]);
		this.callEndpoint("POST",endpoint,cb,invite);
	}
	,getChannelPins: function(channel_id,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/pins",[channel_id]);
		this.callEndpoint("GET",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < r.length) {
					var m = r[_g1];
					++_g1;
					_g.push(_gthis.client._newMessage(m));
				}
				var msgs = _g;
				cb(msgs,null);
			}
		});
	}
	,addChannelPin: function(channel_id,message_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/pins/{1}",[channel_id,message_id]);
		this.callEndpoint("PUT",endpoint,cb,"");
	}
	,deleteChannelPin: function(channel_id,message_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/pins/{1}",[channel_id,message_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,groupDMAddRecipient: function(channel_id,user_id,access_token,nick,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/recipients/{1}",[channel_id,user_id]);
		this.callEndpoint("PUT",endpoint,cb,{ "access_token" : access_token, "nick" : nick});
	}
	,groupDMRemoveRecipient: function(channel_id,user_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/recipients/{1}",[channel_id,user_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,getMessages: function(channel_id,format,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages{1}",[channel_id,com_raidandfade_haxicord_utils_Https.queryString(format)]);
		this.callEndpoint("GET",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < r.length) {
					var m = r[_g1];
					++_g1;
					_g.push(_gthis.client._newMessage(m));
				}
				var msgs = _g;
				cb(msgs,null);
			}
		});
	}
	,getMessage: function(channel_id,message_id,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages/{1}",[channel_id,message_id]);
		this.callEndpoint("GET",endpoint,function(m,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client._newMessage(m);
				cb(tmp,null);
			}
		});
	}
	,sendMessage: function(channel_id,message,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages",[channel_id]);
		this.callEndpoint("POST",endpoint,function(m,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client._newMessage(m);
				cb(tmp,null);
			}
		},message);
	}
	,startTyping: function(channel_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/typing",[channel_id]);
		this.callEndpoint("POST",endpoint,cb,{ });
	}
	,editMessage: function(channel_id,message_id,message,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages/{1}",[channel_id,message_id]);
		this.callEndpoint("PATCH",endpoint,function(m,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client._newMessage(m);
				cb(tmp,null);
			}
		},message);
	}
	,deleteMessage: function(channel_id,message_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages/{1}",[channel_id,message_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,deleteMessages: function(channel_id,message_ids,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages/bulk-delete",[channel_id]);
		this.callEndpoint("POST",endpoint,cb,message_ids);
	}
	,createReaction: function(channel_id,message_id,emoji,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages/{1}/reactions/{2}/@me",[channel_id,message_id,emoji]);
		this.callEndpoint("PUT",endpoint,cb);
	}
	,deleteOwnReaction: function(channel_id,message_id,emoji,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages/{1}/reactions/{2}/@me",[channel_id,message_id,emoji]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,deleteUserReaction: function(channel_id,message_id,user_id,emoji,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages/{1}/reactions/{2}/{3}",[channel_id,message_id,emoji,user_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,getReactions: function(channel_id,message_id,emoji,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages/{1}/reactions/{2}",[channel_id,message_id,emoji]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,listEmojis: function(guild_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/emojis",[guild_id]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,getEmoji: function(guild_id,emoji_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/emojis/{1}",[guild_id,emoji_id]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,createEmoji: function(guild_id,emoji,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/emojis",[guild_id]);
		this.callEndpoint("POST",endpoint,cb,emoji);
	}
	,modifyEmoji: function(guild_id,emoji_id,emoji,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/emojis/{1}",[guild_id,emoji_id]);
		this.callEndpoint("PATCH",endpoint,cb,emoji);
	}
	,removeEmoji: function(guild_id,emoji_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/emojis/{1}",[guild_id,emoji_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,deleteAllReactions: function(channel_id,message_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/messages/{1}/reactions",[channel_id,message_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,createGuild: function(guild_data,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds",[]);
		this.callEndpoint("POST",endpoint,function(g,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client._newGuild(g);
				cb(tmp,null);
			}
		},guild_data);
	}
	,getGuild: function(guild_id,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}",[guild_id]);
		this.callEndpoint("GET",endpoint,function(g,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client._newGuild(g);
				cb(tmp,null);
			}
		});
	}
	,getAuditLogs: function(guild_id,filter,cb) {
		if(filter == null) {
			filter = { };
		}
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/audit-logs{1}",[guild_id,com_raidandfade_haxicord_utils_Https.queryString(filter)]);
		this.callEndpoint("GET",endpoint,function(al,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				cb(al,null);
			}
		});
	}
	,modifyGuild: function(guild_id,guild_data,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}",[guild_id]);
		this.callEndpoint("PATCH",endpoint,function(g,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client._newGuild(g);
				cb(tmp,null);
			}
		},guild_data);
	}
	,deleteGuild: function(guild_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}",[guild_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,getChannels: function(guild_id,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/channels",[guild_id]);
		this.callEndpoint("GET",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < r.length) {
					var c = r[_g1];
					++_g1;
					_g.push(_gthis.client._newChannel(c));
				}
				var channels = _g;
				cb(channels,null);
			}
		});
	}
	,moveChannel: function(guild_id,changes,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/channels",[guild_id]);
		this.callEndpoint("PATCH",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < r.length) {
					var c = r[_g1];
					++_g1;
					_g.push(_gthis.client._newChannel(c));
				}
				var channels = _g;
				cb(channels,null);
			}
		});
	}
	,getGuildMember: function(guild_id,user_id,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/members/{1}",[guild_id,user_id]);
		this.callEndpoint("GET",endpoint,function(gm,e) {
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client.getGuildUnsafe(guild_id)._newMember(gm);
				cb(tmp,null);
			}
		});
	}
	,getGuildMembers: function(guild_id,format,cb) {
		var _gthis = this;
		var endpoint = com_raidandfade_haxicord_utils_Https.queryString(format);
		var endpoint1 = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/members{1}",[guild_id,endpoint]);
		this.callEndpoint("GET",endpoint1,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < r.length) {
					var gm = r[_g1];
					++_g1;
					_g.push(_gthis.client.getGuildUnsafe(guild_id)._newMember(gm));
				}
				var members = _g;
				cb(members,null);
			}
		});
	}
	,addGuildMember: function(guild_id,user_id,member_data,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/members/{1}",[guild_id,user_id]);
		this.callEndpoint("PUT",endpoint,function(gm,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client.getGuildUnsafe(guild_id)._newMember(gm);
				cb(tmp,null);
			}
		},member_data);
	}
	,editGuildMember: function(guild_id,user_id,member_data,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/members/{1}",[guild_id,user_id]);
		this.callEndpoint("PATCH",endpoint,cb,member_data);
	}
	,changeNickname: function(guild_id,nickname,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/members/@me/nick",[guild_id]);
		this.callEndpoint("PATCH",endpoint,cb,{ nick : nickname});
	}
	,giveMemberRole: function(guild_id,user_id,role_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/members/{1}/roles/{2}",[guild_id,user_id,role_id]);
		this.callEndpoint("PUT",endpoint,cb,{ });
	}
	,takeMemberRole: function(guild_id,user_id,role_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/members/{1}/roles/{2}",[guild_id,user_id,role_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,kickMember: function(guild_id,user_id,reason,cb) {
		if(reason == null) {
			reason = "";
		}
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/members/{1}?reason={2}",[guild_id,user_id,reason]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,getGuildBans: function(guild_id,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/bans",[guild_id]);
		this.callEndpoint("GET",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < r.length) {
					var gm = r[_g1];
					++_g1;
					_g.push(_gthis.client._newUser(gm));
				}
				var users = _g;
				cb(users,null);
			}
		});
	}
	,banMember: function(guild_id,user_id,days,reason,cb) {
		if(reason == null) {
			reason = "";
		}
		if(days == null) {
			days = 7;
		}
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/bans/{1}?delete-message-days={2}&reason={3}",[guild_id,user_id,days == null ? "null" : "" + days,reason]);
		this.callEndpoint("PUT",endpoint,cb,{ });
	}
	,unbanMember: function(guild_id,user_id,reason,cb) {
		if(reason == null) {
			reason = "";
		}
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/bans/{1}",[guild_id,user_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,getGuildRoles: function(guild_id,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/roles",[guild_id]);
		this.callEndpoint("GET",endpoint,function(res,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < res.length) {
					var r = res[_g1];
					++_g1;
					_g.push(_gthis.client.getGuildUnsafe(guild_id)._newRole(r));
				}
				var roles = _g;
				cb(roles,null);
			}
		});
	}
	,createRole: function(guild_id,role_data,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/roles",[guild_id]);
		this.callEndpoint("POST",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client.getGuildUnsafe(guild_id)._newRole(r);
				cb(tmp,null);
			}
		},role_data);
	}
	,moveRole: function(guild_id,changes,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/roles",[guild_id]);
		this.callEndpoint("PATCH",endpoint,function(res,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < res.length) {
					var r = res[_g1];
					++_g1;
					_g.push(_gthis.client.getGuildUnsafe(guild_id)._newRole(r));
				}
				var roles = _g;
				cb(roles,null);
			}
		});
	}
	,editRole: function(guild_id,role_id,role_data,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/roles/{1}",[guild_id,role_id]);
		this.callEndpoint("PATCH",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var tmp = _gthis.client.getGuildUnsafe(guild_id);
				cb(new com_raidandfade_haxicord_types_Role(r,tmp,_gthis.client),null);
			}
		},role_data);
	}
	,deleteRole: function(guild_id,role_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/roles/{1}",[guild_id,role_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,getPruneCount: function(guild_id,days,cb) {
		if(days == null) {
			days = 1;
		}
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/prune{1}",[guild_id,com_raidandfade_haxicord_utils_Https.queryString({ days : days})]);
		this.callEndpoint("GET",endpoint,function(res,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(-1,e);
			} else {
				cb(res.pruned,null);
			}
		});
	}
	,beginPrune: function(guild_id,days,cb) {
		if(days == null) {
			days = 1;
		}
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/prune{1}",[guild_id,com_raidandfade_haxicord_utils_Https.queryString({ days : days})]);
		this.callEndpoint("POST",endpoint,function(res,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(-1,e);
			} else {
				cb(res.pruned,null);
			}
		});
	}
	,guildVoiceRegions: function(guild_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/regions",[guild_id]);
		this.callEndpoint("GET",endpoint,function(res,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				cb(res,null);
			}
		});
	}
	,getIntegrations: function(guild_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/integrations",[guild_id]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,addIntegration: function(guild_id,int_data,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/integrations",[guild_id]);
		this.callEndpoint("POST",endpoint,cb,int_data);
	}
	,editIntegration: function(guild_id,int_id,int_data,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/integrations/{1}",[guild_id,int_id]);
		this.callEndpoint("PATCH",endpoint,cb,int_data);
	}
	,deleteIntegration: function(guild_id,int_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/integrations/{1}",[guild_id,int_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,syncIntegration: function(guild_id,int_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/integrations/{1}/sync",[guild_id,int_id]);
		this.callEndpoint("POST",endpoint,cb);
	}
	,getWidget: function(guild_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/embed",[guild_id]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,modifyWidget: function(guild_id,edits,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/embed",[guild_id]);
		this.callEndpoint("PATCH",endpoint,cb,edits);
	}
	,getInvites: function(guild_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/invites",[guild_id]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,getInvite: function(invite_code,with_counts,cb) {
		if(with_counts == null) {
			with_counts = true;
		}
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/invite/{0}?with_counts={1}",[invite_code,with_counts ? "true" : "false"]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,deleteInvite: function(invite_code,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/invite/{0}",[invite_code]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,acceptInvite: function(invite_code,cb) {
		com_raidandfade_haxicord_logger_Logger.err("DEPRECATION WARNING: AcceptInvite is being removed march 23rd. Please use AddGuildMember instead.");
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/invite/{0}",[invite_code]);
		this.callEndpoint("POST",endpoint,cb);
	}
	,getUser: function(user_id,cb) {
		if(user_id == null) {
			user_id = "@me";
		}
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/users/{0}",[user_id]);
		this.callEndpoint("GET",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				cb(new com_raidandfade_haxicord_types_User(r,_gthis.client),null);
			}
		});
	}
	,editUser: function(user_data,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/users/@me",[]);
		this.callEndpoint("PATCH",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				cb(new com_raidandfade_haxicord_types_User(r,_gthis.client),null);
			}
		},user_data);
	}
	,getGuilds: function(filter,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/users/@me/guilds",[]);
		this.callEndpoint("GET",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < r.length) {
					var g = r[_g1];
					++_g1;
					_g.push(_gthis.client._newGuild(g));
				}
				var guilds = _g;
				cb(guilds,null);
			}
		});
	}
	,leaveGuild: function(guild_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/users/@me/guilds/{0}",[guild_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,getDMChannels: function(cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/users/@me/channels",[]);
		this.callEndpoint("GET",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var _g = [];
				var _g1 = 0;
				while(_g1 < r.length) {
					var c = r[_g1];
					++_g1;
					_g.push(_gthis.client._newDMChannel(c));
				}
				var channels = _g;
				cb(channels,null);
			}
		});
	}
	,createDM: function(data,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/users/@me/channels",[]);
		this.callEndpoint("POST",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var channels = _gthis.client._newDMChannel(r);
				cb(channels,null);
			}
		},data);
	}
	,createGroupDM: function(data,cb) {
		var _gthis = this;
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/users/@me/channels",[]);
		this.callEndpoint("POST",endpoint,function(r,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				var channels = _gthis.client._newDMChannel(r);
				cb(channels,null);
			}
		},data);
	}
	,getConnections: function(cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/users/@me/connections",[]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,listVoiceRegions: function(cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/voice/regions",[]);
		this.callEndpoint("GET",endpoint,function(res,e) {
			if(cb == null) {
				return;
			}
			if(e != null) {
				cb(null,e);
			} else {
				cb(res,null);
			}
		});
	}
	,createWebhook: function(channel_id,data,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/webhooks",[channel_id]);
		this.callEndpoint("POST",endpoint,cb,data);
	}
	,getChannelWebhooks: function(channel_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/channels/{0}/webhooks",[channel_id]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,getGuildWebhooks: function(guild_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/guilds/{0}/webhooks",[guild_id]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,getWebhook: function(webhook_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/webhooks/{0}",[webhook_id]);
		this.callEndpoint("GET",endpoint,cb);
	}
	,editWebhook: function(webhook_id,data,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/webhooks/{0}",[webhook_id]);
		this.callEndpoint("PATCH",endpoint,cb,data);
	}
	,deleteWebhook: function(webhook_id,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/webhooks/{0}",[webhook_id]);
		this.callEndpoint("DELETE",endpoint,cb);
	}
	,getWebhookWithToken: function(webhook_id,webhook_token,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/webhooks/{0}/{1}",[webhook_id,webhook_token]);
		this.callEndpoint("GET",endpoint,cb,{ },false);
	}
	,editWebhookWithToken: function(webhook_id,webhook_token,data,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/webhooks/{0}/{1}",[webhook_id,webhook_token]);
		this.callEndpoint("PATCH",endpoint,cb,data,false);
	}
	,deleteWebhookWithToken: function(webhook_id,webhook_token,cb) {
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/webhooks/{0}/{1}",[webhook_id,webhook_token]);
		this.callEndpoint("DELETE",endpoint,cb,{ },false);
	}
	,executeWebhook: function(webhook_id,webhook_token,data,wait,cb) {
		if(wait == null) {
			wait = false;
		}
		var endpoint = new com_raidandfade_haxicord_endpoints_EndpointPath("/webhooks/{0}/{1}?wait={2}",[webhook_id,webhook_token,wait ? "true" : "false"]);
		this.callEndpoint("POST",endpoint,cb,data,false);
	}
	,unQueueGlobally: function() {
		this.globalLocked = false;
		var _g = 0;
		var _g1 = this.globalQueue;
		while(_g < _g1.length) {
			var call = _g1[_g];
			++_g;
			this.callEndpoint(call.method,call.endpoint,call.callback,call.data,call.authorized);
		}
	}
	,callEndpoint: function(method,endpoint,callback,data,authorized) {
		if(authorized == null) {
			authorized = true;
		}
		var _gthis = this;
		var origCall = new com_raidandfade_haxicord_endpoints_EndpointCall(method,endpoint,callback,data,authorized);
		if(this.globalLocked) {
			this.globalQueue.push(origCall);
			return;
		}
		var rateLimitName = endpoint.getRoute();
		var _this = this.rateLimitCache;
		if(__map_reserved[rateLimitName] != null ? _this.existsReserved(rateLimitName) : _this.h.hasOwnProperty(rateLimitName)) {
			var _this1 = this.rateLimitCache;
			if((__map_reserved[rateLimitName] != null ? _this1.getReserved(rateLimitName) : _this1.h[rateLimitName]).remaining <= 0) {
				var _this2 = this.limitedQueue;
				if(__map_reserved[rateLimitName] != null ? _this2.existsReserved(rateLimitName) : _this2.h.hasOwnProperty(rateLimitName)) {
					var _this3 = this.limitedQueue;
					(__map_reserved[rateLimitName] != null ? _this3.getReserved(rateLimitName) : _this3.h[rateLimitName]).push(origCall);
				} else {
					var this1 = this.limitedQueue;
					var value = [];
					var _this4 = this1;
					if(__map_reserved[rateLimitName] != null) {
						_this4.setReserved(rateLimitName,value);
					} else {
						_this4.h[rateLimitName] = value;
					}
					var _this5 = this.limitedQueue;
					(__map_reserved[rateLimitName] != null ? _this5.getReserved(rateLimitName) : _this5.h[rateLimitName]).push(origCall);
				}
				return;
			} else {
				var _this6 = this.rateLimitCache;
				var tmp = __map_reserved[rateLimitName] != null ? _this6.getReserved(rateLimitName) : _this6.h[rateLimitName];
				tmp.remaining--;
			}
		} else {
			var this11 = this.rateLimitCache;
			var value1 = new com_raidandfade_haxicord_endpoints_RateLimit(1,0,-1);
			var _this7 = this11;
			if(__map_reserved[rateLimitName] != null) {
				_this7.setReserved(rateLimitName,value1);
			} else {
				_this7.h[rateLimitName] = value1;
			}
		}
		var popQueue = function(rateLimitName1) {
			var popQueue1;
			var _this8 = _gthis.limitedQueue;
			if(__map_reserved[rateLimitName1] != null ? _this8.existsReserved(rateLimitName1) : _this8.h.hasOwnProperty(rateLimitName1)) {
				var _this9 = _gthis.limitedQueue;
				popQueue1 = (__map_reserved[rateLimitName1] != null ? _this9.getReserved(rateLimitName1) : _this9.h[rateLimitName1]) != null;
			} else {
				popQueue1 = false;
			}
			if(popQueue1) {
				var _this10 = _gthis.limitedQueue;
				if((__map_reserved[rateLimitName1] != null ? _this10.getReserved(rateLimitName1) : _this10.h[rateLimitName1]).length > 0) {
					var _this11 = _gthis.limitedQueue;
					var _this12 = __map_reserved[rateLimitName1] != null ? _this11.getReserved(rateLimitName1) : _this11.h[rateLimitName1];
					var result = new Array(_this12.length);
					var _g = 0;
					var _g1 = _this12.length;
					while(_g < _g1) {
						var i = _g++;
						result[i] = _this12[i];
					}
					var arrCopy = result;
					var this12 = _gthis.limitedQueue;
					var value2 = [];
					var _this13 = this12;
					if(__map_reserved[rateLimitName1] != null) {
						_this13.setReserved(rateLimitName1,value2);
					} else {
						_this13.h[rateLimitName1] = value2;
					}
					var _g2 = 0;
					var _g11 = arrCopy.length;
					while(_g2 < _g11) {
						var calli = _g2++;
						var call = arrCopy[calli];
						_gthis.callEndpoint(call.method,call.endpoint,call.callback,call.data,call.authorized);
					}
				}
			}
		};
		var _callback = function(origCall1,data1,headers) {
			if(__map_reserved["x-ratelimit-global"] != null ? headers.existsReserved("x-ratelimit-global") : headers.h.hasOwnProperty("x-ratelimit-global")) {
				if((__map_reserved["x-ratelimit-global"] != null ? headers.getReserved("x-ratelimit-global") : headers.h["x-ratelimit-global"]) == "true") {
					_gthis.globalLocked = true;
					_gthis.globalQueue.push(origCall1);
					var _callback1 = __map_reserved["retry-after"] != null ? headers.getReserved("retry-after") : headers.h["retry-after"];
					_gthis.globalTimer = haxe_Timer.delay($bind(_gthis,_gthis.unQueueGlobally),Std.parseInt(_callback1));
					return;
				}
			}
			if(__map_reserved["x-ratelimit-reset"] != null ? headers.existsReserved("x-ratelimit-reset") : headers.h.hasOwnProperty("x-ratelimit-reset")) {
				var limit = Std.parseInt(__map_reserved["x-ratelimit-limit"] != null ? headers.getReserved("x-ratelimit-limit") : headers.h["x-ratelimit-limit"]);
				var remaining = Std.parseInt(__map_reserved["x-ratelimit-remaining"] != null ? headers.getReserved("x-ratelimit-remaining") : headers.h["x-ratelimit-remaining"]);
				var reset = parseFloat(__map_reserved["x-ratelimit-reset"] != null ? headers.getReserved("x-ratelimit-reset") : headers.h["x-ratelimit-reset"]);
				var this13 = _gthis.rateLimitCache;
				var value3 = new com_raidandfade_haxicord_endpoints_RateLimit(limit,remaining,reset);
				var _this14 = this13;
				if(__map_reserved[rateLimitName] != null) {
					_this14.setReserved(rateLimitName,value3);
				} else {
					_this14.h[rateLimitName] = value3;
				}
				if(remaining == 0) {
					var delay = (reset - new Date().getTime() / 1000 | 0) * 1000 + 500;
					var waitForLimit = function(rateLimitName2,rateLimit) {
						var this14 = _gthis.rateLimitCache;
						var value4 = new com_raidandfade_haxicord_endpoints_RateLimit(limit,limit,-1);
						var _this15 = this14;
						if(__map_reserved[rateLimitName2] != null) {
							_this15.setReserved(rateLimitName2,value4);
						} else {
							_this15.h[rateLimitName2] = value4;
						}
						popQueue(rateLimitName2);
					};
					var f = waitForLimit;
					var rateLimitName3 = rateLimitName;
					var _this16 = _gthis.rateLimitCache;
					var rateLimit1 = __map_reserved[rateLimitName] != null ? _this16.getReserved(rateLimitName) : _this16.h[rateLimitName];
					var f1 = function() {
						f(rateLimitName3,rateLimit1);
					};
					haxe_Timer.delay(f1,delay);
				}
				if(remaining != 0) {
					var _this17 = _gthis.limitedQueue;
					if(__map_reserved[rateLimitName] != null ? _this17.existsReserved(rateLimitName) : _this17.h.hasOwnProperty(rateLimitName)) {
						popQueue(rateLimitName);
					}
				}
			} else {
				var this15 = _gthis.rateLimitCache;
				var value5 = new com_raidandfade_haxicord_endpoints_RateLimit(50,50,-1);
				var _this18 = this15;
				if(__map_reserved[rateLimitName] != null) {
					_this18.setReserved(rateLimitName,value5);
				} else {
					_this18.h[rateLimitName] = value5;
				}
				popQueue(rateLimitName);
			}
			if(callback == null) {
				return;
			}
			if(data1.status < 200 || data1.status >= 300) {
				callback(null,{ error : data1.error, data : data1.data});
			} else {
				callback(data1.data,null);
			}
		};
		var path = endpoint.getPath();
		var f2 = _callback;
		var origCall2 = origCall;
		this.rawCallEndpoint(method,path,function(data2,headers1) {
			f2(origCall2,data2,headers1);
		},data,authorized);
		return;
	}
	,rawCallEndpoint: function(method,endpoint,callback,data,authorized) {
		if(authorized == null) {
			authorized = true;
		}
		var _gthis = this;
		if(callback == null) {
			callback = function(f,a) {
			};
		}
		var reqstart = Date.now() / 1000;
		var latency_cb = function(f1,a1) {
			var latency_cb1 = Date.now() / 1000;
			_gthis.client.api_latency = latency_cb1 - reqstart;
			callback(f1,a1);
		};
		method = method.toUpperCase();
		if(["GET","HEAD","POST","PUT","PATCH","DELETE","OPTIONS"].indexOf(method) == -1) {
			throw new js__$Boot_HaxeError("Invalid Method Request");
		}
		var url = com_raidandfade_haxicord_endpoints_Endpoints.BASEURL + "v" + com_raidandfade_haxicord_DiscordClient.gatewayVersion + endpoint;
		var token = "Bot " + this.client.token;
		var headers = new haxe_ds_StringMap();
		if(authorized) {
			if(__map_reserved["Authorization"] != null) {
				headers.setReserved("Authorization",token);
			} else {
				headers.h["Authorization"] = token;
			}
		}
		var value = com_raidandfade_haxicord_DiscordClient.userAgent;
		if(__map_reserved["User-Agent"] != null) {
			headers.setReserved("User-Agent",value);
		} else {
			headers.h["User-Agent"] = value;
		}
		if(__map_reserved["Content-Type"] != null) {
			headers.setReserved("Content-Type","application/json");
		} else {
			headers.h["Content-Type"] = "application/json";
		}
		if(["POST","PATCH"].indexOf(method) > -1 && data == null) {
			if(__map_reserved["Content-Length"] != null) {
				headers.setReserved("Content-Length","0");
			} else {
				headers.h["Content-Length"] = "0";
			}
		}
		try {
			com_raidandfade_haxicord_utils_Https.makeRequest(url,method,latency_cb,data,headers,false);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "com/raidandfade/haxicord/endpoints/Endpoints.hx", lineNumber : 1390, className : "com.raidandfade.haxicord.endpoints.Endpoints", methodName : "rawCallEndpoint"});
			haxe_Log.trace(haxe_CallStack.toString(haxe_CallStack.exceptionStack()),{ fileName : "com/raidandfade/haxicord/endpoints/Endpoints.hx", lineNumber : 1391, className : "com.raidandfade.haxicord.endpoints.Endpoints", methodName : "rawCallEndpoint"});
		}
	}
	,__class__: com_raidandfade_haxicord_endpoints_Endpoints
};
var com_raidandfade_haxicord_endpoints_RateLimit = function(_l,_rm,_rs) {
	this.limit = _l;
	this.remaining = _rm;
	this.reset = _rs;
};
$hxClasses["com.raidandfade.haxicord.endpoints.RateLimit"] = com_raidandfade_haxicord_endpoints_RateLimit;
com_raidandfade_haxicord_endpoints_RateLimit.__name__ = true;
com_raidandfade_haxicord_endpoints_RateLimit.prototype = {
	toString: function() {
		return "RateLimit(" + this.remaining + "/" + this.limit + " until " + this.reset + ")";
	}
	,__class__: com_raidandfade_haxicord_endpoints_RateLimit
};
var com_raidandfade_haxicord_endpoints_EndpointCall = function(_m,_e,_c,_d,_a) {
	if(_a == null) {
		_a = true;
	}
	this.method = _m;
	this.endpoint = _e;
	this.callback = _c;
	this.data = _d;
	this.authorized = _a;
};
$hxClasses["com.raidandfade.haxicord.endpoints.EndpointCall"] = com_raidandfade_haxicord_endpoints_EndpointCall;
com_raidandfade_haxicord_endpoints_EndpointCall.__name__ = true;
com_raidandfade_haxicord_endpoints_EndpointCall.prototype = {
	__class__: com_raidandfade_haxicord_endpoints_EndpointCall
};
var com_raidandfade_haxicord_endpoints_EndpointPath = function(_e,_d) {
	this.endpoint = _e;
	this.data = _d;
};
$hxClasses["com.raidandfade.haxicord.endpoints.EndpointPath"] = com_raidandfade_haxicord_endpoints_EndpointPath;
com_raidandfade_haxicord_endpoints_EndpointPath.__name__ = true;
com_raidandfade_haxicord_endpoints_EndpointPath.prototype = {
	getRoute: function() {
		var cur = this.endpoint;
		if(this.endpoint.charAt(1) == "c") {
			StringTools.replace(cur,"channels/{0}","channels/" + this.data[0]);
		}
		if(this.endpoint.charAt(1) == "g") {
			StringTools.replace(cur,"guilds/{0}","guilds/" + this.data[0]);
		}
		return cur;
	}
	,getPath: function() {
		var cur = this.endpoint;
		var _g = 0;
		var _g1 = this.data.length;
		while(_g < _g1) {
			var i = _g++;
			var s = this.data[i];
			var d = encodeURIComponent(s);
			cur = StringTools.replace(cur,"{" + i + "}",d);
		}
		return cur;
	}
	,__class__: com_raidandfade_haxicord_endpoints_EndpointPath
};
var com_raidandfade_haxicord_logger_Logger = function() { };
$hxClasses["com.raidandfade.haxicord.logger.Logger"] = com_raidandfade_haxicord_logger_Logger;
com_raidandfade_haxicord_logger_Logger.__name__ = true;
com_raidandfade_haxicord_logger_Logger.registerLogger = function() {
	com_raidandfade_haxicord_logger_Logger.origTrace = haxe_Log.trace;
	haxe_Log.trace = com_raidandfade_haxicord_logger_Logger.hxTrace;
};
com_raidandfade_haxicord_logger_Logger.unregisterLogger = function() {
	haxe_Log.trace = com_raidandfade_haxicord_logger_Logger.origTrace;
};
com_raidandfade_haxicord_logger_Logger.getReplaceColor = function(col) {
	return "";
};
com_raidandfade_haxicord_logger_Logger.hxTrace = function(v,infos) {
	var infostr = com_raidandfade_haxicord_logger_Logger.outPrefix.split("").join("");
	infostr = StringTools.replace(infostr,"%t",DateTools.format(new Date(),"%H:%M:%S"));
	var infostrt = infostr.split("").join("");
	var _g = 0;
	var _g1 = infostr.length - 2;
	while(_g < _g1) {
		var i = _g++;
		if(HxOverrides.substr(infostr,i,2) == "%c") {
			var ic = infostr.indexOf("}",i);
			var c = HxOverrides.substr(infostr,i + 3,ic - i - 3);
			infostrt = StringTools.replace(infostrt,infostr.substring(i,ic + 1),com_raidandfade_haxicord_logger_Logger.getReplaceColor(c));
		}
	}
	infostr = infostrt;
	try {
		if(infos != null) {
			infostr = StringTools.replace(infostr,"%fn",infos.methodName);
			infostr = StringTools.replace(infostr,"%l",infos.lineNumber == null ? "null" : "" + infos.lineNumber);
			infostr = StringTools.replace(infostr,"%f",infos.fileName);
			infostr = StringTools.replace(infostr,"%cn",HxOverrides.substr(infos.className,infos.className.lastIndexOf(".") + 1,null));
			infostr = StringTools.replace(infostr,"%cp",infos.className);
		} else {
			infostr = StringTools.replace(infostr,"<%fn","");
			infostr = StringTools.replace(infostr,":%l>","");
			infostr = StringTools.replace(infostr,"%f->","");
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	com_raidandfade_haxicord_logger_Logger.origTrace(infostr + Std.string(v),null);
};
com_raidandfade_haxicord_logger_Logger.out = function(s) {
	window.console.info(s);
};
com_raidandfade_haxicord_logger_Logger.err = function(s) {
	window.console.error(s);
};
var com_raidandfade_haxicord_types_Channel = function() { };
$hxClasses["com.raidandfade.haxicord.types.Channel"] = com_raidandfade_haxicord_types_Channel;
com_raidandfade_haxicord_types_Channel.__name__ = true;
com_raidandfade_haxicord_types_Channel.fromStruct = function(_chan) {
	if(_chan.type == 1) {
		return com_raidandfade_haxicord_types_DMChannel.fromStruct;
	} else {
		return com_raidandfade_haxicord_types_GuildChannel.fromStruct(_chan);
	}
};
com_raidandfade_haxicord_types_Channel.prototype = {
	getTag: function() {
		return "<#" + this.id.id + ">";
	}
	,getPermission: function(uid) {
		return 0;
	}
	,hasPermission: function(uid,p) {
		return false;
	}
	,__class__: com_raidandfade_haxicord_types_Channel
};
var com_raidandfade_haxicord_types_GuildChannel = function() { };
$hxClasses["com.raidandfade.haxicord.types.GuildChannel"] = com_raidandfade_haxicord_types_GuildChannel;
com_raidandfade_haxicord_types_GuildChannel.__name__ = true;
com_raidandfade_haxicord_types_GuildChannel.fromStruct = function(_chan) {
	if(_chan.type == 0) {
		return com_raidandfade_haxicord_types_TextChannel.fromStruct;
	}
	if(_chan.type == 2) {
		return com_raidandfade_haxicord_types_VoiceChannel.fromStruct;
	}
	if(_chan.type == 4) {
		return com_raidandfade_haxicord_types_CategoryChannel.fromStruct;
	}
	if(_chan.type == 5) {
		return com_raidandfade_haxicord_types_NewsChannel.fromStruct;
	}
	if(_chan.type == 6) {
		return com_raidandfade_haxicord_types_StoreChannel.fromStruct;
	}
	throw new js__$Boot_HaxeError("Invalid Struct");
};
com_raidandfade_haxicord_types_GuildChannel.__super__ = com_raidandfade_haxicord_types_Channel;
com_raidandfade_haxicord_types_GuildChannel.prototype = $extend(com_raidandfade_haxicord_types_Channel.prototype,{
	getGuild: function() {
		return this.client.getGuildUnsafe(this.guild_id.id);
	}
	,getInvites: function(cb) {
		this.client.endpoints.getChannelInvites(this.id.id,cb);
	}
	,createInvite: function(invite_data,cb) {
		this.client.endpoints.createChannelInvite(this.id.id,invite_data,cb);
	}
	,editChannel: function(cd,cb) {
		this.client.endpoints.modifyChannel(this.id.id,cd,cb);
	}
	,deleteChannel: function(cb) {
		this.client.endpoints.deleteChannel(this.id.id,cb);
	}
	,editPermission: function(perm,pid,cb) {
		this.client.endpoints.editChannelPermissions(this.id.id,pid,perm,cb);
	}
	,deletePermission: function(pid,cb) {
		this.client.endpoints.deleteChannelPermission(this.id.id,pid,cb);
	}
	,getPermission: function(uid) {
		var u = this.getGuild().getMemberUnsafe(uid);
		var p = u.getPermissions();
		var _g = 0;
		var _g1 = this.permission_overwrites;
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			if(x.type == com_raidandfade_haxicord_types_structs_OverwriteType.Member && x.id != uid) {
				continue;
			}
			if(x.type == com_raidandfade_haxicord_types_structs_OverwriteType.Role && u.roles.indexOf(x.id) == -1) {
				continue;
			}
			p |= x.allow;
			p &= -1 ^ x.deny;
		}
		return p;
	}
	,hasPermission: function(uid,dp) {
		return (this.getPermission(uid) & dp) == dp;
	}
	,__class__: com_raidandfade_haxicord_types_GuildChannel
});
var com_raidandfade_haxicord_types_CategoryChannel = function(_chan,_client) {
	this.client = _client;
	this.id = new com_raidandfade_haxicord_types_Snowflake(_chan.id);
	this.parent_id = new com_raidandfade_haxicord_types_Snowflake(_chan.parent_id);
	this.type = _chan.type;
	this.guild_id = new com_raidandfade_haxicord_types_Snowflake(_chan.guild_id);
	this.name = _chan.name;
	this.nsfw = _chan.nsfw;
	this.position = _chan.position;
	this.permission_overwrites = _chan.permission_overwrites;
};
$hxClasses["com.raidandfade.haxicord.types.CategoryChannel"] = com_raidandfade_haxicord_types_CategoryChannel;
com_raidandfade_haxicord_types_CategoryChannel.__name__ = true;
com_raidandfade_haxicord_types_CategoryChannel.fromStruct = function(_chan,_client) {
	return new com_raidandfade_haxicord_types_CategoryChannel(_chan,_client);
};
com_raidandfade_haxicord_types_CategoryChannel.__super__ = com_raidandfade_haxicord_types_GuildChannel;
com_raidandfade_haxicord_types_CategoryChannel.prototype = $extend(com_raidandfade_haxicord_types_GuildChannel.prototype,{
	_update: function(_chan) {
		if(_chan.name != null) {
			this.name = _chan.name;
		}
		if(_chan.position != null) {
			this.position = _chan.position;
		}
		if(_chan.permission_overwrites != null) {
			this.permission_overwrites = _chan.permission_overwrites;
		}
		if(_chan.nsfw != null) {
			this.nsfw = _chan.nsfw;
		}
	}
	,__class__: com_raidandfade_haxicord_types_CategoryChannel
});
var com_raidandfade_haxicord_types_MessageChannel = function() { };
$hxClasses["com.raidandfade.haxicord.types.MessageChannel"] = com_raidandfade_haxicord_types_MessageChannel;
com_raidandfade_haxicord_types_MessageChannel.__name__ = true;
com_raidandfade_haxicord_types_MessageChannel.__isInterface__ = true;
com_raidandfade_haxicord_types_MessageChannel.prototype = {
	__class__: com_raidandfade_haxicord_types_MessageChannel
};
var com_raidandfade_haxicord_types_DMChannel = function(_chan,_client) {
	this.client = _client;
	this.id = new com_raidandfade_haxicord_types_Snowflake(_chan.id);
	this.type = _chan.type;
	if(_chan.recipient != null) {
		this.recipient = this.client._newUser(_chan.recipient);
		this.recipients = [this.recipient];
	}
	if(_chan.recipients != null) {
		var _g = [];
		var _g1 = 0;
		var _g2 = _chan.recipients;
		while(_g1 < _g2.length) {
			var u = _g2[_g1];
			++_g1;
			_g.push(this.client._newUser(u));
		}
		this.recipients = _g;
		if(this.recipients.length == 1) {
			this.recipient = this.recipients[0];
		}
	}
	this.last_message_id = new com_raidandfade_haxicord_types_Snowflake(_chan.last_message_id);
};
$hxClasses["com.raidandfade.haxicord.types.DMChannel"] = com_raidandfade_haxicord_types_DMChannel;
com_raidandfade_haxicord_types_DMChannel.__name__ = true;
com_raidandfade_haxicord_types_DMChannel.__interfaces__ = [com_raidandfade_haxicord_types_MessageChannel];
com_raidandfade_haxicord_types_DMChannel.fromStruct = function(_chan,_client) {
	return new com_raidandfade_haxicord_types_DMChannel(_chan,_client);
};
com_raidandfade_haxicord_types_DMChannel.__super__ = com_raidandfade_haxicord_types_Channel;
com_raidandfade_haxicord_types_DMChannel.prototype = $extend(com_raidandfade_haxicord_types_Channel.prototype,{
	_update: function(_chan) {
		if(_chan.recipient != null) {
			this.recipient = this.client._newUser(_chan.recipient);
			this.recipients = [this.recipient];
		}
		if(_chan.recipients != null) {
			var _g = [];
			var _g1 = 0;
			var _g2 = _chan.recipients;
			while(_g1 < _g2.length) {
				var u = _g2[_g1];
				++_g1;
				_g.push(this.client._newUser(u));
			}
			this.recipients = _g;
			if(this.recipients.length == 1) {
				this.recipient = this.recipients[0];
			}
		}
		if(_chan.last_message_id != null) {
			this.last_message_id = new com_raidandfade_haxicord_types_Snowflake(_chan.last_message_id);
		}
	}
	,inGuild: function() {
		return false;
	}
	,sendMessage: function(mesg,cb) {
		this.client.endpoints.sendMessage(this.id.id,mesg,cb);
	}
	,addMember: function(user_id,access_token,nick,cb) {
		this.client.endpoints.groupDMAddRecipient(this.id.id,user_id,access_token,nick,cb);
	}
	,kickMember: function(user_id,cb) {
		this.client.endpoints.groupDMRemoveRecipient(this.id.id,user_id,cb);
	}
	,getMessages: function(format,cb) {
		this.client.endpoints.getMessages(this.id.id,format,cb);
	}
	,getMessage: function(mid,cb) {
		this.client.endpoints.getMessage(this.id.id,mid,cb);
	}
	,deleteMessage: function(mid,cb) {
		this.client.endpoints.deleteMessage(this.id.id,mid,cb);
	}
	,deleteMessages: function(ids,cb) {
		this.client.endpoints.deleteMessages(this.id.id,ids,cb);
	}
	,startTyping: function(cb) {
		this.client.endpoints.startTyping(this.id.id,cb);
	}
	,getPins: function(cb) {
		this.client.endpoints.getChannelPins(this.id.id,cb);
	}
	,pinMessage: function(mid,cb) {
		this.client.endpoints.addChannelPin(this.id.id,mid,cb);
	}
	,unpinMessage: function(mid,cb) {
		this.client.endpoints.deleteChannelPin(this.id.id,mid,cb);
	}
	,getPermission: function(uid) {
		return com_raidandfade_haxicord_utils_DPERMS.ADD_REACTIONS | com_raidandfade_haxicord_utils_DPERMS.SEND_MESSAGES | com_raidandfade_haxicord_utils_DPERMS.READ_MESSAGE_HISTORY | com_raidandfade_haxicord_utils_DPERMS.VIEW_CHANNEL | com_raidandfade_haxicord_utils_DPERMS.EMBED_LINKS | com_raidandfade_haxicord_utils_DPERMS.USE_EXTERNAL_EMOJIS;
	}
	,hasPermission: function(uid,dp) {
		return (this.getPermission(uid) & dp) == dp;
	}
	,__class__: com_raidandfade_haxicord_types_DMChannel
});
var com_raidandfade_haxicord_types_Guild = function(_guild,_client) {
	this.nextChancb = [];
	this.bans = [];
	this.storeChannels = new haxe_ds_StringMap();
	this.categoryChannels = new haxe_ds_StringMap();
	this.voiceChannels = new haxe_ds_StringMap();
	this.textChannels = new haxe_ds_StringMap();
	this.members = new haxe_ds_StringMap();
	this.features = [];
	this.emojis = [];
	this.roles = new haxe_ds_StringMap();
	var _gthis = this;
	this.client = _client;
	this.id = new com_raidandfade_haxicord_types_Snowflake(_guild.id);
	if(_guild.unavailable != null) {
		this.unavailable = _guild.unavailable;
	}
	if(!this.unavailable) {
		this.name = _guild.name;
		this.icon = _guild.icon;
		this.splash = _guild.splash;
		this.owner_id = new com_raidandfade_haxicord_types_Snowflake(_guild.owner_id);
		this.region = _guild.region;
		this.afk_timeout = _guild.afk_timeout;
		this.afk_channel_id = new com_raidandfade_haxicord_types_Snowflake(_guild.afk_channel_id);
		this.embed_enabled = _guild.embed_enabled;
		this.embed_channel_id = new com_raidandfade_haxicord_types_Snowflake(_guild.embed_channel_id);
		this.verification_level = _guild.verification_level;
		this.default_message_notifications = _guild.default_message_notifications;
		this.explicit_content_filter = _guild.explicit_content_filter;
		var _g = 0;
		var _g1 = _guild.roles;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			this._newRole(r);
		}
		this.emojis = _guild.emojis;
		this.features = _guild.features;
		this.mfa_level = _guild.mfa_level;
		if(_guild.widget_enabled != null) {
			this.widget_enabled = _guild.widget_enabled;
		}
		if(_guild.widget_channel_id != null) {
			this.widget_channel_id = new com_raidandfade_haxicord_types_Snowflake(_guild.widget_channel_id);
		}
		if(_guild.system_channel_id != null) {
			this.system_channel_id = new com_raidandfade_haxicord_types_Snowflake(_guild.system_channel_id);
		}
		this.max_members = _guild.max_members;
		this.max_presences = _guild.max_presences;
		this.vanity_url_code = _guild.vanity_url_code;
		this.description = _guild.description;
		this.banner = _guild.banner;
		this.boost_tier = _guild.premium_tier;
		if(_guild.premium_subscription_count != null) {
			this.boost_count = _guild.premium_subscription_count;
		}
		if(_guild.joined_at != null) {
			this.joined_at = haxe_DateUtils.fromISO8601(_guild.joined_at);
		}
		if(_guild.large != null) {
			this.large = _guild.large;
		}
		if(_guild.member_count != null) {
			this.member_count = _guild.member_count;
		}
		if(_guild.members != null) {
			var _g2 = 0;
			var _g3 = _guild.members;
			while(_g2 < _g3.length) {
				var m = _g3[_g2];
				++_g2;
				this._newMember(m);
			}
		}
		this.owner = this.getMemberUnsafe(this.owner_id.id);
		if(this.owner_id != null && this.owner_id.id != "" && this.owner == null) {
			try {
				this.getMember(this.owner_id.id,function(m1) {
					_gthis.owner = m1;
				});
			} catch( f ) {
				haxe_CallStack.lastException = f;
				var f1 = ((f) instanceof js__$Boot_HaxeError) ? f.val : f;
				haxe_Log.trace("[" + this.id.id + "] Failed to load the guild owner manually (they were not in cache and this error occured when attempting to retrieve them):",{ fileName : "com/raidandfade/haxicord/types/Guild.hx", lineNumber : 213, className : "com.raidandfade.haxicord.types.Guild", methodName : "new"});
				haxe_Log.trace(f1,{ fileName : "com/raidandfade/haxicord/types/Guild.hx", lineNumber : 214, className : "com.raidandfade.haxicord.types.Guild", methodName : "new"});
			}
		}
		if(_guild.channels != null) {
			var _g21 = 0;
			var _g31 = _guild.channels;
			while(_g21 < _g31.length) {
				var c = _g31[_g21];
				++_g21;
				var ch = js_Boot.__cast(_client._newChannel(c) , com_raidandfade_haxicord_types_GuildChannel);
				ch.guild_id = this.id;
				if(((ch) instanceof com_raidandfade_haxicord_types_TextChannel)) {
					var key = ch.id.id;
					var value = js_Boot.__cast(ch , com_raidandfade_haxicord_types_TextChannel);
					var _this = this.textChannels;
					if(__map_reserved[key] != null) {
						_this.setReserved(key,value);
					} else {
						_this.h[key] = value;
					}
				} else if(((ch) instanceof com_raidandfade_haxicord_types_VoiceChannel)) {
					var key1 = ch.id.id;
					var value1 = js_Boot.__cast(ch , com_raidandfade_haxicord_types_VoiceChannel);
					var _this1 = this.voiceChannels;
					if(__map_reserved[key1] != null) {
						_this1.setReserved(key1,value1);
					} else {
						_this1.h[key1] = value1;
					}
				} else {
					var key2 = ch.id.id;
					var value2 = js_Boot.__cast(ch , com_raidandfade_haxicord_types_CategoryChannel);
					var _this2 = this.categoryChannels;
					if(__map_reserved[key2] != null) {
						_this2.setReserved(key2,value2);
					} else {
						_this2.h[key2] = value2;
					}
				}
			}
		}
		if(_guild.presences != null) {
			this.presences = _guild.presences;
		}
	}
};
$hxClasses["com.raidandfade.haxicord.types.Guild"] = com_raidandfade_haxicord_types_Guild;
com_raidandfade_haxicord_types_Guild.__name__ = true;
com_raidandfade_haxicord_types_Guild.prototype = {
	_update: function(_guild) {
		var _gthis = this;
		if(_guild.unavailable != null) {
			this.unavailable = _guild.unavailable;
		}
		if(!this.unavailable) {
			if(_guild.name != null) {
				this.name = _guild.name;
			}
			if(_guild.icon != null) {
				this.icon = _guild.icon;
			}
			if(_guild.splash != null) {
				this.splash = _guild.splash;
			}
			if(_guild.region != null) {
				this.region = _guild.region;
			}
			if(_guild.afk_timeout != null) {
				this.afk_timeout = _guild.afk_timeout;
			}
			if(_guild.afk_channel_id != null) {
				this.afk_channel_id = new com_raidandfade_haxicord_types_Snowflake(_guild.afk_channel_id);
			}
			if(_guild.embed_enabled != null) {
				this.embed_enabled = _guild.embed_enabled;
			}
			if(_guild.embed_channel_id != null) {
				this.embed_channel_id = new com_raidandfade_haxicord_types_Snowflake(_guild.embed_channel_id);
			}
			if(_guild.verification_level != null) {
				this.verification_level = _guild.verification_level;
			}
			if(_guild.default_message_notifications != null) {
				this.default_message_notifications = _guild.default_message_notifications;
			}
			if(_guild.roles != null) {
				var _g = 0;
				var _g1 = _guild.roles;
				while(_g < _g1.length) {
					var r = _g1[_g];
					++_g;
					this._newRole(r);
				}
			}
			if(_guild.emojis != null) {
				this.emojis = _guild.emojis;
			}
			if(_guild.features != null) {
				this.features = _guild.features;
			}
			if(_guild.mfa_level != null) {
				this.mfa_level = _guild.mfa_level;
			}
			if(_guild.joined_at != null) {
				this.joined_at = haxe_DateUtils.fromISO8601(_guild.joined_at);
			}
			if(_guild.large != null) {
				this.large = _guild.large;
			}
			if(_guild.member_count != null) {
				this.member_count = _guild.member_count;
			}
			if(_guild.members != null) {
				var _g2 = 0;
				var _g11 = _guild.members;
				while(_g2 < _g11.length) {
					var m = _g11[_g2];
					++_g2;
					this._newMember(m);
				}
			}
			if(_guild.owner_id != null) {
				this.owner_id = new com_raidandfade_haxicord_types_Snowflake(_guild.owner_id);
				this.owner = this.getMemberUnsafe(this.owner_id.id);
				if(this.owner_id != null && this.owner_id.id != "" && this.owner == null) {
					try {
						this.getMember(this.owner_id.id,function(m1) {
							_gthis.owner = m1;
						});
					} catch( f ) {
						haxe_CallStack.lastException = f;
						var f1 = ((f) instanceof js__$Boot_HaxeError) ? f.val : f;
						haxe_Log.trace("[" + this.id.id + "] Failed to load the guild owner manually (they were not in cache and this error occured when attempting to retrieve them):",{ fileName : "com/raidandfade/haxicord/types/Guild.hx", lineNumber : 304, className : "com.raidandfade.haxicord.types.Guild", methodName : "_update"});
						haxe_Log.trace(f1,{ fileName : "com/raidandfade/haxicord/types/Guild.hx", lineNumber : 305, className : "com.raidandfade.haxicord.types.Guild", methodName : "_update"});
					}
				}
			}
			if(_guild.channels != null) {
				var _g3 = 0;
				var _g12 = _guild.channels;
				while(_g3 < _g12.length) {
					var c = _g12[_g3];
					++_g3;
					var ch = js_Boot.__cast(this.client._newChannel(c) , com_raidandfade_haxicord_types_GuildChannel);
					ch.guild_id = this.id;
					if(((ch) instanceof com_raidandfade_haxicord_types_TextChannel) || ((ch) instanceof com_raidandfade_haxicord_types_NewsChannel)) {
						var key = ch.id.id;
						var value = js_Boot.__cast(ch , com_raidandfade_haxicord_types_TextChannel);
						var _this = this.textChannels;
						if(__map_reserved[key] != null) {
							_this.setReserved(key,value);
						} else {
							_this.h[key] = value;
						}
					} else if(((ch) instanceof com_raidandfade_haxicord_types_VoiceChannel)) {
						var key1 = ch.id.id;
						var value1 = js_Boot.__cast(ch , com_raidandfade_haxicord_types_VoiceChannel);
						var _this1 = this.voiceChannels;
						if(__map_reserved[key1] != null) {
							_this1.setReserved(key1,value1);
						} else {
							_this1.h[key1] = value1;
						}
					} else if(((ch) instanceof com_raidandfade_haxicord_types_CategoryChannel)) {
						var key2 = ch.id.id;
						var value2 = js_Boot.__cast(ch , com_raidandfade_haxicord_types_CategoryChannel);
						var _this2 = this.categoryChannels;
						if(__map_reserved[key2] != null) {
							_this2.setReserved(key2,value2);
						} else {
							_this2.h[key2] = value2;
						}
					} else if(((ch) instanceof com_raidandfade_haxicord_types_StoreChannel)) {
						var key3 = ch.id.id;
						var value3 = js_Boot.__cast(ch , com_raidandfade_haxicord_types_StoreChannel);
						var _this3 = this.storeChannels;
						if(__map_reserved[key3] != null) {
							_this3.setReserved(key3,value3);
						} else {
							_this3.h[key3] = value3;
						}
					} else {
						throw new js__$Boot_HaxeError("Unsupported channel type in guild initialization");
					}
				}
			}
			if(_guild.presences != null) {
				this.presences = _guild.presences;
			}
			if(_guild.widget_enabled != null) {
				this.widget_enabled = _guild.widget_enabled;
			}
			if(_guild.widget_channel_id != null) {
				this.widget_channel_id = new com_raidandfade_haxicord_types_Snowflake(_guild.widget_channel_id);
			}
			if(_guild.system_channel_id != null) {
				this.system_channel_id = new com_raidandfade_haxicord_types_Snowflake(_guild.system_channel_id);
			}
			if(_guild.max_members != null) {
				this.max_members = _guild.max_members;
			}
			if(_guild.max_presences != null) {
				this.max_presences = _guild.max_presences;
			}
			if(_guild.vanity_url_code != null) {
				this.vanity_url_code = _guild.vanity_url_code;
			}
			if(_guild.description != null) {
				this.description = _guild.description;
			}
			if(_guild.banner != null) {
				this.banner = _guild.banner;
			}
			if(_guild.premium_tier != null) {
				this.boost_tier = _guild.premium_tier;
			}
			if(_guild.premium_subscription_count != null) {
				this.boost_count = _guild.premium_subscription_count;
			}
		}
	}
	,_updateEmojis: function(e) {
		this.emojis = e;
	}
	,_addChannel: function(ch) {
		if(this.nextChancb.length > 0) {
			this.nextChancb.splice(0,1)[0](ch);
		}
		if(((ch) instanceof com_raidandfade_haxicord_types_TextChannel) || ((ch) instanceof com_raidandfade_haxicord_types_NewsChannel)) {
			var key = ch.id.id;
			var value = js_Boot.__cast(ch , com_raidandfade_haxicord_types_TextChannel);
			var _this = this.textChannels;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,value);
			} else {
				_this.h[key] = value;
			}
		} else if(((ch) instanceof com_raidandfade_haxicord_types_VoiceChannel)) {
			var key1 = ch.id.id;
			var value1 = js_Boot.__cast(ch , com_raidandfade_haxicord_types_VoiceChannel);
			var _this1 = this.voiceChannels;
			if(__map_reserved[key1] != null) {
				_this1.setReserved(key1,value1);
			} else {
				_this1.h[key1] = value1;
			}
		} else if(((ch) instanceof com_raidandfade_haxicord_types_CategoryChannel)) {
			var key2 = ch.id.id;
			var value2 = js_Boot.__cast(ch , com_raidandfade_haxicord_types_CategoryChannel);
			var _this2 = this.categoryChannels;
			if(__map_reserved[key2] != null) {
				_this2.setReserved(key2,value2);
			} else {
				_this2.h[key2] = value2;
			}
		} else if(((ch) instanceof com_raidandfade_haxicord_types_StoreChannel)) {
			var key3 = ch.id.id;
			var value3 = js_Boot.__cast(ch , com_raidandfade_haxicord_types_StoreChannel);
			var _this3 = this.storeChannels;
			if(__map_reserved[key3] != null) {
				_this3.setReserved(key3,value3);
			} else {
				_this3.h[key3] = value3;
			}
		} else {
			throw new js__$Boot_HaxeError("Unsupported channel type in channel addition in guild");
		}
	}
	,_addBan: function(user) {
		this.bans.push(user);
	}
	,_removeBan: function(user) {
		HxOverrides.remove(this.bans,user);
	}
	,_newMember: function(memberStruct) {
		var key = memberStruct.user.id;
		var _this = this.members;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var key1 = memberStruct.user.id;
			var _this1 = this.members;
			var m = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
			m._update(memberStruct);
			return m;
		} else {
			var member = new com_raidandfade_haxicord_types_GuildMember(memberStruct,this,this.client);
			var key2 = memberStruct.user.id;
			var _this2 = this.members;
			if(__map_reserved[key2] != null) {
				_this2.setReserved(key2,member);
			} else {
				_this2.h[key2] = member;
			}
			return member;
		}
	}
	,_newRole: function(roleStruct) {
		var key = roleStruct.id;
		var _this = this.roles;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var key1 = roleStruct.id;
			var _this1 = this.roles;
			var r = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
			r._update(roleStruct);
			return r;
		} else {
			var role = new com_raidandfade_haxicord_types_Role(roleStruct,this,this.client);
			var key2 = roleStruct.id;
			var _this2 = this.roles;
			if(__map_reserved[key2] != null) {
				_this2.setReserved(key2,role);
			} else {
				_this2.h[key2] = role;
			}
			var key3 = roleStruct.id;
			var _this3 = this.roles;
			if(__map_reserved[key3] != null) {
				return _this3.getReserved(key3);
			} else {
				return _this3.h[key3];
			}
		}
	}
	,getChannels: function(cb) {
		this.client.endpoints.getChannels(this.id.id,cb);
	}
	,createChannel: function(cs,cb) {
		var _gthis = this;
		this.client.endpoints.createChannel(this.id.id,cs,function(c,e) {
			if(e != null) {
				cb(null,e);
			} else {
				var f = function(c1,cb1) {
					cb1(c1,null);
				};
				var cb2 = cb;
				var tmp = function(c2) {
					f(c2,cb2);
				};
				_gthis.nextChancb.push(tmp);
			}
		});
	}
	,getChannel: function(cid,cb) {
		this.client.getChannel(cid,cb);
	}
	,findChannels: function(name) {
		var rs = [];
		var cs = [];
		var _this = this.textChannels;
		var r = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(r.hasNext()) {
			var r1 = r.next();
			if(r1.name == name) {
				rs.push(js_Boot.__cast(r1 , com_raidandfade_haxicord_types_GuildChannel));
			} else if(r1.name.indexOf(name) > -1) {
				cs.push(js_Boot.__cast(r1 , com_raidandfade_haxicord_types_GuildChannel));
			}
		}
		var _this1 = this.voiceChannels;
		var r2 = new haxe_ds__$StringMap_StringMapIterator(_this1,_this1.arrayKeys());
		while(r2.hasNext()) {
			var r3 = r2.next();
			if(r3.name == name) {
				rs.push(js_Boot.__cast(r3 , com_raidandfade_haxicord_types_GuildChannel));
			} else if(r3.name.indexOf(name) > -1) {
				cs.push(js_Boot.__cast(r3 , com_raidandfade_haxicord_types_GuildChannel));
			}
		}
		var _this2 = this.categoryChannels;
		var r4 = new haxe_ds__$StringMap_StringMapIterator(_this2,_this2.arrayKeys());
		while(r4.hasNext()) {
			var r5 = r4.next();
			if(r5.name == name) {
				rs.push(js_Boot.__cast(r5 , com_raidandfade_haxicord_types_GuildChannel));
			} else if(r5.name.indexOf(name) > -1) {
				cs.push(js_Boot.__cast(r5 , com_raidandfade_haxicord_types_GuildChannel));
			}
		}
		var _this3 = this.storeChannels;
		var r6 = new haxe_ds__$StringMap_StringMapIterator(_this3,_this3.arrayKeys());
		while(r6.hasNext()) {
			var r7 = r6.next();
			if(r7.name == name) {
				rs.push(js_Boot.__cast(r7 , com_raidandfade_haxicord_types_GuildChannel));
			} else if(r7.name.indexOf(name) > -1) {
				cs.push(js_Boot.__cast(r7 , com_raidandfade_haxicord_types_GuildChannel));
			}
		}
		var _g = 0;
		while(_g < cs.length) {
			var r8 = cs[_g];
			++_g;
			rs.push(r8);
		}
		return rs;
	}
	,moveChannels: function() {
	}
	,getInvites: function(cb) {
		this.client.endpoints.getInvites(this.id.id,cb);
	}
	,getRoles: function(cb) {
		this.client.endpoints.getGuildRoles(this.id.id,cb);
	}
	,getRole: function(rid) {
		var _this = this.roles;
		if(__map_reserved[rid] != null) {
			return _this.getReserved(rid);
		} else {
			return _this.h[rid];
		}
	}
	,findRoles: function(name) {
		var rs = [];
		var cs = [];
		var _this = this.roles;
		var r = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(r.hasNext()) {
			var r1 = r.next();
			if(r1.name == name) {
				rs.push(r1);
			} else if(r1.name.indexOf(name) > -1) {
				cs.push(r1);
			}
		}
		var _g = 0;
		while(_g < cs.length) {
			var r2 = cs[_g];
			++_g;
			rs.push(r2);
		}
		return rs;
	}
	,createRole: function(rs,cb) {
		this.client.endpoints.createRole(this.id.id,rs,cb);
	}
	,moveRole: function(rs,cb) {
	}
	,getMember: function(mid,cb) {
		var _this = this.members;
		if(__map_reserved[mid] != null ? _this.existsReserved(mid) : _this.h.hasOwnProperty(mid)) {
			var _this1 = this.members;
			var tmp = __map_reserved[mid] != null ? _this1.getReserved(mid) : _this1.h[mid];
			cb(tmp);
		} else {
			this.client.endpoints.getGuildMember(this.id.id,mid,function(r,e) {
				if(e != null) {
					throw js__$Boot_HaxeError.wrap(e);
				}
				cb(r);
			});
		}
	}
	,getMemberUnsafe: function(id) {
		var _this = this.members;
		if(__map_reserved[id] != null ? _this.existsReserved(id) : _this.h.hasOwnProperty(id)) {
			var _this1 = this.members;
			if(__map_reserved[id] != null) {
				return _this1.getReserved(id);
			} else {
				return _this1.h[id];
			}
		} else {
			return null;
		}
	}
	,getAllMembers: function(cb) {
		haxe_Log.trace("Call to unfinished function getAllMembers. Please don't do this",{ fileName : "com/raidandfade/haxicord/types/Guild.hx", lineNumber : 595, className : "com.raidandfade.haxicord.types.Guild", methodName : "getAllMembers"});
	}
	,getMembers: function(format,cb) {
		this.client.endpoints.getGuildMembers(this.id.id,format,cb);
	}
	,addMember: function(uid,mdata,cb) {
		this.client.endpoints.addGuildMember(this.id.id,uid,mdata,cb);
	}
	,changeNickname: function(s,m,cb) {
		if(m == null || m.user.id.id == this.client.user.id.id) {
			this.client.endpoints.changeNickname(this.id.id,s,cb);
		} else {
			this.client.endpoints.editGuildMember(this.id.id,m.user.id.id,{ nick : s},cb);
		}
	}
	,getBans: function(cb) {
		this.client.endpoints.getGuildBans(this.id.id,cb);
	}
	,getPruneCount: function(days,cb) {
		this.client.endpoints.getPruneCount(this.id.id,days,cb);
	}
	,getAuditLog: function(filter,cb) {
		this.client.endpoints.getAuditLogs(this.id.id,filter,cb);
	}
	,beginPrune: function(days,cb) {
		this.client.endpoints.beginPrune(this.id.id,days,cb);
	}
	,getVoiceRegions: function(cb) {
		this.client.endpoints.guildVoiceRegions(this.id.id,cb);
	}
	,getIntegrations: function(cb) {
		this.client.endpoints.getIntegrations(this.id.id,cb);
	}
	,addIntegration: function(intd,cb) {
		this.client.endpoints.addIntegration(this.id.id,intd,cb);
	}
	,editIntegration: function(intid,intd,cb) {
		this.client.endpoints.editIntegration(this.id.id,intid,intd,cb);
	}
	,syncIntegration: function(intid,cb) {
		this.client.endpoints.syncIntegration(this.id.id,intid,cb);
	}
	,deleteIntegration: function(intid,cb) {
		this.client.endpoints.deleteIntegration(this.id.id,intid,cb);
	}
	,getWidget: function(cb) {
		this.client.endpoints.getWidget(this.id.id,cb);
	}
	,editWidget: function(wd,cb) {
		this.client.endpoints.modifyWidget(this.id.id,wd,cb);
	}
	,edit: function(gd,cb) {
		this.client.endpoints.modifyGuild(this.id.id,gd,cb);
	}
	,'delete': function(cb) {
		this.client.endpoints.deleteGuild(this.id.id,cb);
	}
	,leave: function(cb) {
		this.client.endpoints.leaveGuild(this.id.id,cb);
	}
	,listEmojis: function(cb) {
		this.client.endpoints.listEmojis(this.id.id,cb);
	}
	,getEmoji: function(emoji_id,cb) {
		this.client.endpoints.getEmoji(this.id.id,emoji_id,cb);
	}
	,createEmoji: function(emoji,cb) {
		this.client.endpoints.createEmoji(this.id.id,emoji,cb);
	}
	,modifyEmoji: function(emoji_id,emoji,cb) {
		this.client.endpoints.modifyEmoji(this.id.id,emoji_id,emoji,cb);
	}
	,removeEmoji: function(emoji_id,cb) {
		this.client.endpoints.removeEmoji(this.id.id,emoji_id,cb);
	}
	,__class__: com_raidandfade_haxicord_types_Guild
};
var com_raidandfade_haxicord_types_GuildMember = function(_mem,_guild,_client) {
	this.client = _client;
	this.guild = _guild;
	this.user = this.client._newUser(_mem.user);
	this.displayName = _mem.nick == null ? _mem.user.username : _mem.nick;
	this.roles = _mem.roles;
	this.joined_at_iso = _mem.joined_at;
	this.joined_at_cache = null;
	this.deaf = _mem.deaf;
	this.mute = _mem.mute;
};
$hxClasses["com.raidandfade.haxicord.types.GuildMember"] = com_raidandfade_haxicord_types_GuildMember;
com_raidandfade_haxicord_types_GuildMember.__name__ = true;
com_raidandfade_haxicord_types_GuildMember.prototype = {
	get_joined_at: function() {
		if(this.joined_at_cache == null) {
			this.joined_at_cache = haxe_DateUtils.fromISO8601(this.joined_at_iso);
		}
		return this.joined_at_cache;
	}
	,_update: function(_mem) {
		if(_mem.user != null) {
			this.user = this.client._newUser(_mem.user);
		}
		this.displayName = _mem.nick == null ? _mem.user.username : _mem.nick;
		if(_mem.roles != null) {
			this.roles = _mem.roles;
		}
		if(_mem.joined_at != null) {
			this.joined_at_iso = _mem.joined_at;
			this.joined_at_cache = null;
		}
	}
	,_updatePresence: function(_pre) {
		this.displayName = _pre.nick == null ? this.user.username : _pre.nick;
		if(_pre.roles != null) {
			this.roles = _pre.roles;
		}
		_pre.guild_id = null;
		_pre.nick = null;
		_pre.roles = null;
		this.user.presence = _pre;
	}
	,addRole: function(rid,cb) {
		this.client.endpoints.giveMemberRole(this.guild.id.id,this.user.id.id,rid,cb);
	}
	,removeRole: function(rid,cb) {
		this.client.endpoints.takeMemberRole(this.guild.id.id,this.user.id.id,rid,cb);
	}
	,hasRole: function(rid) {
		var _g = 0;
		var _g1 = this.roles;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r == rid) {
				return true;
			}
		}
		return false;
	}
	,edit: function(data,cb) {
		this.client.endpoints.editGuildMember(this.guild.id.id,this.user.id.id,data,cb);
	}
	,changeNickname: function(s,cb) {
		this.guild.changeNickname(s,this,cb);
	}
	,kick: function(reason,cb) {
		if(reason == null) {
			reason = "";
		}
		this.client.endpoints.kickMember(this.guild.id.id,this.user.id.id,reason,cb);
	}
	,ban: function(days,reason,cb) {
		if(reason == null) {
			reason = "";
		}
		if(days == null) {
			days = 0;
		}
		this.client.endpoints.banMember(this.guild.id.id,this.user.id.id,days,reason,cb);
	}
	,hasPermissions: function(p) {
		return (this.getPermissions() & p) == p;
	}
	,getPermissions: function() {
		var p = 0;
		var _g = 0;
		var _g1 = this.roles;
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			var _this = this.guild.roles;
			p |= (__map_reserved[x] != null ? _this.getReserved(x) : _this.h[x]).permissions;
		}
		return p;
	}
	,getPermissionList: function() {
		return com_raidandfade_haxicord_utils_DPERMS.PermsAsList(this.getPermissions());
	}
	,getPermissionStrings: function() {
		return com_raidandfade_haxicord_utils_DPERMS.PermsAsNamedList(this.getPermissions());
	}
	,__class__: com_raidandfade_haxicord_types_GuildMember
	,__properties__: {get_joined_at:"get_joined_at"}
};
var com_raidandfade_haxicord_types_Message = function(_msg,_client) {
	this.reactions = [];
	this.embeds = [];
	this.attachments = [];
	this.mention_roles = [];
	this.mentions = [];
	this.client = _client;
	this.id = new com_raidandfade_haxicord_types_Snowflake(_msg.id);
	this.channel_id = new com_raidandfade_haxicord_types_Snowflake(_msg.channel_id);
	this.author = this.client._newUser(_msg.author);
	this.content = _msg.content;
	if(_msg.timestamp != null) {
		this.timestamp_str = _msg.timestamp;
	}
	if(_msg.edited_timestamp != null) {
		this.edited_timestamp_str = _msg.edited_timestamp;
	}
	this.tts = _msg.tts;
	this.mention_everyone = _msg.mention_everyone;
	var _g = [];
	var _g1 = 0;
	var _g2 = _msg.mentions;
	while(_g1 < _g2.length) {
		var u = _g2[_g1];
		++_g1;
		_g.push(this.client._newUser(u));
	}
	this.mentions = _g;
	var _g3 = [];
	var _g4 = 0;
	var _g5 = _msg.mention_roles;
	while(_g4 < _g5.length) {
		var r = _g5[_g4];
		++_g4;
		var _this = (js_Boot.__cast(this.client.getChannelUnsafe(_msg.channel_id) , com_raidandfade_haxicord_types_GuildChannel)).getGuild().roles;
		_g3.push(__map_reserved[r] != null ? _this.getReserved(r) : _this.h[r]);
	}
	this.mention_roles = _g3;
	if(_msg.attachments != null) {
		this.attachments = _msg.attachments;
	}
	this.embeds = _msg.embeds;
	if(_msg.reactions != null) {
		this.reactions = _msg.reactions;
	}
	if(_msg.nonce != null) {
		try {
			this.nonce = new com_raidandfade_haxicord_types_Snowflake(_msg.nonce);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			this.nonce = null;
		}
	}
	this.pinned = _msg.pinned;
	this.webhook_id = _msg.webhook_id;
	if(_msg.type != null) {
		this.type = _msg.type;
	}
	if(_msg.activity != null) {
		this.activity = _msg.activity;
	}
	if(_msg.application != null) {
		this.application = _msg.application;
	}
};
$hxClasses["com.raidandfade.haxicord.types.Message"] = com_raidandfade_haxicord_types_Message;
com_raidandfade_haxicord_types_Message.__name__ = true;
com_raidandfade_haxicord_types_Message.prototype = {
	get_timestamp: function() {
		return haxe_DateUtils.fromISO8601(this.timestamp_str);
	}
	,get_edited_timestamp: function() {
		return haxe_DateUtils.fromISO8601(this.edited_timestamp_str);
	}
	,_update: function(_msg) {
		if(_msg.edited_timestamp != null) {
			this.edited_timestamp_str = _msg.edited_timestamp;
		}
		if(_msg.content != null) {
			this.content = _msg.content;
		}
		if(_msg.tts != null) {
			this.tts = _msg.tts;
		}
		if(_msg.mention_everyone != null) {
			this.mention_everyone = _msg.mention_everyone;
		}
		if(_msg.mentions != null) {
			var _g = [];
			var _g1 = 0;
			var _g2 = _msg.mentions;
			while(_g1 < _g2.length) {
				var u = _g2[_g1];
				++_g1;
				_g.push(this.client._newUser(u));
			}
			this.mentions = _g;
		}
		if(_msg.mention_roles != null) {
			var _g3 = [];
			var _g11 = 0;
			var _g21 = _msg.mention_roles;
			while(_g11 < _g21.length) {
				var r = _g21[_g11];
				++_g11;
				var _this = (js_Boot.__cast(this.client.getChannelUnsafe(_msg.channel_id) , com_raidandfade_haxicord_types_GuildChannel)).getGuild().roles;
				_g3.push(__map_reserved[r] != null ? _this.getReserved(r) : _this.h[r]);
			}
			this.mention_roles = _g3;
		}
		if(_msg.attachments != null) {
			this.attachments = _msg.attachments;
		}
		if(_msg.embeds != null) {
			this.embeds = _msg.embeds;
		}
		if(_msg.reactions != null) {
			this.reactions = _msg.reactions;
		}
		if(_msg.nonce != null) {
			this.nonce = new com_raidandfade_haxicord_types_Snowflake(_msg.nonce);
		}
		if(_msg.pinned != null) {
			this.pinned = _msg.pinned;
		}
		if(_msg.webhook_id != null) {
			this.webhook_id = _msg.webhook_id;
		}
		if(_msg.type != null) {
			this.type = _msg.type;
		}
		if(_msg.activity != null) {
			this.activity = _msg.activity;
		}
		if(_msg.application != null) {
			this.application = _msg.application;
		}
	}
	,_addReaction: function(_u,_e) {
		this.reactions.push({ who : _u.id.id, emoji : _e});
	}
	,_delReaction: function(_u,_e) {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.reactions;
		while(_g1 < _g2.length) {
			var r = _g2[_g1];
			++_g1;
			if(!(r.who == _u.id.id && r.emoji == _e)) {
				_g.push(r);
			}
		}
		this.reactions = _g;
	}
	,_purgeReactions: function() {
		this.reactions = [];
	}
	,pin: function(cb) {
		(js_Boot.__cast(this.client.getChannelUnsafe(this.channel_id.id) , com_raidandfade_haxicord_types_MessageChannel)).pinMessage(this.id.id,cb);
	}
	,unpin: function(cb) {
		(js_Boot.__cast(this.client.getChannelUnsafe(this.channel_id.id) , com_raidandfade_haxicord_types_MessageChannel)).unpinMessage(this.id.id,cb);
	}
	,getChannel: function() {
		return js_Boot.__cast(this.client.getChannelUnsafe(this.channel_id.id) , com_raidandfade_haxicord_types_MessageChannel);
	}
	,inGuild: function() {
		return this.getChannel().inGuild();
	}
	,getMember: function() {
		if(this.inGuild()) {
			return this.getGuild().getMemberUnsafe(this.author.id.id);
		} else {
			return null;
		}
	}
	,getGuild: function() {
		if(this.inGuild()) {
			return (js_Boot.__cast(this.getChannel() , com_raidandfade_haxicord_types_TextChannel)).getGuild();
		} else {
			return null;
		}
	}
	,reply: function(msg,cb) {
		this.client.endpoints.sendMessage(this.channel_id.id,msg,cb);
	}
	,edit: function(msg,cb) {
		this.client.endpoints.editMessage(this.channel_id.id,this.id.id,msg,cb);
	}
	,'delete': function(cb) {
		this.client.endpoints.deleteMessage(this.channel_id.id,this.id.id,cb);
	}
	,getReactions: function(e,cb) {
		this.client.endpoints.getReactions(this.channel_id.id,this.id.id,e,cb);
	}
	,react: function(e,cb) {
		this.client.endpoints.createReaction(this.channel_id.id,this.id.id,e,cb);
	}
	,unreact: function(e,cb) {
		this.client.endpoints.deleteOwnReaction(this.channel_id.id,this.id.id,e,cb);
	}
	,removeReaction: function(e,uid,cb) {
		this.client.endpoints.deleteUserReaction(this.channel_id.id,this.id.id,uid,e,cb);
	}
	,removeAllReactions: function(cb) {
		this.client.endpoints.deleteAllReactions(this.channel_id.id,this.id.id,cb);
	}
	,getPermission: function(channel_overrides) {
		if(channel_overrides == null) {
			channel_overrides = false;
		}
		if(channel_overrides || !this.inGuild()) {
			return this.getChannel().getPermission(this.author.id.id);
		} else {
			return this.getMember().getPermissions();
		}
	}
	,hasPermission: function(p,channel_overrides) {
		if(channel_overrides == null) {
			channel_overrides = false;
		}
		if(channel_overrides || !this.inGuild()) {
			if(!this.getChannel().hasPermission(this.author.id.id,p)) {
				return this.getMember().hasPermissions(com_raidandfade_haxicord_utils_DPERMS.ADMINISTRATOR);
			} else {
				return true;
			}
		} else if(!(this.getMember().hasPermissions(p) || this.getMember().hasPermissions(com_raidandfade_haxicord_utils_DPERMS.ADMINISTRATOR))) {
			return this.getGuild().owner_id == this.author.id;
		} else {
			return true;
		}
	}
	,__class__: com_raidandfade_haxicord_types_Message
	,__properties__: {get_edited_timestamp:"get_edited_timestamp",get_timestamp:"get_timestamp"}
};
var com_raidandfade_haxicord_types_TextChannel = function(_chan,_client) {
	this.client = _client;
	this.id = new com_raidandfade_haxicord_types_Snowflake(_chan.id);
	this.type = _chan.type;
	this.parent_id = new com_raidandfade_haxicord_types_Snowflake(_chan.parent_id);
	this.guild_id = new com_raidandfade_haxicord_types_Snowflake(_chan.guild_id);
	this.name = _chan.name;
	this.nsfw = _chan.nsfw;
	this.position = _chan.position;
	this.permission_overwrites = _chan.permission_overwrites;
	this.topic = _chan.topic;
	this.last_message_id = new com_raidandfade_haxicord_types_Snowflake(_chan.last_message_id);
	if(_chan.rate_limit_per_user != null) {
		this.rate_limit_per_user = _chan.rate_limit_per_user;
	}
	if(_chan.last_pin_timestamp != null) {
		this.last_pin_timestamp = _chan.last_pin_timestamp;
	}
};
$hxClasses["com.raidandfade.haxicord.types.TextChannel"] = com_raidandfade_haxicord_types_TextChannel;
com_raidandfade_haxicord_types_TextChannel.__name__ = true;
com_raidandfade_haxicord_types_TextChannel.__interfaces__ = [com_raidandfade_haxicord_types_MessageChannel];
com_raidandfade_haxicord_types_TextChannel.fromStruct = function(_chan,_client) {
	return new com_raidandfade_haxicord_types_TextChannel(_chan,_client);
};
com_raidandfade_haxicord_types_TextChannel.__super__ = com_raidandfade_haxicord_types_GuildChannel;
com_raidandfade_haxicord_types_TextChannel.prototype = $extend(com_raidandfade_haxicord_types_GuildChannel.prototype,{
	_update: function(_chan) {
		if(_chan.name != null) {
			this.name = _chan.name;
		}
		if(_chan.position != null) {
			this.position = _chan.position;
		}
		if(_chan.permission_overwrites != null) {
			this.permission_overwrites = _chan.permission_overwrites;
		}
		if(_chan.topic != null) {
			this.topic = _chan.topic;
		}
		if(_chan.nsfw != null) {
			this.nsfw = _chan.nsfw;
		}
		if(_chan.rate_limit_per_user != null) {
			this.rate_limit_per_user = _chan.rate_limit_per_user;
		}
		if(_chan.last_pin_timestamp != null) {
			this.last_pin_timestamp = _chan.last_pin_timestamp;
		}
	}
	,inGuild: function() {
		return true;
	}
	,sendMessage: function(mesg,cb) {
		this.client.endpoints.sendMessage(this.id.id,mesg,cb);
	}
	,getMessages: function(format,cb) {
		this.client.endpoints.getMessages(this.id.id,format,cb);
	}
	,getMessage: function(mid,cb) {
		this.client.endpoints.getMessage(this.id.id,mid,cb);
	}
	,deleteMessage: function(mid,cb) {
		this.client.endpoints.deleteMessage(this.id.id,mid,cb);
	}
	,deleteMessages: function(ids,cb) {
		this.client.endpoints.deleteMessages(this.id.id,ids,cb);
	}
	,startTyping: function(cb) {
		this.client.endpoints.startTyping(this.id.id,cb);
	}
	,getPins: function(cb) {
		this.client.endpoints.getChannelPins(this.id.id,cb);
	}
	,pinMessage: function(mid,cb) {
		this.client.endpoints.addChannelPin(this.id.id,mid,cb);
	}
	,unpinMessage: function(mid,cb) {
		this.client.endpoints.deleteChannelPin(this.id.id,mid,cb);
	}
	,__class__: com_raidandfade_haxicord_types_TextChannel
});
var com_raidandfade_haxicord_types_NewsChannel = function(_chan,_client) {
	com_raidandfade_haxicord_types_TextChannel.call(this,_chan,_client);
};
$hxClasses["com.raidandfade.haxicord.types.NewsChannel"] = com_raidandfade_haxicord_types_NewsChannel;
com_raidandfade_haxicord_types_NewsChannel.__name__ = true;
com_raidandfade_haxicord_types_NewsChannel.fromStruct = function(_chan,_client) {
	return new com_raidandfade_haxicord_types_NewsChannel(_chan,_client);
};
com_raidandfade_haxicord_types_NewsChannel.__super__ = com_raidandfade_haxicord_types_TextChannel;
com_raidandfade_haxicord_types_NewsChannel.prototype = $extend(com_raidandfade_haxicord_types_TextChannel.prototype,{
	__class__: com_raidandfade_haxicord_types_NewsChannel
});
var com_raidandfade_haxicord_types_Role = function(_role,_guild,_client) {
	this.client = _client;
	this.id = new com_raidandfade_haxicord_types_Snowflake(_role.id);
	this.name = _role.name;
	this.color = _role.color;
	this.hoist = _role.hoist;
	this.position = _role.position;
	this.permissions = _role.permissions;
	this.managed = _role.managed;
	this.mentionable = _role.mentionable;
	this.guild = _guild;
};
$hxClasses["com.raidandfade.haxicord.types.Role"] = com_raidandfade_haxicord_types_Role;
com_raidandfade_haxicord_types_Role.__name__ = true;
com_raidandfade_haxicord_types_Role.prototype = {
	_update: function(_role) {
		if(_role.color != null) {
			this.color = _role.color;
		}
		if(_role.hoist != null) {
			this.hoist = _role.hoist;
		}
		if(_role.position != null) {
			this.position = _role.position;
		}
		if(_role.permissions != null) {
			this.permissions = _role.permissions;
		}
		if(_role.managed != null) {
			this.managed = _role.managed;
		}
		if(_role.mentionable != null) {
			this.mentionable = _role.mentionable;
		}
	}
	,edit: function(rd,cb) {
		this.client.endpoints.editRole(this.guild.id.id,this.id.id,rd,cb);
	}
	,'delete': function(cb) {
		this.client.endpoints.deleteRole(this.guild.id.id,this.id.id,cb);
	}
	,getPermissionList: function() {
		return com_raidandfade_haxicord_utils_DPERMS.PermsAsList(this.permissions);
	}
	,getPermissionStrings: function() {
		return com_raidandfade_haxicord_utils_DPERMS.PermsAsNamedList(this.permissions);
	}
	,__class__: com_raidandfade_haxicord_types_Role
};
var com_raidandfade_haxicord_types_Snowflake = function(flake) {
	if(flake != null) {
		this.id = flake;
		var _f = parseFloat(flake) / 4194304;
		this.timestamp = _f + 1420070400000;
	} else {
		this.id = "-1";
		this.timestamp = -1;
	}
};
$hxClasses["com.raidandfade.haxicord.types.Snowflake"] = com_raidandfade_haxicord_types_Snowflake;
com_raidandfade_haxicord_types_Snowflake.__name__ = true;
com_raidandfade_haxicord_types_Snowflake.generate = function() {
	var flake = new com_raidandfade_haxicord_types_Snowflake();
	flake.timestamp = new Date().getTime() / 1000;
	var now = flake.timestamp - 1420070400000;
	flake.id = "" + now * 4194304;
	return flake;
};
com_raidandfade_haxicord_types_Snowflake.eq = function(a,b) {
	return a.id == b.id;
};
com_raidandfade_haxicord_types_Snowflake.prototype = {
	toString: function() {
		return this.id;
	}
	,equals: function(b) {
		return this.id == b.id;
	}
	,__class__: com_raidandfade_haxicord_types_Snowflake
};
var com_raidandfade_haxicord_types_StoreChannel = function(_chan,_client) {
	this.client = _client;
	this.id = new com_raidandfade_haxicord_types_Snowflake(_chan.id);
	this.type = _chan.type;
	this.parent_id = new com_raidandfade_haxicord_types_Snowflake(_chan.parent_id);
	this.guild_id = new com_raidandfade_haxicord_types_Snowflake(_chan.guild_id);
	this.name = _chan.name;
	this.nsfw = _chan.nsfw;
	this.position = _chan.position;
	this.permission_overwrites = _chan.permission_overwrites;
};
$hxClasses["com.raidandfade.haxicord.types.StoreChannel"] = com_raidandfade_haxicord_types_StoreChannel;
com_raidandfade_haxicord_types_StoreChannel.__name__ = true;
com_raidandfade_haxicord_types_StoreChannel.fromStruct = function(_chan,_client) {
	return new com_raidandfade_haxicord_types_StoreChannel(_chan,_client);
};
com_raidandfade_haxicord_types_StoreChannel.__super__ = com_raidandfade_haxicord_types_GuildChannel;
com_raidandfade_haxicord_types_StoreChannel.prototype = $extend(com_raidandfade_haxicord_types_GuildChannel.prototype,{
	_update: function(_chan) {
		if(_chan.name != null) {
			this.name = _chan.name;
		}
		if(_chan.position != null) {
			this.position = _chan.position;
		}
		if(_chan.permission_overwrites != null) {
			this.permission_overwrites = _chan.permission_overwrites;
		}
		if(_chan.nsfw != null) {
			this.nsfw = _chan.nsfw;
		}
	}
	,inGuild: function() {
		return true;
	}
	,__class__: com_raidandfade_haxicord_types_StoreChannel
});
var com_raidandfade_haxicord_types_User = function(_user,_client) {
	this.client = _client;
	this.isLoaded = _user != null;
	if(!this.isLoaded) {
		return;
	}
	this.id = new com_raidandfade_haxicord_types_Snowflake(_user.id);
	this.tag = "<@" + this.id.id + ">";
	this.username = _user.username;
	this.discriminator = _user.discriminator;
	this.avatar = _user.avatar;
	this.avatarUrl = "https://cdn.discordapp.com/avatars/" + _user.id + "/" + _user.avatar + ".png";
	this.bot = _user.bot;
	this.presence = { status : "online"};
	if(_user.mfa_enabled != null) {
		this.mfa_enabled = _user.mfa_enabled;
	}
	if(_user.verified != null) {
		this.verified = _user.verified;
	}
	if(_user.email != null) {
		this.email = _user.email;
	}
	if(_user.flags != null) {
		this.flags = _user.flags;
	}
	if(_user.premium_type != null) {
		this.premium_type = _user.premium_type;
	}
};
$hxClasses["com.raidandfade.haxicord.types.User"] = com_raidandfade_haxicord_types_User;
com_raidandfade_haxicord_types_User.__name__ = true;
com_raidandfade_haxicord_types_User.prototype = {
	_update: function(_user) {
		if(_user.username != null) {
			this.username = _user.username;
		}
		if(_user.discriminator != null) {
			this.discriminator = _user.discriminator;
		}
		if(_user.avatar != null) {
			this.avatar = _user.avatar;
		}
		if(_user.avatar != null) {
			this.avatarUrl = "https://cdn.discordapp.com/avatars/" + _user.id + "/" + _user.avatar + ".png";
		}
		if(_user.bot != null) {
			this.bot = _user.bot;
		}
		if(_user.mfa_enabled != null) {
			this.mfa_enabled = _user.mfa_enabled;
		}
		if(_user.verified != null) {
			this.verified = _user.verified;
		}
		if(_user.email != null) {
			this.email = _user.email;
		}
		if(_user.flags != null) {
			this.flags = _user.flags;
		}
		if(_user.premium_type != null) {
			this.premium_type = _user.premium_type;
		}
	}
	,load: function() {
		if(this.isLoaded) {
			return;
		}
		this.client.getUser(this.id.id,function(_) {
		});
	}
	,__class__: com_raidandfade_haxicord_types_User
};
var com_raidandfade_haxicord_types_VoiceChannel = function(_chan,_client) {
	this.client = _client;
	this.id = new com_raidandfade_haxicord_types_Snowflake(_chan.id);
	this.type = _chan.type;
	this.parent_id = new com_raidandfade_haxicord_types_Snowflake(_chan.parent_id);
	this.guild_id = new com_raidandfade_haxicord_types_Snowflake(_chan.guild_id);
	this.name = _chan.name;
	this.nsfw = _chan.nsfw;
	this.position = _chan.position;
	this.permission_overwrites = _chan.permission_overwrites;
	this.bitrate = _chan.bitrate;
	this.user_limit = _chan.user_limit;
};
$hxClasses["com.raidandfade.haxicord.types.VoiceChannel"] = com_raidandfade_haxicord_types_VoiceChannel;
com_raidandfade_haxicord_types_VoiceChannel.__name__ = true;
com_raidandfade_haxicord_types_VoiceChannel.fromStruct = function(_chan,_client) {
	return new com_raidandfade_haxicord_types_VoiceChannel(_chan,_client);
};
com_raidandfade_haxicord_types_VoiceChannel.__super__ = com_raidandfade_haxicord_types_GuildChannel;
com_raidandfade_haxicord_types_VoiceChannel.prototype = $extend(com_raidandfade_haxicord_types_GuildChannel.prototype,{
	_update: function(_chan) {
		if(_chan.name != null) {
			this.name = _chan.name;
		}
		if(_chan.position != null) {
			this.position = _chan.position;
		}
		if(_chan.permission_overwrites != null) {
			this.permission_overwrites = _chan.permission_overwrites;
		}
		if(_chan.bitrate != null) {
			this.bitrate = _chan.bitrate;
		}
		if(_chan.user_limit != null) {
			this.user_limit = _chan.user_limit;
		}
		if(_chan.nsfw != null) {
			this.nsfw = _chan.nsfw;
		}
	}
	,__class__: com_raidandfade_haxicord_types_VoiceChannel
});
var com_raidandfade_haxicord_types_structs_OverwriteType = $hxEnums["com.raidandfade.haxicord.types.structs.OverwriteType"] = { __ename__ : true, __constructs__ : ["Role","Member"]
	,Role: {_hx_index:0,__enum__:"com.raidandfade.haxicord.types.structs.OverwriteType",toString:$estr}
	,Member: {_hx_index:1,__enum__:"com.raidandfade.haxicord.types.structs.OverwriteType",toString:$estr}
};
var com_raidandfade_haxicord_utils_DPERMS = function() { };
$hxClasses["com.raidandfade.haxicord.utils.DPERMS"] = com_raidandfade_haxicord_utils_DPERMS;
com_raidandfade_haxicord_utils_DPERMS.__name__ = true;
com_raidandfade_haxicord_utils_DPERMS.PermsAsNamedList = function(p) {
	var l = [];
	var _g = 0;
	var _g1 = com_raidandfade_haxicord_utils_DPERMS.pvals.length;
	while(_g < _g1) {
		var x = _g++;
		if((p & js_Boot.__cast(com_raidandfade_haxicord_utils_DPERMS.pvals[x] , Int)) > 0) {
			l.push(com_raidandfade_haxicord_utils_DPERMS.pnames[x]);
		}
	}
	return l;
};
com_raidandfade_haxicord_utils_DPERMS.PermsAsList = function(p) {
	var l = [];
	var _g = 0;
	var _g1 = com_raidandfade_haxicord_utils_DPERMS.pvals;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if((p & js_Boot.__cast(x , Int)) > 0) {
			l.push(x);
		}
	}
	return l;
};
com_raidandfade_haxicord_utils_DPERMS.PermsToInt = function(p) {
	var i = 0;
	var _g = 0;
	while(_g < p.length) {
		var x = p[_g];
		++_g;
		i |= x;
	}
	return i;
};
com_raidandfade_haxicord_utils_DPERMS.PermsToString = function(p) {
	var l = com_raidandfade_haxicord_utils_DPERMS.PermsAsNamedList(p);
	return l.join(" | ");
};
com_raidandfade_haxicord_utils_DPERMS.PermArrToString = function(p) {
	var result = new Array(p.length);
	var _g = 0;
	var _g1 = p.length;
	while(_g < _g1) {
		var i = _g++;
		result[i] = com_raidandfade_haxicord_utils_DPERMS.permToString(p[i]);
	}
	return result.join(" | ");
};
com_raidandfade_haxicord_utils_DPERMS.permToString = function(d) {
	return com_raidandfade_haxicord_utils_DPERMS.pnames[com_raidandfade_haxicord_utils_DPERMS.pvals.indexOf(d)];
};
var com_raidandfade_haxicord_utils_Https = function() { };
$hxClasses["com.raidandfade.haxicord.utils.Https"] = com_raidandfade_haxicord_utils_Https;
com_raidandfade_haxicord_utils_Https.__name__ = true;
com_raidandfade_haxicord_utils_Https.stringify = function(d) {
	return JSON.stringify(d);
};
com_raidandfade_haxicord_utils_Https.queryString = function(datar,startMark) {
	if(startMark == null) {
		startMark = true;
	}
	try {
		var data = js_Boot.__cast(datar , haxe_ds_StringMap);
		var s = startMark ? "?" : "";
		var c = 0;
		var k = data.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var v = __map_reserved[k1] != null ? data.getReserved(k1) : data.h[k1];
			if(c++ != 0) {
				s += "&";
			}
			s += k1 + "=" + Std.string(v);
		}
		return s;
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return "";
	}
};
com_raidandfade_haxicord_utils_Https.makeRequest = function(url,method,_callback,_d,_headers,async,isJson) {
	if(isJson == null) {
		isJson = true;
	}
	if(async == null) {
		async = true;
	}
	if(method == null) {
		method = "GET";
	}
	if(async) {
		var url1 = url;
		var method1 = method;
		var _callback1 = _callback;
		var _d1 = _d;
		var _headers1 = _headers;
		var isJson1 = isJson;
		haxe_Timer.delay(function() {
			com_raidandfade_haxicord_utils_Https._makeRequest(url1,method1,_callback1,_d1,_headers1,isJson1);
		},0);
	} else {
		com_raidandfade_haxicord_utils_Https._makeRequest(url,method,_callback,_d,_headers,isJson);
	}
};
com_raidandfade_haxicord_utils_Https.parseJson = function(st,j,forceError) {
	if(forceError == null) {
		forceError = false;
	}
	try {
		if(forceError) {
			return { "status" : st, "error" : JSON.parse(j)};
		} else {
			return { "status" : st, "data" : JSON.parse(j)};
		}
	} catch( d ) {
		haxe_CallStack.lastException = d;
		var d1 = ((d) instanceof js__$Boot_HaxeError) ? d.val : d;
		return { "status" : st, "error" : "Could not parse Json.", "Content" : j};
	}
};
com_raidandfade_haxicord_utils_Https._makeRequest = function(url,method,_callback,_d,_headers,isJson) {
	if(isJson == null) {
		isJson = true;
	}
	if(method == null) {
		method = "GET";
	}
	try {
		var _cb = function(d,e) {
			try {
				_callback(d,e);
			} catch( er ) {
				haxe_CallStack.lastException = er;
				var er1 = ((er) instanceof js__$Boot_HaxeError) ? er.val : er;
				haxe_Log.trace("UNCAUGHT ERROR IN haxe.Https.makeRequest CALLBACK.",{ fileName : "com/raidandfade/haxicord/utils/Https.hx", lineNumber : 102, className : "com.raidandfade.haxicord.utils.Https", methodName : "_makeRequest"});
				haxe_Log.trace(Std.string(er1) + haxe_CallStack.toString(haxe_CallStack.exceptionStack()),{ fileName : "com/raidandfade/haxicord/utils/Https.hx", lineNumber : 103, className : "com.raidandfade.haxicord.utils.Https", methodName : "_makeRequest"});
			}
		};
		if(_headers == null) {
			_headers = new haxe_ds_StringMap();
		}
		method = method.toUpperCase();
		if(!(__map_reserved["User-Agent"] != null ? _headers.existsReserved("User-Agent") : _headers.h.hasOwnProperty("User-Agent"))) {
			var value = com_raidandfade_haxicord_DiscordClient.userAgent;
			if(__map_reserved["User-Agent"] != null) {
				_headers.setReserved("User-Agent",value);
			} else {
				_headers.h["User-Agent"] = value;
			}
		}
		var _data = typeof(_d) == "string" ? _d : com_raidandfade_haxicord_utils_Https.stringify(_d);
		if(["POST","PUT","PATCH"].indexOf(method) > -1 && _data == null) {
			if(__map_reserved["Content-Length"] != null) {
				_headers.setReserved("Content-Length","0");
			} else {
				_headers.h["Content-Length"] = "0";
			}
		}
		var this1 = { };
		var headers = this1;
		var h = _headers.keys();
		while(h.hasNext()) {
			var h1 = h.next();
			headers[h1] = __map_reserved[h1] != null ? _headers.getReserved(h1) : _headers.h[h1];
		}
		var path = new URL(url).pathname;
		var options = { "hostname" : new URL(url).host, "path" : path, "method" : method, "headers" : headers};
		var req = js_node_Https.request(options,function(res) {
			var datas = "";
			res.on("data",function(all) {
				datas += all;
			});
			res.on("end",function() {
				var m = new haxe_ds_StringMap();
				var _g = 0;
				var _g1 = Reflect.fields(res.headers);
				while(_g < _g1.length) {
					var k = _g1[_g];
					++_g;
					var v = res.headers[k];
					var key = k.toLowerCase();
					if(__map_reserved[key] != null) {
						m.setReserved(key,v);
					} else {
						m.h[key] = v;
					}
				}
				if(res.statusCode < 200 || res.statusCode >= 300) {
					var req1 = isJson ? com_raidandfade_haxicord_utils_Https.parseJson(res.statusCode,datas,true) : { status : res.statusCode, data : datas};
					_cb(req1,m);
				} else {
					var req2 = isJson ? com_raidandfade_haxicord_utils_Https.parseJson(res.statusCode,datas) : { status : res.statusCode, data : datas};
					_cb(req2,m);
				}
			});
		});
		req.on("error",function(e1) {
			_cb({ status : 0, error : e1, data : null},null);
		});
		if(["POST","PUT","PATCH"].indexOf(method) > -1 && _data != null) {
			req.write(_data);
		}
		req.end();
	} catch( er2 ) {
		haxe_CallStack.lastException = er2;
		var er3 = ((er2) instanceof js__$Boot_HaxeError) ? er2.val : er2;
		haxe_Log.trace(haxe_CallStack.toString(haxe_CallStack.exceptionStack()),{ fileName : "com/raidandfade/haxicord/utils/Https.hx", lineNumber : 260, className : "com.raidandfade.haxicord.utils.Https", methodName : "_makeRequest"});
		_callback({ status : -1, error : Std.string(er3)},null);
	}
};
var com_raidandfade_haxicord_websocket_WebSocketConnection = function(_host) {
	this.ready = false;
	this.queue = [];
	com_raidandfade_haxicord_websocket_WebSocketConnection.host = _host;
	this.create();
};
$hxClasses["com.raidandfade.haxicord.websocket.WebSocketConnection"] = com_raidandfade_haxicord_websocket_WebSocketConnection;
com_raidandfade_haxicord_websocket_WebSocketConnection.__name__ = true;
com_raidandfade_haxicord_websocket_WebSocketConnection.prototype = {
	create: function() {
		var _gthis = this;
		haxe_Log.trace("starting",{ fileName : "com/raidandfade/haxicord/websocket/WebSocketConnection.hx", lineNumber : 67, className : "com.raidandfade.haxicord.websocket.WebSocketConnection", methodName : "create"});
		com_raidandfade_haxicord_websocket_WebSocketConnection.ws = haxe_net_WebSocket.create(com_raidandfade_haxicord_websocket_WebSocketConnection.host,[],null,false);
		com_raidandfade_haxicord_websocket_WebSocketConnection.ws.onopen = function() {
			_gthis.ready = true;
			haxe_EntryPoint.runInMainThread(function() {
				var _g = 0;
				var _g1 = _gthis.queue;
				while(_g < _g1.length) {
					var m = _g1[_g];
					++_g;
					_gthis.send(m);
				}
			});
			haxe_EntryPoint.runInMainThread($bind(_gthis,_gthis.onReady));
		};
		com_raidandfade_haxicord_websocket_WebSocketConnection.ws.onmessageString = function(m1) {
			var f = $bind(_gthis,_gthis.onMessage);
			var m2 = m1;
			haxe_EntryPoint.runInMainThread(function() {
				f(m2);
			});
		};
		var buf = new haxe_io_BytesBuffer();
		var z = js_node_Zlib.createInflate();
		com_raidandfade_haxicord_websocket_WebSocketConnection.ws.onmessageBytes = function(bytes) {
			try {
				if(bytes.toHex().length < 8 || HxOverrides.substr(bytes.toHex(),-8,null) != com_raidandfade_haxicord_websocket_WebSocketConnection.ZLIB_SUFFIX) {
					var buf1 = new haxe_io_BytesBuffer();
					buf1.addBytes(bytes,0,bytes.length);
					return;
				}
				var data = bytes.b;
				var buf2 = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,bytes.length);
				var opts_flush = js_node_Zlib.Z_SYNC_FLUSH;
				var opts_finishFlush = js_node_Zlib.Z_SYNC_FLUSH;
				z.write(buf2,null,function() {
					var x = z.read();
					var f1 = $bind(_gthis,_gthis.onMessage);
					var m3 = x;
					haxe_EntryPoint.runInMainThread(function() {
						f1(m3);
					});
				});
			} catch( e ) {
				haxe_CallStack.lastException = e;
				haxe_Log.trace(Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e) + haxe_CallStack.toString(haxe_CallStack.exceptionStack()),{ fileName : "com/raidandfade/haxicord/websocket/WebSocketConnection.hx", lineNumber : 125, className : "com.raidandfade.haxicord.websocket.WebSocketConnection", methodName : "create"});
			}
		};
		com_raidandfade_haxicord_websocket_WebSocketConnection.ws.onerror = $bind(this,this.onError);
		com_raidandfade_haxicord_websocket_WebSocketConnection.ws.onclose = $bind(this,this._onClose);
	}
	,close: function() {
		com_raidandfade_haxicord_websocket_WebSocketConnection.ws.close();
	}
	,sendJson: function(d) {
		this.send(JSON.stringify(d));
	}
	,send: function(m) {
		if(!this.ready) {
			this.queue.push(m);
		} else {
			com_raidandfade_haxicord_websocket_WebSocketConnection.ws.sendString(m);
		}
	}
	,_onClose: function(m) {
		this.ready = false;
		haxe_Log.trace("died",{ fileName : "com/raidandfade/haxicord/websocket/WebSocketConnection.hx", lineNumber : 173, className : "com.raidandfade.haxicord.websocket.WebSocketConnection", methodName : "_onClose"});
		this.onClose(m);
	}
	,onClose: function(m) {
	}
	,onReady: function() {
	}
	,onError: function(s) {
	}
	,onMessage: function(m) {
	}
	,__class__: com_raidandfade_haxicord_websocket_WebSocketConnection
};
var commands_Command = function() {
};
$hxClasses["commands.Command"] = commands_Command;
commands_Command.__name__ = true;
commands_Command.prototype = {
	shortHelp: function() {
		return this.shorthelp;
	}
	,longHelp: function() {
		return this.longhelp;
	}
	,_call: function(m,b) {
	}
	,call: function(_msg,_bot) {
		this._call(_msg,_bot);
		haxe_Log.trace("Command " + this.name + " used by : " + _msg.author.username,{ fileName : "Source/commands/Command.hx", lineNumber : 20, className : "commands.Command", methodName : "call"});
	}
	,__class__: commands_Command
};
var commands_Kick = function() {
	this.name = "kick";
	this.shorthelp = "Kicks the mentioned user.";
	this.longhelp = "Usage : `]kick user \"reason\"`";
	commands_Command.call(this);
};
$hxClasses["commands.Kick"] = commands_Kick;
commands_Kick.__name__ = true;
commands_Kick.__super__ = commands_Command;
commands_Kick.prototype = $extend(commands_Command.prototype,{
	_call: function(m,b) {
		var u = m.getMember();
		var kick = m.content.split(" ")[1].split("<@").join("").split(">").join("");
		if(lib_UserService.canKick(u)) {
			try {
				m.getGuild().getMember(m.mentions[0].id.id,function(e) {
					e.kick();
				});
				Bot.bot.getUser(kick,function(e1) {
					m.reply({ content : "User kicked : " + e1.username});
				});
			} catch( e2 ) {
				haxe_CallStack.lastException = e2;
				m.reply({ content : "An error occured while kicking : " + Std.string(((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2)});
			}
		} else {
			m.reply({ content : "You do not have the required permissions to kick that user!"});
		}
	}
	,__class__: commands_Kick
});
var commands_Mod = function() {
	commands_Command.call(this);
	this.name = "mod";
	this.shorthelp = "Get a mod!";
	this.longhelp = "Returns a mod, usage : `]mod mod_name`";
};
$hxClasses["commands.Mod"] = commands_Mod;
commands_Mod.__name__ = true;
commands_Mod.__super__ = commands_Command;
commands_Mod.prototype = $extend(commands_Command.prototype,{
	processMods: function(data) {
		var json = JSON.parse(data);
		var data1 = json.data;
		if(json.result_count > 1) {
			var b_b = "";
			var _g = 0;
			var _g1 = json.result_count;
			while(_g < _g1) {
				var o = _g++;
				b_b += Std.string(Std.string(Reflect.field(data1,"0").name) + "\n");
			}
			this.lastMessage.reply({ content : "There are multiple mods matching that input : \n" + b_b});
		} else if(json.result_count == 1) {
			var mod = Reflect.field(data1,"0");
			this.lastMessage.reply({ embed : { title : mod.name, description : mod.summary, fields : [{ name : "Id :", value : mod.id, _inline : true}]}});
		} else {
			haxe_Log.trace("Mod not found : " + HxOverrides.substr(this.lastMessage.content,this.lastMessage.content.indexOf(" "),null),{ fileName : "Source/commands/Mod.hx", lineNumber : 29, className : "commands.Mod", methodName : "processMods"});
			this.lastMessage.reply({ content : "No such mod : " + HxOverrides.substr(this.lastMessage.content,this.lastMessage.content.indexOf(" "),null)});
		}
	}
	,_call: function(m,b) {
		this.lastMessage = m;
		lib_Modio.makeRequest("https://api.mod.io/v1/games/34/mods?api_key=" + Bot.getModioKey() + "&_q=" + HxOverrides.substr(m.content,m.content.indexOf(" "),null),$bind(this,this.processMods));
	}
	,__class__: commands_Mod
});
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_CallStack = function() { };
$hxClasses["haxe.CallStack"] = haxe_CallStack;
haxe_CallStack.__name__ = true;
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			var fileName = site.getFileName();
			var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
			if(haxe_CallStack.wrapCallSite != null && fileAddr > 0) {
				fileName = HxOverrides.substr(fileName,fileAddr + 6,null);
			}
			stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var col = s.column;
		var line = s.line;
		var file = s.file;
		var s1 = s.s;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(col != null) {
			b.b += " column ";
			b.b += col == null ? "null" : "" + col;
		}
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s.method;
		var cname = s.classname;
		b.b += Std.string(cname == null ? "<unknown>" : cname);
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s.v;
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				var column = Std.parseInt(rie10.matched(4));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = true;
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_DateUtils = function() { };
$hxClasses["haxe.DateUtils"] = haxe_DateUtils;
haxe_DateUtils.__name__ = true;
haxe_DateUtils.fromISO8601 = function(iso) {
	var isoreg = new EReg("([1-9][0-9]{3}-(?:(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9])|(0[13-9]|1[0-2])-(29|30)|(0[13578]|1[02])-(31))|([1-9][0-9](?:0[48]|[2468][048]|[13579][26])|([2468][048]|[13579][26])00)-02-29)T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{1,9})?(Z|[+-][01][0-9]:[0-5][0-9])","");
	if(!isoreg.match(iso)) {
		throw new js__$Boot_HaxeError("Invalid ISO8601 date");
	}
	var year = Std.parseInt(isoreg.matched(1));
	var month = 0;
	var day = 1;
	if(isoreg.matched(2) != null) {
		month = Std.parseInt(isoreg.matched(2));
		day = Std.parseInt(isoreg.matched(3));
	} else if(isoreg.matched(4) != null) {
		month = Std.parseInt(isoreg.matched(4));
		day = Std.parseInt(isoreg.matched(5));
	} else {
		month = Std.parseInt(isoreg.matched(6));
		day = Std.parseInt(isoreg.matched(7));
	}
	var hour = Std.parseInt(isoreg.matched(10));
	var minute = Std.parseInt(isoreg.matched(11));
	var second = Std.parseInt(isoreg.matched(12));
	var fraction = parseFloat("0" + isoreg.matched(13));
	var date = new Date(year,month - 1,day,hour,minute,second);
	var properd = new Date(date.getTime() + fraction);
	return properd;
};
haxe_DateUtils.toISO8601 = function(d) {
	var y = "" + d.getFullYear();
	var mo = "" + (d.getMonth() + 1);
	var da = "" + d.getDate();
	var h = "" + d.getHours();
	var m = "" + d.getMinutes();
	var s = "" + d.getSeconds();
	var ms = "" + d.getTime() % 1000;
	if(mo.length == 1) {
		mo = "0" + mo;
	}
	if(da.length == 1) {
		da = "0" + da;
	}
	if(h.length == 1) {
		h = "0" + h;
	}
	if(m.length == 1) {
		m = "0" + m;
	}
	if(s.length == 1) {
		s = "0" + s;
	}
	if(ms.length == 1) {
		ms = "00" + ms;
	}
	if(ms.length == 2) {
		ms = "0" + ms;
	}
	var str = y + "-" + mo + "-" + da + "T" + h + ":" + m + ":" + s + "." + ms + "Z";
	return str;
};
haxe_DateUtils.getTimezoneOffset = function() {
	return new Date(null,null,null,null,null,null).getTimezoneOffset() * 60;
};
haxe_DateUtils.utcNow = function() {
	var d = new Date();
	var time = d.getTime() + haxe_DateUtils.getTimezoneOffset() * 1000;
	var utcDate = new Date(time);
	return utcDate;
};
haxe_DateUtils.main = function() {
};
var haxe_EntryPoint = function() { };
$hxClasses["haxe.EntryPoint"] = haxe_EntryPoint;
haxe_EntryPoint.__name__ = true;
haxe_EntryPoint.runInMainThread = function(f) {
	haxe_EntryPoint.pending.push(f);
};
haxe_EntryPoint.addThread = function(f) {
	haxe_EntryPoint.threadCount++;
	haxe_EntryPoint.pending.push(function() {
		f();
		haxe_EntryPoint.threadCount--;
	});
};
haxe_EntryPoint.processEvents = function() {
	while(true) {
		var f = haxe_EntryPoint.pending.shift();
		if(f == null) {
			break;
		}
		f();
	}
	var time = haxe_MainLoop.tick();
	if(!haxe_MainLoop.hasEvents() && haxe_EntryPoint.threadCount == 0) {
		return -1;
	}
	return time;
};
haxe_EntryPoint.run = function() {
	var nextTick = haxe_EntryPoint.processEvents();
	if(nextTick < 0) {
		return;
	}
	setTimeout(haxe_EntryPoint.run,nextTick);
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_MainEvent = function(f,p) {
	this.isBlocking = true;
	this.f = f;
	this.priority = p;
	this.nextRun = -Infinity;
};
$hxClasses["haxe.MainEvent"] = haxe_MainEvent;
haxe_MainEvent.__name__ = true;
haxe_MainEvent.prototype = {
	__class__: haxe_MainEvent
};
var haxe_MainLoop = function() { };
$hxClasses["haxe.MainLoop"] = haxe_MainLoop;
haxe_MainLoop.__name__ = true;
haxe_MainLoop.hasEvents = function() {
	var p = haxe_MainLoop.pending;
	while(p != null) {
		if(p.isBlocking) {
			return true;
		}
		p = p.next;
	}
	return false;
};
haxe_MainLoop.addThread = function(f) {
	haxe_EntryPoint.addThread(f);
};
haxe_MainLoop.runInMainThread = function(f) {
	haxe_EntryPoint.runInMainThread(f);
};
haxe_MainLoop.add = function(f,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(f == null) {
		throw new js__$Boot_HaxeError("Event function is null");
	}
	var e = new haxe_MainEvent(f,priority);
	var head = haxe_MainLoop.pending;
	if(head != null) {
		head.prev = e;
	}
	e.next = head;
	haxe_MainLoop.pending = e;
	return e;
};
haxe_MainLoop.sortEvents = function() {
	var list = haxe_MainLoop.pending;
	if(list == null) {
		return;
	}
	var insize = 1;
	var nmerges;
	var psize = 0;
	var qsize = 0;
	var p;
	var q;
	var e;
	var tail;
	while(true) {
		p = list;
		list = null;
		tail = null;
		nmerges = 0;
		while(p != null) {
			++nmerges;
			q = p;
			psize = 0;
			var _g = 0;
			var _g1 = insize;
			while(_g < _g1) {
				var i = _g++;
				++psize;
				q = q.next;
				if(q == null) {
					break;
				}
			}
			qsize = insize;
			while(psize > 0 || qsize > 0 && q != null) {
				if(psize == 0) {
					e = q;
					q = q.next;
					--qsize;
				} else if(qsize == 0 || q == null || (p.priority > q.priority || p.priority == q.priority && p.nextRun <= q.nextRun)) {
					e = p;
					p = p.next;
					--psize;
				} else {
					e = q;
					q = q.next;
					--qsize;
				}
				if(tail != null) {
					tail.next = e;
				} else {
					list = e;
				}
				e.prev = tail;
				tail = e;
			}
			p = q;
		}
		tail.next = null;
		if(nmerges <= 1) {
			break;
		}
		insize *= 2;
	}
	list.prev = null;
	haxe_MainLoop.pending = list;
};
haxe_MainLoop.tick = function() {
	haxe_MainLoop.sortEvents();
	var e = haxe_MainLoop.pending;
	var now = Date.now() / 1000;
	var wait = 1e9;
	while(e != null) {
		var next = e.next;
		var wt = e.nextRun - now;
		if(wt <= 0) {
			wait = 0;
			if(e.f != null) {
				e.f();
			}
		} else if(wait > wt) {
			wait = wt;
		}
		e = next;
	}
	return wait;
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = true;
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			tmp = _this2 == null ? 0 : _this2._height;
		} else {
			var _this3 = this.right;
			tmp = _this3 == null ? 0 : _this3._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = true;
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = true;
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = true;
haxe_ds_GenericCell.prototype = {
	__class__: haxe_ds_GenericCell
};
var haxe_ds_GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = true;
haxe_ds_GenericStack.prototype = {
	__class__: haxe_ds_GenericStack
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() { };
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = true;
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = true;
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_http_HttpBase = function(url) {
	this.url = url;
	this.headers = [];
	this.params = [];
	this.emptyOnData = $bind(this,this.onData);
};
$hxClasses["haxe.http.HttpBase"] = haxe_http_HttpBase;
haxe_http_HttpBase.__name__ = true;
haxe_http_HttpBase.prototype = {
	setHeader: function(name,value) {
		var _g = 0;
		var _g1 = this.headers.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.headers[i].name == name) {
				this.headers[i] = { name : name, value : value};
				return;
			}
		}
		this.headers.push({ name : name, value : value});
	}
	,addParameter: function(name,value) {
		this.params.push({ name : name, value : value});
	}
	,onData: function(data) {
	}
	,onBytes: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
	,hasOnData: function() {
		return !Reflect.compareMethods($bind(this,this.onData),this.emptyOnData);
	}
	,success: function(data) {
		this.responseBytes = data;
		this.responseAsString = null;
		if(this.hasOnData()) {
			this.onData(this.get_responseData());
		}
		this.onBytes(this.responseBytes);
	}
	,get_responseData: function() {
		if(this.responseAsString == null && this.responseBytes != null) {
			this.responseAsString = this.responseBytes.getString(0,this.responseBytes.length,haxe_io_Encoding.UTF8);
		}
		return this.responseAsString;
	}
	,__class__: haxe_http_HttpBase
	,__properties__: {get_responseData:"get_responseData"}
};
var haxe_http_HttpNodeJs = function(url) {
	haxe_http_HttpBase.call(this,url);
};
$hxClasses["haxe.http.HttpNodeJs"] = haxe_http_HttpNodeJs;
haxe_http_HttpNodeJs.__name__ = true;
haxe_http_HttpNodeJs.__super__ = haxe_http_HttpBase;
haxe_http_HttpNodeJs.prototype = $extend(haxe_http_HttpBase.prototype,{
	request: function(post) {
		var _gthis = this;
		this.responseAsString = null;
		this.responseBytes = null;
		var parsedUrl = js_node_Url.parse(this.url);
		var secure = parsedUrl.protocol == "https:";
		var host = parsedUrl.hostname;
		var path = parsedUrl.path;
		var port = parsedUrl.port != null ? Std.parseInt(parsedUrl.port) : secure ? 443 : 80;
		var h = { };
		var _g = 0;
		var _g1 = this.headers;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var arr = Reflect.field(h,i.name);
			if(arr == null) {
				arr = [];
				h[i.name] = arr;
			}
			arr.push(i.value);
		}
		if(this.postData != null || this.postBytes != null) {
			post = true;
		}
		var uri = null;
		var _g2 = 0;
		var _g3 = this.params;
		while(_g2 < _g3.length) {
			var p = _g3[_g2];
			++_g2;
			if(uri == null) {
				uri = "";
			} else {
				uri += "&";
			}
			var s = p.name;
			var uri1 = encodeURIComponent(s) + "=";
			var s1 = p.value;
			uri += uri1 + encodeURIComponent(s1);
		}
		var question = path.split("?").length <= 1;
		if(uri != null) {
			path += (question ? "?" : "&") + uri;
		}
		var opts = { protocol : parsedUrl.protocol, hostname : host, port : port, method : post ? "POST" : "GET", path : path, headers : h};
		var httpResponse = function(res) {
			res.setEncoding("binary");
			var s2 = res.statusCode;
			if(s2 != null) {
				_gthis.onStatus(s2);
			}
			var data = [];
			res.on("data",function(chunk) {
				var httpResponse1 = js_node_buffer_Buffer.from(chunk,"binary");
				data.push(httpResponse1);
			});
			res.on("end",function(_) {
				var buf = data.length == 1 ? data[0] : js_node_buffer_Buffer.concat(data);
				var httpResponse2 = buf.buffer.slice(buf.byteOffset,buf.byteOffset + buf.byteLength);
				_gthis.responseBytes = haxe_io_Bytes.ofData(httpResponse2);
				_gthis.req = null;
				if(s2 != null && s2 >= 200 && s2 < 400) {
					_gthis.success(_gthis.responseBytes);
				} else {
					_gthis.onError("Http Error #" + s2);
				}
			});
		};
		this.req = secure ? js_node_Https.request(opts,httpResponse) : js_node_Http.request(opts,httpResponse);
		if(post) {
			if(this.postData != null) {
				this.req.write(this.postData);
			} else if(this.postBytes != null) {
				this.req.setHeader("Content-Length","" + this.postBytes.length);
				this.req.write(js_node_buffer_Buffer.from(this.postBytes.b.bufferValue));
			}
		}
		this.req.end();
	}
	,__class__: haxe_http_HttpNodeJs
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var i = _g++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g2 = 0;
		var _g3 = this.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			var c = this.b[i1];
			s_b += String.fromCodePoint(chars[c >> 4]);
			s_b += String.fromCodePoint(chars[c & 15]);
		}
		return s_b;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_net_ReadyState = $hxEnums["haxe.net.ReadyState"] = { __ename__ : true, __constructs__ : ["Connecting","Open","Closing","Closed"]
	,Connecting: {_hx_index:0,__enum__:"haxe.net.ReadyState",toString:$estr}
	,Open: {_hx_index:1,__enum__:"haxe.net.ReadyState",toString:$estr}
	,Closing: {_hx_index:2,__enum__:"haxe.net.ReadyState",toString:$estr}
	,Closed: {_hx_index:3,__enum__:"haxe.net.ReadyState",toString:$estr}
};
var haxe_net_WebSocket = function() {
};
$hxClasses["haxe.net.WebSocket"] = haxe_net_WebSocket;
haxe_net_WebSocket.__name__ = true;
haxe_net_WebSocket.create = function(url,protocols,origin,debug) {
	if(debug == null) {
		debug = false;
	}
	return new haxe_net_impl_WebSocketNodejs(url);
};
haxe_net_WebSocket.defer = function(callback) {
	haxe_Timer.delay(callback,0);
};
haxe_net_WebSocket.prototype = {
	process: function() {
	}
	,sendString: function(message) {
	}
	,sendBytes: function(message) {
	}
	,close: function() {
	}
	,get_readyState: function() {
		return haxe_net_ReadyState.Closed;
	}
	,onopen: function() {
	}
	,onerror: function(message) {
	}
	,onmessageString: function(message) {
	}
	,onmessageBytes: function(message) {
	}
	,onclose: function(code) {
	}
	,__class__: haxe_net_WebSocket
	,__properties__: {get_readyState:"get_readyState"}
};
var haxe_net_impl_NodeJsWS = require("ws");
var haxe_net_impl_WebSocketNodejs = function(url,options) {
	var _gthis = this;
	haxe_net_WebSocket.call(this);
	this.impl = new haxe_net_impl_NodeJsWS(url);
	this.impl.on("open",function() {
		_gthis.onopen();
	});
	this.impl.on("close",function(c,r) {
		_gthis.onclose(c);
	});
	this.impl.on("error",function(e) {
		_gthis.onerror(e);
	});
	this.impl.on("message",function(e1) {
		var m = e1;
		if(typeof(m) == "string") {
			_gthis.onmessageString(m);
		} else if(((m) instanceof ArrayBuffer)) {
			haxe_Log.trace("Unhandled websocket onmessage " + m,{ fileName : "haxe/net/impl/WebSocketNodejs.hx", lineNumber : 35, className : "haxe.net.impl.WebSocketNodejs", methodName : "new"});
		} else if(((m) instanceof js_node_buffer_Buffer)) {
			_gthis.onmessageBytes(haxe_io_Bytes.ofData(m));
		} else {
			haxe_Log.trace("Unhandled websocket onmessage " + m,{ fileName : "haxe/net/impl/WebSocketNodejs.hx", lineNumber : 47, className : "haxe.net.impl.WebSocketNodejs", methodName : "new"});
		}
	});
};
$hxClasses["haxe.net.impl.WebSocketNodejs"] = haxe_net_impl_WebSocketNodejs;
haxe_net_impl_WebSocketNodejs.__name__ = true;
haxe_net_impl_WebSocketNodejs.__super__ = haxe_net_WebSocket;
haxe_net_impl_WebSocketNodejs.prototype = $extend(haxe_net_WebSocket.prototype,{
	sendString: function(message) {
		this.impl.send(message);
	}
	,sendBytes: function(message) {
		this.impl.send(message.b.bufferValue);
	}
	,close: function() {
		this.impl.close();
	}
	,get_readyState: function() {
		switch(this.impl.readyState) {
		case 0:
			return haxe_net_ReadyState.Connecting;
		case 1:
			return haxe_net_ReadyState.Open;
		case 2:
			return haxe_net_ReadyState.Closing;
		case 3:
			return haxe_net_ReadyState.Closed;
		default:
			throw new js__$Boot_HaxeError("Unexpected websocket state");
		}
	}
	,__class__: haxe_net_impl_WebSocketNodejs
});
var haxe_zip_Uncompress = function() { };
$hxClasses["haxe.zip.Uncompress"] = haxe_zip_Uncompress;
haxe_zip_Uncompress.__name__ = true;
haxe_zip_Uncompress.run = function(src,bufsize) {
	var data = src.b;
	var buffer = js_node_Zlib.inflateSync(js_node_buffer_Buffer.from(data.buffer,data.byteOffset,src.length),bufsize == null ? { } : { chunkSize : bufsize});
	return js_node_buffer__$Buffer_Helper.bytesOfBuffer(buffer);
};
var hscript_Const = $hxEnums["hscript.Const"] = { __ename__ : true, __constructs__ : ["CInt","CFloat","CString"]
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["f"],$_)
	,CString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Expr = $hxEnums["hscript.Expr"] = { __ename__ : true, __constructs__ : ["EConst","EIdent","EVar","EParent","EBlock","EField","EBinop","EUnop","ECall","EIf","EWhile","EFor","EBreak","EContinue","EFunction","EReturn","EArray","EArrayDecl","ENew","EThrow","ETry","EObject","ETernary","ESwitch","EDoWhile","EMeta","ECheckType"]
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EIdent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EVar: ($_=function(n,t,e) { return {_hx_index:2,n:n,t:t,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["n","t","e"],$_)
	,EParent: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EBlock: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EField: ($_=function(e,f) { return {_hx_index:5,e:e,f:f,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","f"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:6,op:op,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","e1","e2"],$_)
	,EUnop: ($_=function(op,prefix,e) { return {_hx_index:7,op:op,prefix:prefix,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","prefix","e"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:8,e:e,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","params"],$_)
	,EIf: ($_=function(cond,e1,e2) { return {_hx_index:9,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,EWhile: ($_=function(cond,e) { return {_hx_index:10,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EFor: ($_=function(v,it,e) { return {_hx_index:11,v:v,it:it,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v","it","e"],$_)
	,EBreak: {_hx_index:12,__enum__:"hscript.Expr",toString:$estr}
	,EContinue: {_hx_index:13,__enum__:"hscript.Expr",toString:$estr}
	,EFunction: ($_=function(args,e,name,ret) { return {_hx_index:14,args:args,e:e,name:name,ret:ret,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["args","e","name","ret"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","index"],$_)
	,EArrayDecl: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ENew: ($_=function(cl,params) { return {_hx_index:18,cl:cl,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cl","params"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:19,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ETry: ($_=function(e,v,t,ecatch) { return {_hx_index:20,e:e,v:v,t:t,ecatch:ecatch,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","v","t","ecatch"],$_)
	,EObject: ($_=function(fl) { return {_hx_index:21,fl:fl,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["fl"],$_)
	,ETernary: ($_=function(cond,e1,e2) { return {_hx_index:22,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,ESwitch: ($_=function(e,cases,defaultExpr) { return {_hx_index:23,e:e,cases:cases,defaultExpr:defaultExpr,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","cases","defaultExpr"],$_)
	,EDoWhile: ($_=function(cond,e) { return {_hx_index:24,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EMeta: ($_=function(name,args,e) { return {_hx_index:25,name:name,args:args,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["name","args","e"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:26,e:e,t:t,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","t"],$_)
};
var hscript_CType = $hxEnums["hscript.CType"] = { __ename__ : true, __constructs__ : ["CTPath","CTFun","CTAnon","CTParent","CTOpt","CTNamed"]
	,CTPath: ($_=function(path,params) { return {_hx_index:0,path:path,params:params,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["path","params"],$_)
	,CTFun: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["args","ret"],$_)
	,CTAnon: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["fields"],$_)
	,CTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,CTOpt: ($_=function(t) { return {_hx_index:4,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,CTNamed: ($_=function(n,t) { return {_hx_index:5,n:n,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["n","t"],$_)
};
var hscript_Error = $hxEnums["hscript.Error"] = { __ename__ : true, __constructs__ : ["EInvalidChar","EUnexpected","EUnterminatedString","EUnterminatedComment","EInvalidPreprocessor","EUnknownVariable","EInvalidIterator","EInvalidOp","EInvalidAccess","ECustom"]
	,EInvalidChar: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EUnexpected: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["s"],$_)
	,EUnterminatedString: {_hx_index:2,__enum__:"hscript.Error",toString:$estr}
	,EUnterminatedComment: {_hx_index:3,__enum__:"hscript.Error",toString:$estr}
	,EInvalidPreprocessor: ($_=function(msg) { return {_hx_index:4,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["msg"],$_)
	,EUnknownVariable: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidIterator: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidOp: ($_=function(op) { return {_hx_index:7,op:op,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["op"],$_)
	,EInvalidAccess: ($_=function(f) { return {_hx_index:8,f:f,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["f"],$_)
	,ECustom: ($_=function(msg) { return {_hx_index:9,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["msg"],$_)
};
var hscript_ModuleDecl = $hxEnums["hscript.ModuleDecl"] = { __ename__ : true, __constructs__ : ["DPackage","DImport","DClass","DTypedef"]
	,DPackage: ($_=function(path) { return {_hx_index:0,path:path,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path"],$_)
	,DImport: ($_=function(path,everything) { return {_hx_index:1,path:path,everything:everything,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path","everything"],$_)
	,DClass: ($_=function(c) { return {_hx_index:2,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
	,DTypedef: ($_=function(c) { return {_hx_index:3,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
};
var hscript_FieldAccess = $hxEnums["hscript.FieldAccess"] = { __ename__ : true, __constructs__ : ["APublic","APrivate","AInline","AOverride","AStatic","AMacro"]
	,APublic: {_hx_index:0,__enum__:"hscript.FieldAccess",toString:$estr}
	,APrivate: {_hx_index:1,__enum__:"hscript.FieldAccess",toString:$estr}
	,AInline: {_hx_index:2,__enum__:"hscript.FieldAccess",toString:$estr}
	,AOverride: {_hx_index:3,__enum__:"hscript.FieldAccess",toString:$estr}
	,AStatic: {_hx_index:4,__enum__:"hscript.FieldAccess",toString:$estr}
	,AMacro: {_hx_index:5,__enum__:"hscript.FieldAccess",toString:$estr}
};
var hscript_FieldKind = $hxEnums["hscript.FieldKind"] = { __ename__ : true, __constructs__ : ["KFunction","KVar"]
	,KFunction: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["f"],$_)
	,KVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var hscript__$Interp_Stop = $hxEnums["hscript._Interp.Stop"] = { __ename__ : true, __constructs__ : ["SBreak","SContinue","SReturn"]
	,SBreak: {_hx_index:0,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SContinue: {_hx_index:1,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SReturn: {_hx_index:2,__enum__:"hscript._Interp.Stop",toString:$estr}
};
var hscript_Interp = function() {
	this.locals = new haxe_ds_StringMap();
	this.declared = [];
	this.resetVariables();
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = true;
hscript_Interp.prototype = {
	resetVariables: function() {
		var _gthis = this;
		this.variables = new haxe_ds_StringMap();
		var _this = this.variables;
		var value = null;
		if(__map_reserved["null"] != null) {
			_this.setReserved("null",value);
		} else {
			_this.h["null"] = value;
		}
		var _this1 = this.variables;
		if(__map_reserved["true"] != null) {
			_this1.setReserved("true",true);
		} else {
			_this1.h["true"] = true;
		}
		var _this2 = this.variables;
		if(__map_reserved["false"] != null) {
			_this2.setReserved("false",false);
		} else {
			_this2.h["false"] = false;
		}
		var _this3 = this.variables;
		var value1 = Reflect.makeVarArgs(function(el) {
			var inf = _gthis.posInfos();
			var v = el.shift();
			if(el.length > 0) {
				inf.customParams = el;
			}
			haxe_Log.trace(Std.string(v),inf);
		});
		if(__map_reserved["trace"] != null) {
			_this3.setReserved("trace",value1);
		} else {
			_this3.h["trace"] = value1;
		}
	}
	,posInfos: function() {
		return { fileName : "hscript", lineNumber : 0};
	}
	,initOps: function() {
		var me = this;
		this.binops = new haxe_ds_StringMap();
		var _this = this.binops;
		var value = function(e1,e2) {
			return me.expr(e1) + me.expr(e2);
		};
		if(__map_reserved["+"] != null) {
			_this.setReserved("+",value);
		} else {
			_this.h["+"] = value;
		}
		var _this1 = this.binops;
		var value1 = function(e11,e21) {
			return me.expr(e11) - me.expr(e21);
		};
		if(__map_reserved["-"] != null) {
			_this1.setReserved("-",value1);
		} else {
			_this1.h["-"] = value1;
		}
		var _this2 = this.binops;
		var value2 = function(e12,e22) {
			return me.expr(e12) * me.expr(e22);
		};
		if(__map_reserved["*"] != null) {
			_this2.setReserved("*",value2);
		} else {
			_this2.h["*"] = value2;
		}
		var _this3 = this.binops;
		var value3 = function(e13,e23) {
			return me.expr(e13) / me.expr(e23);
		};
		if(__map_reserved["/"] != null) {
			_this3.setReserved("/",value3);
		} else {
			_this3.h["/"] = value3;
		}
		var _this4 = this.binops;
		var value4 = function(e14,e24) {
			return me.expr(e14) % me.expr(e24);
		};
		if(__map_reserved["%"] != null) {
			_this4.setReserved("%",value4);
		} else {
			_this4.h["%"] = value4;
		}
		var _this5 = this.binops;
		var value5 = function(e15,e25) {
			return me.expr(e15) & me.expr(e25);
		};
		if(__map_reserved["&"] != null) {
			_this5.setReserved("&",value5);
		} else {
			_this5.h["&"] = value5;
		}
		var _this6 = this.binops;
		var value6 = function(e16,e26) {
			return me.expr(e16) | me.expr(e26);
		};
		if(__map_reserved["|"] != null) {
			_this6.setReserved("|",value6);
		} else {
			_this6.h["|"] = value6;
		}
		var _this7 = this.binops;
		var value7 = function(e17,e27) {
			return me.expr(e17) ^ me.expr(e27);
		};
		if(__map_reserved["^"] != null) {
			_this7.setReserved("^",value7);
		} else {
			_this7.h["^"] = value7;
		}
		var _this8 = this.binops;
		var value8 = function(e18,e28) {
			return me.expr(e18) << me.expr(e28);
		};
		if(__map_reserved["<<"] != null) {
			_this8.setReserved("<<",value8);
		} else {
			_this8.h["<<"] = value8;
		}
		var _this9 = this.binops;
		var value9 = function(e19,e29) {
			return me.expr(e19) >> me.expr(e29);
		};
		if(__map_reserved[">>"] != null) {
			_this9.setReserved(">>",value9);
		} else {
			_this9.h[">>"] = value9;
		}
		var _this10 = this.binops;
		var value10 = function(e110,e210) {
			return me.expr(e110) >>> me.expr(e210);
		};
		if(__map_reserved[">>>"] != null) {
			_this10.setReserved(">>>",value10);
		} else {
			_this10.h[">>>"] = value10;
		}
		var _this11 = this.binops;
		var value11 = function(e111,e211) {
			return me.expr(e111) == me.expr(e211);
		};
		if(__map_reserved["=="] != null) {
			_this11.setReserved("==",value11);
		} else {
			_this11.h["=="] = value11;
		}
		var _this12 = this.binops;
		var value12 = function(e112,e212) {
			return me.expr(e112) != me.expr(e212);
		};
		if(__map_reserved["!="] != null) {
			_this12.setReserved("!=",value12);
		} else {
			_this12.h["!="] = value12;
		}
		var _this13 = this.binops;
		var value13 = function(e113,e213) {
			return me.expr(e113) >= me.expr(e213);
		};
		if(__map_reserved[">="] != null) {
			_this13.setReserved(">=",value13);
		} else {
			_this13.h[">="] = value13;
		}
		var _this14 = this.binops;
		var value14 = function(e114,e214) {
			return me.expr(e114) <= me.expr(e214);
		};
		if(__map_reserved["<="] != null) {
			_this14.setReserved("<=",value14);
		} else {
			_this14.h["<="] = value14;
		}
		var _this15 = this.binops;
		var value15 = function(e115,e215) {
			return me.expr(e115) > me.expr(e215);
		};
		if(__map_reserved[">"] != null) {
			_this15.setReserved(">",value15);
		} else {
			_this15.h[">"] = value15;
		}
		var _this16 = this.binops;
		var value16 = function(e116,e216) {
			return me.expr(e116) < me.expr(e216);
		};
		if(__map_reserved["<"] != null) {
			_this16.setReserved("<",value16);
		} else {
			_this16.h["<"] = value16;
		}
		var _this17 = this.binops;
		var value17 = function(e117,e217) {
			if(me.expr(e117) != true) {
				return me.expr(e217) == true;
			} else {
				return true;
			}
		};
		if(__map_reserved["||"] != null) {
			_this17.setReserved("||",value17);
		} else {
			_this17.h["||"] = value17;
		}
		var _this18 = this.binops;
		var value18 = function(e118,e218) {
			if(me.expr(e118) == true) {
				return me.expr(e218) == true;
			} else {
				return false;
			}
		};
		if(__map_reserved["&&"] != null) {
			_this18.setReserved("&&",value18);
		} else {
			_this18.h["&&"] = value18;
		}
		var _this19 = this.binops;
		var value19 = $bind(this,this.assign);
		if(__map_reserved["="] != null) {
			_this19.setReserved("=",value19);
		} else {
			_this19.h["="] = value19;
		}
		var _this20 = this.binops;
		var value20 = function(e119,e219) {
			return new IntIterator(me.expr(e119),me.expr(e219));
		};
		if(__map_reserved["..."] != null) {
			_this20.setReserved("...",value20);
		} else {
			_this20.h["..."] = value20;
		}
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v11,v21) {
			return v11 - v21;
		});
		this.assignOp("*=",function(v12,v22) {
			return v12 * v22;
		});
		this.assignOp("/=",function(v13,v23) {
			return v13 / v23;
		});
		this.assignOp("%=",function(v14,v24) {
			return v14 % v24;
		});
		this.assignOp("&=",function(v15,v25) {
			return v15 & v25;
		});
		this.assignOp("|=",function(v16,v26) {
			return v16 | v26;
		});
		this.assignOp("^=",function(v17,v27) {
			return v17 ^ v27;
		});
		this.assignOp("<<=",function(v18,v28) {
			return v18 << v28;
		});
		this.assignOp(">>=",function(v19,v29) {
			return v19 >> v29;
		});
		this.assignOp(">>>=",function(v110,v210) {
			return v110 >>> v210;
		});
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			if(l == null) {
				var _this1 = this.variables;
				if(__map_reserved[id] != null) {
					_this1.setReserved(id,v);
				} else {
					_this1.h[id] = v;
				}
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1.f;
			var e = e1.e;
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var index = e1.index;
			var e3 = e1.e;
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			var e4 = hscript_Error.EInvalidOp("=");
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		var _this = this.binops;
		var value = function(e1,e2) {
			return me.evalAssignOp(op,fop,e1,e2);
		};
		if(__map_reserved[op] != null) {
			_this.setReserved(op,value);
		} else {
			_this.h[op] = value;
		}
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				var _this1 = this.variables;
				if(__map_reserved[id] != null) {
					_this1.setReserved(id,v);
				} else {
					_this1.h[id] = v;
				}
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1.f;
			var e = e1.e;
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var index = e1.index;
			var e3 = e1.e;
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index1),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				v = fop(arr[index1],this.expr(e2));
				arr[index1] = v;
			}
			break;
		default:
			var e4 = hscript_Error.EInvalidOp(op);
			throw new js__$Boot_HaxeError(e4);
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			var v;
			if(l == null) {
				var _this1 = this.variables;
				v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
			} else {
				v = l.r;
			}
			if(prefix) {
				v += delta;
				if(l == null) {
					var _this2 = this.variables;
					var value = v;
					if(__map_reserved[id] != null) {
						_this2.setReserved(id,value);
					} else {
						_this2.h[id] = value;
					}
				} else {
					l.r = v;
				}
			} else if(l == null) {
				var _this3 = this.variables;
				var value1 = v + delta;
				if(__map_reserved[id] != null) {
					_this3.setReserved(id,value1);
				} else {
					_this3.h[id] = value1;
				}
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			var f = e.f;
			var e1 = e.e;
			var obj = this.expr(e1);
			var v1 = this.get(obj,f);
			if(prefix) {
				v1 += delta;
				this.set(obj,f,v1);
			} else {
				this.set(obj,f,v1 + delta);
			}
			return v1;
		case 16:
			var index = e.index;
			var e2 = e.e;
			var arr = this.expr(e2);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				var v2 = (js_Boot.__cast(arr , haxe_IMap)).get(index1);
				if(prefix) {
					v2 += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2 + delta);
				}
				return v2;
			} else {
				var v3 = arr[index1];
				if(prefix) {
					v3 += delta;
					arr[index1] = v3;
				} else {
					arr[index1] = v3 + delta;
				}
				return v3;
			}
			break;
		default:
			var e3 = hscript_Error.EInvalidOp(delta > 0 ? "++" : "--");
			throw new js__$Boot_HaxeError(e3);
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			if(js_Boot.__instanceof(e2,hscript__$Interp_Stop)) {
				switch(e2._hx_index) {
				case 0:
					throw new js__$Boot_HaxeError("Invalid break");
				case 1:
					throw new js__$Boot_HaxeError("Invalid continue");
				case 2:
					var v = this.returnValue;
					this.returnValue = null;
					return v;
				}
			} else {
				throw e1;
			}
		}
	}
	,duplicate: function(h) {
		var h2 = new haxe_ds_StringMap();
		var k = h.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var value = __map_reserved[k1] != null ? h.getReserved(k1) : h.h[k1];
			if(__map_reserved[k1] != null) {
				h2.setReserved(k1,value);
			} else {
				h2.h[k1] = value;
			}
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			var key = d.n;
			var value = d.old;
			var _this = this.locals;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,value);
			} else {
				_this.h[key] = value;
			}
		}
	}
	,error: function(e,rethrow) {
		if(rethrow == null) {
			rethrow = false;
		}
		if(rethrow) {
			throw js__$Boot_HaxeError.wrap(e);
		} else {
			throw new js__$Boot_HaxeError(e);
		}
	}
	,rethrow: function(e) {
		throw js__$Boot_HaxeError.wrap(e);
	}
	,resolve: function(id) {
		var _this = this.locals;
		var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(l != null) {
			return l.r;
		}
		var _this1 = this.variables;
		var v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
		var tmp;
		if(v == null) {
			var _this2 = this.variables;
			tmp = !(__map_reserved[id] != null ? _this2.existsReserved(id) : _this2.h.hasOwnProperty(id));
		} else {
			tmp = false;
		}
		if(tmp) {
			var e = hscript_Error.EUnknownVariable(id);
			throw new js__$Boot_HaxeError(e);
		}
		return v;
	}
	,expr: function(e) {
		var _gthis = this;
		switch(e._hx_index) {
		case 0:
			var c = e.c;
			switch(c._hx_index) {
			case 0:
				var v = c.v;
				return v;
			case 1:
				var f = c.f;
				return f;
			case 2:
				var s = c.s;
				return s;
			}
			break;
		case 1:
			var id = e.v;
			return this.resolve(id);
		case 2:
			var _g32 = e.t;
			var e1 = e.e;
			var n = e.n;
			var _this = this.locals;
			this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
			var this1 = this.locals;
			var value = { r : e1 == null ? null : this.expr(e1)};
			var _this1 = this1;
			if(__map_reserved[n] != null) {
				_this1.setReserved(n,value);
			} else {
				_this1.h[n] = value;
			}
			return null;
		case 3:
			var e2 = e.e;
			return this.expr(e2);
		case 4:
			var exprs = e.e;
			var old = this.declared.length;
			var v1 = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e3 = exprs[_g];
				++_g;
				v1 = this.expr(e3);
			}
			this.restore(old);
			return v1;
		case 5:
			var f1 = e.f;
			var e4 = e.e;
			return this.get(this.expr(e4),f1);
		case 6:
			var e21 = e.e2;
			var e11 = e.e1;
			var op = e.op;
			var _this2 = this.binops;
			var fop = __map_reserved[op] != null ? _this2.getReserved(op) : _this2.h[op];
			if(fop == null) {
				var e5 = hscript_Error.EInvalidOp(op);
				throw new js__$Boot_HaxeError(e5);
			}
			return fop(e11,e21);
		case 7:
			var e6 = e.e;
			var prefix = e.prefix;
			var op1 = e.op;
			switch(op1) {
			case "!":
				return this.expr(e6) != true;
			case "++":
				return this.increment(e6,prefix,1);
			case "-":
				return -this.expr(e6);
			case "--":
				return this.increment(e6,prefix,-1);
			case "~":
				return ~this.expr(e6);
			default:
				var e7 = hscript_Error.EInvalidOp(op1);
				throw new js__$Boot_HaxeError(e7);
			}
			break;
		case 8:
			var params = e.params;
			var e8 = e.e;
			var args = [];
			var _g1 = 0;
			while(_g1 < params.length) {
				var p = params[_g1];
				++_g1;
				args.push(this.expr(p));
			}
			if(e8._hx_index == 5) {
				var f2 = e8.f;
				var e9 = e8.e;
				var obj = this.expr(e9);
				if(obj == null) {
					var e10 = hscript_Error.EInvalidAccess(f2);
					throw new js__$Boot_HaxeError(e10);
				}
				return this.fcall(obj,f2,args);
			} else {
				return this.call(null,this.expr(e8),args);
			}
			break;
		case 9:
			var e22 = e.e2;
			var e12 = e.e1;
			var econd = e.cond;
			if(this.expr(econd) == true) {
				return this.expr(e12);
			} else if(e22 == null) {
				return null;
			} else {
				return this.expr(e22);
			}
			break;
		case 10:
			var e13 = e.e;
			var econd1 = e.cond;
			this.whileLoop(econd1,e13);
			return null;
		case 11:
			var e14 = e.e;
			var it = e.it;
			var v2 = e.v;
			this.forLoop(v2,it,e14);
			return null;
		case 12:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SBreak);
		case 13:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SContinue);
		case 14:
			var _g44 = e.ret;
			var name = e.name;
			var fexpr = e.e;
			var params1 = e.args;
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g2 = 0;
			while(_g2 < params1.length) {
				var p1 = params1[_g2];
				++_g2;
				if(p1.opt) {
					hasOpt = true;
				} else {
					minParams += 1;
				}
			}
			var f3 = function(args1) {
				if((args1 == null ? 0 : args1.length) != params1.length) {
					if(args1.length < minParams) {
						var str = "Invalid number of parameters. Got " + args1.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						var e15 = hscript_Error.ECustom(str);
						throw new js__$Boot_HaxeError(e15);
					}
					var args2 = [];
					var extraParams = args1.length - minParams;
					var pos = 0;
					var _g11 = 0;
					while(_g11 < params1.length) {
						var p2 = params1[_g11];
						++_g11;
						if(p2.opt) {
							if(extraParams > 0) {
								args2.push(args1[pos++]);
								--extraParams;
							} else {
								args2.push(null);
							}
						} else {
							args2.push(args1[pos++]);
						}
					}
					args1 = args2;
				}
				var old1 = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g12 = 0;
				var _g21 = params1.length;
				while(_g12 < _g21) {
					var i = _g12++;
					var key = params1[i].name;
					var _this3 = me.locals;
					var value1 = { r : args1[i]};
					if(__map_reserved[key] != null) {
						_this3.setReserved(key,value1);
					} else {
						_this3.h[key] = value1;
					}
				}
				var r = null;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( e16 ) {
						haxe_CallStack.lastException = e16;
						var e17 = ((e16) instanceof js__$Boot_HaxeError) ? e16.val : e16;
						me.locals = old1;
						me.depth = depth;
						throw js__$Boot_HaxeError.wrap(e17);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				me.locals = old1;
				me.depth = depth;
				return r;
			};
			var f4 = Reflect.makeVarArgs(f3);
			if(name != null) {
				if(this.depth == 0) {
					var _this4 = this.variables;
					if(__map_reserved[name] != null) {
						_this4.setReserved(name,f4);
					} else {
						_this4.h[name] = f4;
					}
				} else {
					var tmp = this.declared;
					var _this5 = this.locals;
					var tmp1 = __map_reserved[name] != null ? _this5.getReserved(name) : _this5.h[name];
					tmp.push({ n : name, old : tmp1});
					var ref = { r : f4};
					var _this6 = this.locals;
					if(__map_reserved[name] != null) {
						_this6.setReserved(name,ref);
					} else {
						_this6.h[name] = ref;
					}
					if(__map_reserved[name] != null) {
						capturedLocals.setReserved(name,ref);
					} else {
						capturedLocals.h[name] = ref;
					}
				}
			}
			return f4;
		case 15:
			var e18 = e.e;
			this.returnValue = e18 == null ? null : this.expr(e18);
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SReturn);
		case 16:
			var index = e.index;
			var e19 = e.e;
			var arr = this.expr(e19);
			var index1 = this.expr(index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index1);
			} else {
				return arr[index1];
			}
			break;
		case 17:
			var arr1 = e.e;
			var tmp2;
			if(arr1.length > 0) {
				var _g3 = arr1[0];
				if(_g3._hx_index == 6) {
					var _g31 = _g3.e2;
					var _g22 = _g3.e1;
					tmp2 = _g3.op == "=>";
				} else {
					tmp2 = false;
				}
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				var isAllString = true;
				var isAllInt = true;
				var isAllObject = true;
				var isAllEnum = true;
				var keys = [];
				var values = [];
				var _g4 = 0;
				while(_g4 < arr1.length) {
					var e20 = arr1[_g4];
					++_g4;
					if(e20._hx_index == 6) {
						if(e20.op == "=>") {
							var eValue = e20.e2;
							var eKey = e20.e1;
							var key1 = this.expr(eKey);
							var value2 = this.expr(eValue);
							isAllString = isAllString && typeof(key1) == "string";
							isAllInt = isAllInt && (typeof(key1) == "number" && ((key1 | 0) === key1));
							isAllObject = isAllObject && Reflect.isObject(key1);
							isAllEnum = isAllEnum && Reflect.isEnumValue(key1);
							keys.push(key1);
							values.push(value2);
						} else {
							throw new js__$Boot_HaxeError("=> expected");
						}
					} else {
						throw new js__$Boot_HaxeError("=> expected");
					}
				}
				var map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw new js__$Boot_HaxeError("Inconsistent key types");
				}
				var _g5 = 0;
				var _g6 = keys.length;
				while(_g5 < _g6) {
					var n1 = _g5++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n1],values[n1]);
				}
				return map;
			} else {
				var a = [];
				var _g41 = 0;
				while(_g41 < arr1.length) {
					var e23 = arr1[_g41];
					++_g41;
					a.push(this.expr(e23));
				}
				return a;
			}
			break;
		case 18:
			var params2 = e.params;
			var cl = e.cl;
			var a1 = [];
			var _g7 = 0;
			while(_g7 < params2.length) {
				var e24 = params2[_g7];
				++_g7;
				a1.push(this.expr(e24));
			}
			return this.cnew(cl,a1);
		case 19:
			var e25 = e.e;
			throw js__$Boot_HaxeError.wrap(this.expr(e25));
		case 20:
			var _g51 = e.t;
			var ecatch = e.ecatch;
			var n2 = e.v;
			var e26 = e.e;
			var old2 = this.declared.length;
			var oldTry = this.inTry;
			try {
				this.inTry = true;
				var v3 = this.expr(e26);
				this.restore(old2);
				this.inTry = oldTry;
				return v3;
			} catch( e27 ) {
				haxe_CallStack.lastException = e27;
				var e28 = ((e27) instanceof js__$Boot_HaxeError) ? e27.val : e27;
				if(js_Boot.__instanceof(e28,hscript__$Interp_Stop)) {
					this.inTry = oldTry;
					throw new js__$Boot_HaxeError(e28);
				} else {
					this.restore(old2);
					this.inTry = oldTry;
					var _this7 = this.locals;
					this.declared.push({ n : n2, old : __map_reserved[n2] != null ? _this7.getReserved(n2) : _this7.h[n2]});
					var _this8 = this.locals;
					var value3 = { r : e28};
					if(__map_reserved[n2] != null) {
						_this8.setReserved(n2,value3);
					} else {
						_this8.h[n2] = value3;
					}
					var v4 = this.expr(ecatch);
					this.restore(old2);
					return v4;
				}
			}
			break;
		case 21:
			var fl = e.fl;
			var o = { };
			var _g8 = 0;
			while(_g8 < fl.length) {
				var f5 = fl[_g8];
				++_g8;
				this.set(o,f5.name,this.expr(f5.e));
			}
			return o;
		case 22:
			var e29 = e.e2;
			var e110 = e.e1;
			var econd2 = e.cond;
			if(this.expr(econd2) == true) {
				return this.expr(e110);
			} else {
				return this.expr(e29);
			}
			break;
		case 23:
			var def = e.defaultExpr;
			var cases = e.cases;
			var e30 = e.e;
			var val = this.expr(e30);
			var match = false;
			var _g9 = 0;
			while(_g9 < cases.length) {
				var c1 = cases[_g9];
				++_g9;
				var _g10 = 0;
				var _g13 = c1.values;
				while(_g10 < _g13.length) {
					var v5 = _g13[_g10];
					++_g10;
					if(this.expr(v5) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c1.expr);
					break;
				}
			}
			if(!match) {
				val = def == null ? null : this.expr(def);
			}
			return val;
		case 24:
			var e31 = e.e;
			var econd3 = e.cond;
			this.doWhileLoop(econd3,e31);
			return null;
		case 25:
			var _g52 = e.args;
			var _g511 = e.name;
			var e32 = e.e;
			return this.expr(e32);
		case 26:
			var _g46 = e.t;
			var e33 = e.e;
			return this.expr(e33);
		}
	}
	,doWhileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(true) {
			try {
				this.expr(e);
			} catch( err ) {
				haxe_CallStack.lastException = err;
				var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
				if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
					var err2 = err1;
					switch(err2._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err2);
					}
				} else {
					throw err;
				}
			}
			if(!(this.expr(econd) == true)) {
				break;
			}
		}
		this.restore(old);
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(this.expr(econd) == true) try {
			this.expr(e);
		} catch( err ) {
			haxe_CallStack.lastException = err;
			var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
			if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
				var err2 = err1;
				switch(err2._hx_index) {
				case 0:
					break _hx_loop1;
				case 1:
					break;
				case 2:
					throw new js__$Boot_HaxeError(err2);
				}
			} else {
				throw err;
			}
		}
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $getIterator(v);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		}
		if(v.hasNext == null || v.next == null) {
			var e2 = hscript_Error.EInvalidIterator(v);
			throw new js__$Boot_HaxeError(e2);
		}
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		var _this = this.locals;
		this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
		var it1 = this.makeIterator(this.expr(it));
		_hx_loop1: while(it1.hasNext()) {
			var this1 = this.locals;
			var value = { r : it1.next()};
			var _this1 = this1;
			if(__map_reserved[n] != null) {
				_this1.setReserved(n,value);
			} else {
				_this1.h[n] = value;
			}
			try {
				this.expr(e);
			} catch( err ) {
				haxe_CallStack.lastException = err;
				var err1 = ((err) instanceof js__$Boot_HaxeError) ? err.val : err;
				if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
					var err2 = err1;
					switch(err2._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err2);
					}
				} else {
					throw err;
				}
			}
		}
		this.restore(old);
	}
	,isMap: function(o) {
		return js_Boot.__implements(o,haxe_IMap);
	}
	,getMapValue: function(map,key) {
		return (js_Boot.__cast(map , haxe_IMap)).get(key);
	}
	,setMapValue: function(map,key,value) {
		(js_Boot.__cast(map , haxe_IMap)).set(key,value);
	}
	,get: function(o,f) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) {
			var e = hscript_Error.EInvalidAccess(f);
			throw new js__$Boot_HaxeError(e);
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = $hxClasses[cl];
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
	,__class__: hscript_Interp
};
var hscript_Token = $hxEnums["hscript.Token"] = { __ename__ : true, __constructs__ : ["TEof","TConst","TId","TOp","TPOpen","TPClose","TBrOpen","TBrClose","TDot","TComma","TSemicolon","TBkOpen","TBkClose","TQuestion","TDoubleDot","TMeta","TPrepro"]
	,TEof: {_hx_index:0,__enum__:"hscript.Token",toString:$estr}
	,TConst: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TId: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TOp: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPOpen: {_hx_index:4,__enum__:"hscript.Token",toString:$estr}
	,TPClose: {_hx_index:5,__enum__:"hscript.Token",toString:$estr}
	,TBrOpen: {_hx_index:6,__enum__:"hscript.Token",toString:$estr}
	,TBrClose: {_hx_index:7,__enum__:"hscript.Token",toString:$estr}
	,TDot: {_hx_index:8,__enum__:"hscript.Token",toString:$estr}
	,TComma: {_hx_index:9,__enum__:"hscript.Token",toString:$estr}
	,TSemicolon: {_hx_index:10,__enum__:"hscript.Token",toString:$estr}
	,TBkOpen: {_hx_index:11,__enum__:"hscript.Token",toString:$estr}
	,TBkClose: {_hx_index:12,__enum__:"hscript.Token",toString:$estr}
	,TQuestion: {_hx_index:13,__enum__:"hscript.Token",toString:$estr}
	,TDoubleDot: {_hx_index:14,__enum__:"hscript.Token",toString:$estr}
	,TMeta: ($_=function(s) { return {_hx_index:15,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPrepro: ($_=function(s) { return {_hx_index:16,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Parser = function() {
	this.uid = 0;
	this.preprocesorValues = new haxe_ds_StringMap();
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	this.unops = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = priorities.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = 0;
		var _g11 = priorities[i];
		while(_g2 < _g11.length) {
			var x = _g11[_g2];
			++_g2;
			var _this = this.opPriority;
			if(__map_reserved[x] != null) {
				_this.setReserved(x,i);
			} else {
				_this.h[x] = i;
			}
			if(i == 9) {
				var _this1 = this.opRightAssoc;
				if(__map_reserved[x] != null) {
					_this1.setReserved(x,true);
				} else {
					_this1.h[x] = true;
				}
			}
		}
	}
	var x1 = "!";
	var _this2 = this.unops;
	var value = x1 == "++" || x1 == "--";
	if(__map_reserved[x1] != null) {
		_this2.setReserved(x1,value);
	} else {
		_this2.h[x1] = value;
	}
	var x2 = "++";
	var _this3 = this.unops;
	var value1 = x2 == "++" || x2 == "--";
	if(__map_reserved[x2] != null) {
		_this3.setReserved(x2,value1);
	} else {
		_this3.h[x2] = value1;
	}
	var x3 = "--";
	var _this4 = this.unops;
	var value2 = x3 == "++" || x3 == "--";
	if(__map_reserved[x3] != null) {
		_this4.setReserved(x3,value2);
	} else {
		_this4.h[x3] = value2;
	}
	var x4 = "-";
	var _this5 = this.unops;
	var value3 = x4 == "++" || x4 == "--";
	if(__map_reserved[x4] != null) {
		_this5.setReserved(x4,value3);
	} else {
		_this5.h[x4] = value3;
	}
	var x5 = "~";
	var _this6 = this.unops;
	var value4 = x5 == "++" || x5 == "--";
	if(__map_reserved[x5] != null) {
		_this6.setReserved(x5,value4);
	} else {
		_this6.h[x5] = value4;
	}
};
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = true;
hscript_Parser.prototype = {
	error: function(err,pmin,pmax) {
		if(!this.resumeErrors) {
			throw new js__$Boot_HaxeError(err);
		}
	}
	,invalidChar: function(c) {
		if(!this.resumeErrors) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidChar(c));
		}
	}
	,initParser: function(origin) {
		this.preprocStack = [];
		this.tokens = new haxe_ds_GenericStack();
		this.char = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		var _g = 0;
		var _g1 = this.opChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g2 = 0;
		var _g3 = this.identChars.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			this.idents[HxOverrides.cca(this.identChars,i1)] = true;
		}
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		this.readPos = 0;
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			return hscript_Expr.EBlock(a);
		}
	}
	,unexpected: function(tk) {
		var err = hscript_Error.EUnexpected(this.tokenString(tk));
		if(!this.resumeErrors) {
			throw new js__$Boot_HaxeError(err);
		}
		return null;
	}
	,push: function(tk) {
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,ensureToken: function(tk) {
		var t = this.token();
		if(!Type.enumEq(t,tk)) {
			this.unexpected(t);
		}
	}
	,maybe: function(tk) {
		var t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(t,_this.head);
		return false;
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk == null) {
			this.unexpected(tk);
			return null;
		} else if(tk._hx_index == 2) {
			var id = tk.s;
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e;
	}
	,pmin: function(e) {
		return 0;
	}
	,pmax: function(e) {
		return 0;
	}
	,mk: function(e,pmin,pmax) {
		return e;
	}
	,isBlock: function(e) {
		if(e == null) {
			return false;
		}
		switch(e._hx_index) {
		case 2:
			var _g20 = e.n;
			var e1 = e.e;
			var t = e.t;
			if(e1 != null) {
				return this.isBlock(e1);
			} else if(t != null) {
				if(t == null) {
					return false;
				} else if(t._hx_index == 2) {
					var _g = t.fields;
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			var _g10 = e.e;
			return true;
		case 6:
			var _g28 = e.e1;
			var _g27 = e.op;
			var e2 = e.e2;
			return this.isBlock(e2);
		case 7:
			var _g7 = e.op;
			var e3 = e.e;
			var prefix = e.prefix;
			if(!prefix) {
				return this.isBlock(e3);
			} else {
				return false;
			}
			break;
		case 9:
			var _g1 = e.cond;
			var e21 = e.e2;
			var e11 = e.e1;
			if(e21 != null) {
				return this.isBlock(e21);
			} else {
				return this.isBlock(e11);
			}
			break;
		case 10:
			var _g11 = e.cond;
			var e4 = e.e;
			return this.isBlock(e4);
		case 11:
			var _g17 = e.it;
			var _g16 = e.v;
			var e5 = e.e;
			return this.isBlock(e5);
		case 14:
			var _g26 = e.ret;
			var _g25 = e.name;
			var _g23 = e.args;
			var e6 = e.e;
			return this.isBlock(e6);
		case 15:
			var e7 = e.e;
			if(e7 != null) {
				return this.isBlock(e7);
			} else {
				return false;
			}
			break;
		case 20:
			var _g5 = e.t;
			var _g4 = e.v;
			var _g3 = e.e;
			var e8 = e.ecatch;
			return this.isBlock(e8);
		case 21:
			var _g19 = e.fl;
			return true;
		case 23:
			var _g15 = e.defaultExpr;
			var _g14 = e.cases;
			var _g13 = e.e;
			return true;
		case 24:
			var _g30 = e.cond;
			var e9 = e.e;
			return this.isBlock(e9);
		case 25:
			var _g34 = e.args;
			var _g33 = e.name;
			var e10 = e.e;
			return this.isBlock(e10);
		default:
			return false;
		}
	}
	,parseFullExpr: function(exprs) {
		var e = this.parseExpr();
		exprs.push(e);
		var tk = this.token();
		while(true) {
			var tmp;
			if(tk == hscript_Token.TComma && e != null) {
				if(e._hx_index == 2) {
					var _g2 = e.e;
					var _g1 = e.t;
					var _g = e.n;
					tmp = true;
				} else {
					tmp = false;
				}
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				this.unexpected(tk);
			}
		}
	}
	,parseObject: function(p1) {
		var fl = [];
		_hx_loop1: while(true) {
			var tk = this.token();
			var id = null;
			if(tk == null) {
				this.unexpected(tk);
				break;
			} else {
				switch(tk._hx_index) {
				case 1:
					var c = tk.c;
					if(!this.allowJSON) {
						this.unexpected(tk);
					}
					if(c._hx_index == 2) {
						var s = c.s;
						id = s;
					} else {
						this.unexpected(tk);
					}
					break;
				case 2:
					var i = tk.s;
					id = i;
					break;
				case 7:
					break _hx_loop1;
				default:
					this.unexpected(tk);
					break _hx_loop1;
				}
			}
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			fl.push({ name : id, e : this.parseExpr()});
			tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 7:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		return this.parseExprNext(hscript_Expr.EObject(fl));
	}
	,parseExpr: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 1:
				var c = tk.c;
				return this.parseExprNext(hscript_Expr.EConst(c));
			case 2:
				var id = tk.s;
				var e = this.parseStructure(id);
				if(e == null) {
					e = hscript_Expr.EIdent(id);
				}
				return this.parseExprNext(e);
			case 3:
				var op = tk.s;
				var _this = this.unops;
				if(__map_reserved[op] != null ? _this.existsReserved(op) : _this.h.hasOwnProperty(op)) {
					var start = 0;
					var e1 = this.parseExpr();
					if(op == "-" && e1 != null) {
						if(e1._hx_index == 0) {
							var _g = e1.c;
							switch(_g._hx_index) {
							case 0:
								var i = _g.v;
								return hscript_Expr.EConst(hscript_Const.CInt(-i));
							case 1:
								var f = _g.f;
								return hscript_Expr.EConst(hscript_Const.CFloat(-f));
							default:
							}
						}
					}
					return this.makeUnop(op,e1);
				}
				return this.unexpected(tk);
			case 4:
				var e2 = this.parseExpr();
				tk = this.token();
				if(tk != null) {
					switch(tk._hx_index) {
					case 5:
						return this.parseExprNext(hscript_Expr.EParent(e2));
					case 9:
						if(e2._hx_index == 1) {
							var v = e2.v;
							return this.parseLambda([{ name : v}],0);
						}
						break;
					case 14:
						var t = this.parseType();
						tk = this.token();
						if(tk != null) {
							switch(tk._hx_index) {
							case 5:
								return this.parseExprNext(hscript_Expr.ECheckType(e2,t));
							case 9:
								if(e2._hx_index == 1) {
									var v1 = e2.v;
									return this.parseLambda([{ name : v1, t : t}],0);
								}
								break;
							default:
							}
						}
						break;
					default:
					}
				}
				return this.unexpected(tk);
			case 6:
				tk = this.token();
				if(tk == null) {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				} else {
					switch(tk._hx_index) {
					case 1:
						var c1 = tk.c;
						if(this.allowJSON) {
							if(c1._hx_index == 2) {
								var _g1 = c1.s;
								var tk2 = this.token();
								var _this2 = this.tokens;
								_this2.head = new haxe_ds_GenericCell(tk2,_this2.head);
								var _this3 = this.tokens;
								_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
								if(tk2 != null) {
									if(tk2._hx_index == 14) {
										return this.parseExprNext(this.parseObject(0));
									}
								}
							} else {
								var _this4 = this.tokens;
								_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
							}
						} else {
							var _this5 = this.tokens;
							_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
						}
						break;
					case 2:
						var _g11 = tk.s;
						var tk21 = this.token();
						var _this6 = this.tokens;
						_this6.head = new haxe_ds_GenericCell(tk21,_this6.head);
						var _this7 = this.tokens;
						_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
						if(tk21 != null) {
							if(tk21._hx_index == 14) {
								return this.parseExprNext(this.parseObject(0));
							}
						}
						break;
					case 7:
						return this.parseExprNext(hscript_Expr.EObject([]));
					default:
						var _this8 = this.tokens;
						_this8.head = new haxe_ds_GenericCell(tk,_this8.head);
					}
				}
				var a = [];
				while(true) {
					this.parseFullExpr(a);
					tk = this.token();
					if(tk == hscript_Token.TBrClose || this.resumeErrors && tk == hscript_Token.TEof) {
						break;
					}
					var _this9 = this.tokens;
					_this9.head = new haxe_ds_GenericCell(tk,_this9.head);
				}
				return hscript_Expr.EBlock(a);
			case 11:
				var a1 = [];
				tk = this.token();
				while(tk != hscript_Token.TBkClose && (!this.resumeErrors || tk != hscript_Token.TEof)) {
					var _this10 = this.tokens;
					_this10.head = new haxe_ds_GenericCell(tk,_this10.head);
					a1.push(this.parseExpr());
					tk = this.token();
					if(tk == hscript_Token.TComma) {
						tk = this.token();
					}
				}
				if(a1.length == 1 && a1[0] != null) {
					var _g2 = a1[0];
					switch(_g2._hx_index) {
					case 10:
						var _g21 = _g2.e;
						var _g12 = _g2.cond;
						var tmp = "__a_" + this.uid++;
						var e3 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a1[0]),hscript_Expr.EIdent(tmp)]);
						return this.parseExprNext(e3);
					case 11:
						var _g5 = _g2.e;
						var _g4 = _g2.it;
						var _g3 = _g2.v;
						var tmp1 = "__a_" + this.uid++;
						var e4 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp1,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp1,a1[0]),hscript_Expr.EIdent(tmp1)]);
						return this.parseExprNext(e4);
					case 24:
						var _g7 = _g2.e;
						var _g6 = _g2.cond;
						var tmp2 = "__a_" + this.uid++;
						var e5 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp2,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp2,a1[0]),hscript_Expr.EIdent(tmp2)]);
						return this.parseExprNext(e5);
					default:
					}
				}
				return this.parseExprNext(hscript_Expr.EArrayDecl(a1));
			case 15:
				var id1 = tk.s;
				if(this.allowMetadata) {
					var args = this.parseMetaArgs();
					return hscript_Expr.EMeta(id1,args,this.parseExpr());
				} else {
					return this.unexpected(tk);
				}
				break;
			default:
				return this.unexpected(tk);
			}
		}
	}
	,parseLambda: function(args,pmin) {
		_hx_loop1: while(true) {
			var id = this.getIdent();
			var t = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
			args.push({ name : id, t : t});
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
				break;
			} else {
				switch(tk._hx_index) {
				case 5:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
					break _hx_loop1;
				}
			}
		}
		var t1 = this.token();
		if(!Type.enumEq(t1,hscript_Token.TOp("->"))) {
			this.unexpected(t1);
		}
		var eret = this.parseExpr();
		return hscript_Expr.EFunction(args,hscript_Expr.EReturn(eret));
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			_hx_loop1: while(true) {
				args.push(this.parseExpr());
				var _g = this.token();
				if(_g == null) {
					var tk1 = _g;
					this.unexpected(tk1);
				} else {
					switch(_g._hx_index) {
					case 5:
						break _hx_loop1;
					case 9:
						break;
					default:
						var tk2 = _g;
						this.unexpected(tk2);
					}
				}
			}
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		if(e == null) {
			return null;
		}
		var edef;
		switch(e._hx_index) {
		case 3:
			var e2 = e.e;
			edef = hscript_Expr.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			var _g5 = e.e;
			if(_g5.length == 1) {
				var e1 = _g5[0];
				edef = hscript_Expr.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			}
			break;
		case 9:
			var e21 = e.e2;
			var e11 = e.e1;
			var cond = e.cond;
			edef = e21 == null ? hscript_Expr.EIf(cond,this.mapCompr(tmp,e11),null) : hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			break;
		case 10:
			var e22 = e.e;
			var cond1 = e.cond;
			edef = hscript_Expr.EWhile(cond1,this.mapCompr(tmp,e22));
			break;
		case 11:
			var e23 = e.e;
			var it = e.it;
			var v = e.v;
			edef = hscript_Expr.EFor(v,it,this.mapCompr(tmp,e23));
			break;
		case 24:
			var e24 = e.e;
			var cond2 = e.cond;
			edef = hscript_Expr.EDoWhile(cond2,this.mapCompr(tmp,e24));
			break;
		default:
			edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
		}
		return edef;
	}
	,makeUnop: function(op,e) {
		if(e == null && this.resumeErrors) {
			return null;
		}
		switch(e._hx_index) {
		case 6:
			var e2 = e.e2;
			var e1 = e.e1;
			var bop = e.op;
			return hscript_Expr.EBinop(bop,this.makeUnop(op,e1),e2);
		case 22:
			var e3 = e.e2;
			var e21 = e.e1;
			var e11 = e.cond;
			return hscript_Expr.ETernary(this.makeUnop(op,e11),e21,e3);
		default:
			return hscript_Expr.EUnop(op,true,e);
		}
	}
	,makeBinop: function(op,e1,e) {
		if(e == null && this.resumeErrors) {
			return hscript_Expr.EBinop(op,e1,e);
		}
		switch(e._hx_index) {
		case 6:
			var e3 = e.e2;
			var e2 = e.e1;
			var op2 = e.op;
			var tmp;
			var _this = this.opPriority;
			var tmp1 = __map_reserved[op] != null ? _this.getReserved(op) : _this.h[op];
			var _this1 = this.opPriority;
			if(tmp1 <= (__map_reserved[op2] != null ? _this1.getReserved(op2) : _this1.h[op2])) {
				var _this2 = this.opRightAssoc;
				tmp = !(__map_reserved[op] != null ? _this2.existsReserved(op) : _this2.h.hasOwnProperty(op));
			} else {
				tmp = false;
			}
			if(tmp) {
				return hscript_Expr.EBinop(op2,this.makeBinop(op,e1,e2),e3);
			} else {
				return hscript_Expr.EBinop(op,e1,e);
			}
			break;
		case 22:
			var e4 = e.e2;
			var e31 = e.e1;
			var e21 = e.cond;
			var _this3 = this.opRightAssoc;
			if(__map_reserved[op] != null ? _this3.existsReserved(op) : _this3.h.hasOwnProperty(op)) {
				return hscript_Expr.EBinop(op,e1,e);
			} else {
				return hscript_Expr.ETernary(this.makeBinop(op,e1,e21),e31,e4);
			}
			break;
		default:
			return hscript_Expr.EBinop(op,e1,e);
		}
	}
	,parseStructure: function(id) {
		switch(id) {
		case "break":
			return hscript_Expr.EBreak;
		case "continue":
			return hscript_Expr.EContinue;
		case "do":
			var e = this.parseExpr();
			var tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else if(tk._hx_index == 2) {
				if(tk.s != "while") {
					this.unexpected(tk);
				}
			} else {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			return hscript_Expr.EDoWhile(econd,e);
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t1 = this.token();
			if(!Type.enumEq(t1,hscript_Token.TId("in"))) {
				this.unexpected(t1);
			}
			var eiter = this.parseExpr();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			var e1 = this.parseExpr();
			return hscript_Expr.EFor(vname,eiter,e1);
		case "function":
			var tk1 = this.token();
			var name = null;
			if(tk1 == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk1,_this.head);
			} else if(tk1._hx_index == 2) {
				var id1 = tk1.s;
				name = id1;
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk1,_this1.head);
			}
			var inf = this.parseFunctionDecl();
			return hscript_Expr.EFunction(inf.args,inf.body,name,inf.ret);
		case "if":
			var t3 = this.token();
			if(t3 != hscript_Token.TPOpen) {
				this.unexpected(t3);
			}
			var cond = this.parseExpr();
			var t4 = this.token();
			if(t4 != hscript_Token.TPClose) {
				this.unexpected(t4);
			}
			var e11 = this.parseExpr();
			var e2 = null;
			var semic = false;
			var tk2 = this.token();
			if(tk2 == hscript_Token.TSemicolon) {
				semic = true;
				tk2 = this.token();
			}
			if(Type.enumEq(tk2,hscript_Token.TId("else"))) {
				e2 = this.parseExpr();
			} else {
				var _this2 = this.tokens;
				_this2.head = new haxe_ds_GenericCell(tk2,_this2.head);
				if(semic) {
					var _this3 = this.tokens;
					_this3.head = new haxe_ds_GenericCell(hscript_Token.TSemicolon,_this3.head);
				}
			}
			return hscript_Expr.EIf(cond,e11,e2);
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			var a = [];
			a.push(this.getIdent());
			_hx_loop1: while(true) {
				var tk3 = this.token();
				if(tk3 == null) {
					this.unexpected(tk3);
					break;
				} else {
					switch(tk3._hx_index) {
					case 4:
						break _hx_loop1;
					case 8:
						a.push(this.getIdent());
						break;
					default:
						this.unexpected(tk3);
						break _hx_loop1;
					}
				}
			}
			var args = this.parseExprList(hscript_Token.TPClose);
			return hscript_Expr.ENew(a.join("."),args);
		case "return":
			var tk4 = this.token();
			var _this4 = this.tokens;
			_this4.head = new haxe_ds_GenericCell(tk4,_this4.head);
			var e3 = tk4 == hscript_Token.TSemicolon ? null : this.parseExpr();
			return hscript_Expr.EReturn(e3);
		case "switch":
			var e4 = this.parseExpr();
			var def = null;
			var cases = [];
			var t5 = this.token();
			if(t5 != hscript_Token.TBrOpen) {
				this.unexpected(t5);
			}
			_hx_loop2: while(true) {
				var tk5 = this.token();
				if(tk5 == null) {
					this.unexpected(tk5);
					break;
				} else {
					switch(tk5._hx_index) {
					case 2:
						switch(tk5.s) {
						case "case":
							var c = { values : [], expr : null};
							cases.push(c);
							_hx_loop3: while(true) {
								var e5 = this.parseExpr();
								c.values.push(e5);
								tk5 = this.token();
								if(tk5 == null) {
									this.unexpected(tk5);
									break;
								} else {
									switch(tk5._hx_index) {
									case 9:
										break;
									case 14:
										break _hx_loop3;
									default:
										this.unexpected(tk5);
										break _hx_loop3;
									}
								}
							}
							var exprs = [];
							_hx_loop4: while(true) {
								tk5 = this.token();
								var _this5 = this.tokens;
								_this5.head = new haxe_ds_GenericCell(tk5,_this5.head);
								if(tk5 == null) {
									this.parseFullExpr(exprs);
								} else {
									switch(tk5._hx_index) {
									case 0:
										if(this.resumeErrors) {
											break _hx_loop4;
										} else {
											this.parseFullExpr(exprs);
										}
										break;
									case 2:
										switch(tk5.s) {
										case "case":case "default":
											break _hx_loop4;
										default:
											this.parseFullExpr(exprs);
										}
										break;
									case 7:
										break _hx_loop4;
									default:
										this.parseFullExpr(exprs);
									}
								}
							}
							c.expr = exprs.length == 1 ? exprs[0] : exprs.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs);
							break;
						case "default":
							if(def != null) {
								this.unexpected(tk5);
							}
							var t6 = this.token();
							if(t6 != hscript_Token.TDoubleDot) {
								this.unexpected(t6);
							}
							var exprs1 = [];
							_hx_loop5: while(true) {
								tk5 = this.token();
								var _this6 = this.tokens;
								_this6.head = new haxe_ds_GenericCell(tk5,_this6.head);
								if(tk5 == null) {
									this.parseFullExpr(exprs1);
								} else {
									switch(tk5._hx_index) {
									case 0:
										if(this.resumeErrors) {
											break _hx_loop5;
										} else {
											this.parseFullExpr(exprs1);
										}
										break;
									case 2:
										switch(tk5.s) {
										case "case":case "default":
											break _hx_loop5;
										default:
											this.parseFullExpr(exprs1);
										}
										break;
									case 7:
										break _hx_loop5;
									default:
										this.parseFullExpr(exprs1);
									}
								}
							}
							def = exprs1.length == 1 ? exprs1[0] : exprs1.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs1);
							break;
						default:
							this.unexpected(tk5);
							break _hx_loop2;
						}
						break;
					case 7:
						break _hx_loop2;
					default:
						this.unexpected(tk5);
						break _hx_loop2;
					}
				}
			}
			return hscript_Expr.ESwitch(e4,cases,def);
		case "throw":
			var e6 = this.parseExpr();
			return hscript_Expr.EThrow(e6);
		case "try":
			var e7 = this.parseExpr();
			var t7 = this.token();
			if(!Type.enumEq(t7,hscript_Token.TId("catch"))) {
				this.unexpected(t7);
			}
			var t8 = this.token();
			if(t8 != hscript_Token.TPOpen) {
				this.unexpected(t8);
			}
			var vname1 = this.getIdent();
			var t9 = this.token();
			if(t9 != hscript_Token.TDoubleDot) {
				this.unexpected(t9);
			}
			var t10 = null;
			if(this.allowTypes) {
				t10 = this.parseType();
			} else {
				var t11 = this.token();
				if(!Type.enumEq(t11,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t11);
				}
			}
			var t12 = this.token();
			if(t12 != hscript_Token.TPClose) {
				this.unexpected(t12);
			}
			var ec = this.parseExpr();
			return hscript_Expr.ETry(e7,vname1,t10,ec);
		case "var":
			var ident = this.getIdent();
			var tk6 = this.token();
			var t13 = null;
			if(tk6 == hscript_Token.TDoubleDot && this.allowTypes) {
				t13 = this.parseType();
				tk6 = this.token();
			}
			var e8 = null;
			if(Type.enumEq(tk6,hscript_Token.TOp("="))) {
				e8 = this.parseExpr();
			} else {
				var _this7 = this.tokens;
				_this7.head = new haxe_ds_GenericCell(tk6,_this7.head);
			}
			return hscript_Expr.EVar(ident,t13,e8);
		case "while":
			var econd1 = this.parseExpr();
			var e9 = this.parseExpr();
			return hscript_Expr.EWhile(econd1,e9);
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return e1;
		} else {
			switch(tk._hx_index) {
			case 3:
				var op = tk.s;
				if(op == "->") {
					switch(e1._hx_index) {
					case 1:
						var i = e1.v;
						var eret = this.parseExpr();
						return hscript_Expr.EFunction([{ name : i}],hscript_Expr.EReturn(eret));
					case 3:
						var _hx_tmp = e1.e;
						if(_hx_tmp._hx_index == 1) {
							var i1 = _hx_tmp.v;
							var eret1 = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i1}],hscript_Expr.EReturn(eret1));
						}
						break;
					case 26:
						var _hx_tmp1 = e1.e;
						if(_hx_tmp1._hx_index == 1) {
							var t = e1.t;
							var i2 = _hx_tmp1.v;
							var eret2 = this.parseExpr();
							return hscript_Expr.EFunction([{ name : i2, t : t}],hscript_Expr.EReturn(eret2));
						}
						break;
					default:
					}
					this.unexpected(tk);
				}
				var _this1 = this.unops;
				if(__map_reserved[op] != null ? _this1.getReserved(op) : _this1.h[op]) {
					var tmp;
					if(!this.isBlock(e1)) {
						if(e1._hx_index == 3) {
							var _g = e1.e;
							tmp = true;
						} else {
							tmp = false;
						}
					} else {
						tmp = true;
					}
					if(tmp) {
						var _this2 = this.tokens;
						_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
						return e1;
					}
					return this.parseExprNext(hscript_Expr.EUnop(op,false,e1));
				}
				return this.makeBinop(op,e1,this.parseExpr());
			case 4:
				return this.parseExprNext(hscript_Expr.ECall(e1,this.parseExprList(hscript_Token.TPClose)));
			case 8:
				var field = this.getIdent();
				return this.parseExprNext(hscript_Expr.EField(e1,field));
			case 11:
				var e2 = this.parseExpr();
				var t1 = this.token();
				if(t1 != hscript_Token.TBkClose) {
					this.unexpected(t1);
				}
				return this.parseExprNext(hscript_Expr.EArray(e1,e2));
			case 13:
				var e21 = this.parseExpr();
				var t2 = this.token();
				if(t2 != hscript_Token.TDoubleDot) {
					this.unexpected(t2);
				}
				var e3 = this.parseExpr();
				return hscript_Expr.ETernary(e1,e21,e3);
			default:
				var _this3 = this.tokens;
				_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
				return e1;
			}
		}
	}
	,parseFunctionArgs: function() {
		var args = [];
		var tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var done = false;
			while(!done) {
				var name = null;
				var opt = false;
				if(tk != null) {
					if(tk._hx_index == 13) {
						opt = true;
						tk = this.token();
					}
				}
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else if(tk._hx_index == 2) {
					var id = tk.s;
					name = id;
				} else {
					this.unexpected(tk);
					break;
				}
				var arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
				} else {
					switch(tk._hx_index) {
					case 5:
						done = true;
						break;
					case 9:
						tk = this.token();
						break;
					default:
						this.unexpected(tk);
					}
				}
			}
		}
		return args;
	}
	,parseFunctionDecl: function() {
		var t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		var args = this.parseFunctionArgs();
		var ret = null;
		if(this.allowTypes) {
			var tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	,parsePath: function() {
		var path = [this.getIdent()];
		while(true) {
			var t = this.token();
			if(t != hscript_Token.TDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	,parseType: function() {
		var _gthis = this;
		var t = this.token();
		if(t == null) {
			return this.unexpected(t);
		} else {
			switch(t._hx_index) {
			case 2:
				var v = t.s;
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				var path = this.parsePath();
				var params = null;
				t = this.token();
				if(t == null) {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(t,_this1.head);
				} else if(t._hx_index == 3) {
					var op = t.s;
					if(op == "<") {
						params = [];
						_hx_loop1: while(true) {
							params.push(this.parseType());
							t = this.token();
							if(t != null) {
								switch(t._hx_index) {
								case 3:
									var op1 = t.s;
									if(op1 == ">") {
										break _hx_loop1;
									}
									if(HxOverrides.cca(op1,0) == 62) {
										var _this2 = this.tokens;
										_this2.head = new haxe_ds_GenericCell(hscript_Token.TOp(HxOverrides.substr(op1,1,null)),_this2.head);
										break _hx_loop1;
									}
									break;
								case 9:
									continue;
								default:
								}
							}
							this.unexpected(t);
							break;
						}
					} else {
						var _this3 = this.tokens;
						_this3.head = new haxe_ds_GenericCell(t,_this3.head);
					}
				} else {
					var _this4 = this.tokens;
					_this4.head = new haxe_ds_GenericCell(t,_this4.head);
				}
				return this.parseTypeNext(hscript_CType.CTPath(path,params));
			case 4:
				var a = this.token();
				var b = this.token();
				var _this5 = this.tokens;
				_this5.head = new haxe_ds_GenericCell(b,_this5.head);
				var _this6 = this.tokens;
				_this6.head = new haxe_ds_GenericCell(a,_this6.head);
				var withReturn = function(args) {
					var _g = _gthis.token();
					if(_g == null) {
						var t1 = _g;
						_gthis.unexpected(t1);
					} else if(_g._hx_index == 3) {
						if(_g.s != "->") {
							var t2 = _g;
							_gthis.unexpected(t2);
						}
					} else {
						var t3 = _g;
						_gthis.unexpected(t3);
					}
					return hscript_CType.CTFun(args,_gthis.parseType());
				};
				if(a == null) {
					var t4 = this.parseType();
					var _g1 = this.token();
					if(_g1 == null) {
						var t5 = _g1;
						return this.unexpected(t5);
					} else {
						switch(_g1._hx_index) {
						case 5:
							return this.parseTypeNext(hscript_CType.CTParent(t4));
						case 9:
							var args1 = [t4];
							while(true) {
								args1.push(this.parseType());
								if(!this.maybe(hscript_Token.TComma)) {
									break;
								}
							}
							var t6 = this.token();
							if(t6 != hscript_Token.TPClose) {
								this.unexpected(t6);
							}
							return withReturn(args1);
						default:
							var t7 = _g1;
							return this.unexpected(t7);
						}
					}
				} else {
					switch(a._hx_index) {
					case 2:
						var _g2 = a.s;
						if(b == null) {
							var t8 = this.parseType();
							var _g3 = this.token();
							if(_g3 == null) {
								var t9 = _g3;
								return this.unexpected(t9);
							} else {
								switch(_g3._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t8));
								case 9:
									var args2 = [t8];
									while(true) {
										args2.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									var t10 = this.token();
									if(t10 != hscript_Token.TPClose) {
										this.unexpected(t10);
									}
									return withReturn(args2);
								default:
									var t11 = _g3;
									return this.unexpected(t11);
								}
							}
						} else if(b._hx_index == 14) {
							var _g4 = [];
							var _g11 = 0;
							var _g21 = this.parseFunctionArgs();
							while(_g11 < _g21.length) {
								var arg = _g21[_g11];
								++_g11;
								var _g12 = arg.value;
								if(_g12 != null) {
									var v1 = _g12;
									if(!this.resumeErrors) {
										throw new js__$Boot_HaxeError(hscript_Error.ECustom("Default values not allowed in function types"));
									}
								}
								_g4.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
							}
							var args3 = _g4;
							return withReturn(args3);
						} else {
							var t12 = this.parseType();
							var _g5 = this.token();
							if(_g5 == null) {
								var t13 = _g5;
								return this.unexpected(t13);
							} else {
								switch(_g5._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t12));
								case 9:
									var args4 = [t12];
									while(true) {
										args4.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									var t14 = this.token();
									if(t14 != hscript_Token.TPClose) {
										this.unexpected(t14);
									}
									return withReturn(args4);
								default:
									var t15 = _g5;
									return this.unexpected(t15);
								}
							}
						}
						break;
					case 5:
						var _g6 = [];
						var _g13 = 0;
						var _g22 = this.parseFunctionArgs();
						while(_g13 < _g22.length) {
							var arg1 = _g22[_g13];
							++_g13;
							var _g14 = arg1.value;
							if(_g14 != null) {
								var v2 = _g14;
								if(!this.resumeErrors) {
									throw new js__$Boot_HaxeError(hscript_Error.ECustom("Default values not allowed in function types"));
								}
							}
							_g6.push(hscript_CType.CTNamed(arg1.name,arg1.opt ? hscript_CType.CTOpt(arg1.t) : arg1.t));
						}
						var args5 = _g6;
						return withReturn(args5);
					default:
						var t16 = this.parseType();
						var _g7 = this.token();
						if(_g7 == null) {
							var t17 = _g7;
							return this.unexpected(t17);
						} else {
							switch(_g7._hx_index) {
							case 5:
								return this.parseTypeNext(hscript_CType.CTParent(t16));
							case 9:
								var args6 = [t16];
								while(true) {
									args6.push(this.parseType());
									if(!this.maybe(hscript_Token.TComma)) {
										break;
									}
								}
								var t18 = this.token();
								if(t18 != hscript_Token.TPClose) {
									this.unexpected(t18);
								}
								return withReturn(args6);
							default:
								var t19 = _g7;
								return this.unexpected(t19);
							}
						}
					}
				}
				break;
			case 6:
				var fields = [];
				var meta = null;
				_hx_loop8: while(true) {
					t = this.token();
					if(t == null) {
						this.unexpected(t);
						break;
					} else {
						switch(t._hx_index) {
						case 2:
							var _g8 = t.s;
							if(_g8 == "var") {
								var name = this.getIdent();
								var t20 = this.token();
								if(t20 != hscript_Token.TDoubleDot) {
									this.unexpected(t20);
								}
								fields.push({ name : name, t : this.parseType(), meta : meta});
								meta = null;
								var t21 = this.token();
								if(t21 != hscript_Token.TSemicolon) {
									this.unexpected(t21);
								}
							} else {
								var name1 = _g8;
								var t22 = this.token();
								if(t22 != hscript_Token.TDoubleDot) {
									this.unexpected(t22);
								}
								fields.push({ name : name1, t : this.parseType(), meta : meta});
								t = this.token();
								if(t == null) {
									this.unexpected(t);
								} else {
									switch(t._hx_index) {
									case 7:
										break _hx_loop8;
									case 9:
										break;
									default:
										this.unexpected(t);
									}
								}
							}
							break;
						case 7:
							break _hx_loop8;
						case 15:
							var name2 = t.s;
							if(meta == null) {
								meta = [];
							}
							meta.push({ name : name2, params : this.parseMetaArgs()});
							break;
						default:
							this.unexpected(t);
							break _hx_loop8;
						}
					}
				}
				return this.parseTypeNext(hscript_CType.CTAnon(fields));
			default:
				return this.unexpected(t);
			}
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk == null) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return t;
		} else if(tk._hx_index == 3) {
			var op = tk.s;
			if(op != "->") {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				return t;
			}
		} else {
			var _this2 = this.tokens;
			_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
			return t;
		}
		var t2 = this.parseType();
		if(t2._hx_index == 1) {
			var _g2 = t2.ret;
			var args = t2.args;
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk == null) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
				break;
			} else if(tk._hx_index != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
				break;
			}
		}
		return args;
	}
	,parseModule: function(content,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = content;
		this.readPos = 0;
		this.allowTypes = true;
		this.allowMetadata = true;
		var decls = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			decls.push(this.parseModuleDecl());
		}
		return decls;
	}
	,parseMetadata: function() {
		var meta = [];
		while(true) {
			var tk = this.token();
			if(tk == null) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			} else if(tk._hx_index == 15) {
				var name = tk.s;
				meta.push({ name : name, params : this.parseMetaArgs()});
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
				break;
			}
		}
		return meta;
	}
	,parseParams: function() {
		if(this.maybe(hscript_Token.TOp("<"))) {
			if(!this.resumeErrors) {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp("Unsupported class type parameters"));
			}
		}
		return { };
	}
	,parseModuleDecl: function() {
		var meta = this.parseMetadata();
		var ident = this.getIdent();
		var isPrivate = false;
		var isExtern = false;
		_hx_loop1: while(true) {
			switch(ident) {
			case "extern":
				isExtern = true;
				break;
			case "private":
				isPrivate = true;
				break;
			default:
				break _hx_loop1;
			}
			ident = this.getIdent();
		}
		switch(ident) {
		case "class":
			var name = this.getIdent();
			var params = this.parseParams();
			var extend = null;
			var implement = [];
			_hx_loop2: while(true) {
				var t = this.token();
				if(t == null) {
					var _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
					break;
				} else if(t._hx_index == 2) {
					switch(t.s) {
					case "extends":
						extend = this.parseType();
						break;
					case "implements":
						implement.push(this.parseType());
						break;
					default:
						var _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(t,_this1.head);
						break _hx_loop2;
					}
				} else {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(t,_this2.head);
					break;
				}
			}
			var fields = [];
			var t1 = this.token();
			if(t1 != hscript_Token.TBrOpen) {
				this.unexpected(t1);
			}
			while(!this.maybe(hscript_Token.TBrClose)) fields.push(this.parseField());
			return hscript_ModuleDecl.DClass({ name : name, meta : meta, params : params, extend : extend, implement : implement, fields : fields, isPrivate : isPrivate, isExtern : isExtern});
		case "import":
			var path = [this.getIdent()];
			var star = false;
			while(true) {
				var t2 = this.token();
				if(t2 != hscript_Token.TDot) {
					var _this3 = this.tokens;
					_this3.head = new haxe_ds_GenericCell(t2,_this3.head);
					break;
				}
				t2 = this.token();
				if(t2 == null) {
					this.unexpected(t2);
				} else {
					switch(t2._hx_index) {
					case 2:
						var id = t2.s;
						path.push(id);
						break;
					case 3:
						if(t2.s == "*") {
							star = true;
						} else {
							this.unexpected(t2);
						}
						break;
					default:
						this.unexpected(t2);
					}
				}
			}
			var t3 = this.token();
			if(t3 != hscript_Token.TSemicolon) {
				this.unexpected(t3);
			}
			return hscript_ModuleDecl.DImport(path,star);
		case "package":
			var path1 = this.parsePath();
			var t4 = this.token();
			if(t4 != hscript_Token.TSemicolon) {
				this.unexpected(t4);
			}
			return hscript_ModuleDecl.DPackage(path1);
		case "typedef":
			var name1 = this.getIdent();
			var params1 = this.parseParams();
			var t5 = this.token();
			if(!Type.enumEq(t5,hscript_Token.TOp("="))) {
				this.unexpected(t5);
			}
			var t6 = this.parseType();
			return hscript_ModuleDecl.DTypedef({ name : name1, meta : meta, params : params1, isPrivate : isPrivate, t : t6});
		default:
			this.unexpected(hscript_Token.TId(ident));
		}
		return null;
	}
	,parseField: function() {
		var meta = this.parseMetadata();
		var access = [];
		_hx_loop1: while(true) {
			var id = this.getIdent();
			switch(id) {
			case "function":
				var name = this.getIdent();
				var inf = this.parseFunctionDecl();
				return { name : name, meta : meta, access : access, kind : hscript_FieldKind.KFunction({ args : inf.args, expr : inf.body, ret : inf.ret})};
			case "inline":
				access.push(hscript_FieldAccess.AInline);
				break;
			case "macro":
				access.push(hscript_FieldAccess.AMacro);
				break;
			case "override":
				access.push(hscript_FieldAccess.AOverride);
				break;
			case "private":
				access.push(hscript_FieldAccess.APrivate);
				break;
			case "public":
				access.push(hscript_FieldAccess.APublic);
				break;
			case "static":
				access.push(hscript_FieldAccess.AStatic);
				break;
			case "var":
				var name1 = this.getIdent();
				var get = null;
				var set = null;
				if(this.maybe(hscript_Token.TPOpen)) {
					get = this.getIdent();
					var t = this.token();
					if(t != hscript_Token.TComma) {
						this.unexpected(t);
					}
					set = this.getIdent();
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
				}
				var type = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
				var expr = this.maybe(hscript_Token.TOp("=")) ? this.parseExpr() : null;
				if(expr != null) {
					if(this.isBlock(expr)) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					}
				} else {
					var tmp;
					if(type != null) {
						if(type == null) {
							tmp = false;
						} else if(type._hx_index == 2) {
							var _g = type.fields;
							tmp = true;
						} else {
							tmp = false;
						}
					} else {
						tmp = false;
					}
					if(tmp) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t3 = this.token();
						if(t3 != hscript_Token.TSemicolon) {
							this.unexpected(t3);
						}
					}
				}
				return { name : name1, meta : meta, access : access, kind : hscript_FieldKind.KVar({ get : get, set : set, type : type, expr : expr})};
			default:
				this.unexpected(hscript_Token.TId(id));
				break _hx_loop1;
			}
		}
		return null;
	}
	,readChar: function() {
		return this.input.charCodeAt(this.readPos++);
	}
	,readString: function(until) {
		var c = 0;
		var b_b = "";
		var esc = false;
		var old = this.line;
		var s = this.input;
		while(true) {
			var c1 = this.input.charCodeAt(this.readPos++);
			if(c1 != c1) {
				this.line = old;
				if(!this.resumeErrors) {
					throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
				}
				break;
			}
			if(esc) {
				esc = false;
				switch(c1) {
				case 34:case 39:case 92:
					b_b += String.fromCodePoint(c1);
					break;
				case 47:
					if(this.allowJSON) {
						b_b += String.fromCodePoint(c1);
					} else {
						this.invalidChar(c1);
					}
					break;
				case 110:
					b_b += String.fromCodePoint(10);
					break;
				case 114:
					b_b += String.fromCodePoint(13);
					break;
				case 116:
					b_b += String.fromCodePoint(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c1);
					}
					var k = 0;
					var _g = 0;
					while(_g < 4) {
						var i = _g++;
						k <<= 4;
						var char = this.input.charCodeAt(this.readPos++);
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char - 87;
							break;
						default:
							if(char != char) {
								this.line = old;
								if(!this.resumeErrors) {
									throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
								}
							}
							this.invalidChar(char);
						}
					}
					b_b += String.fromCodePoint(k);
					break;
				default:
					this.invalidChar(c1);
				}
			} else if(c1 == 92) {
				esc = true;
			} else if(c1 == until) {
				break;
			} else {
				if(c1 == 10) {
					this.line++;
				}
				b_b += String.fromCodePoint(c1);
			}
		}
		return b_b;
	}
	,token: function() {
		if(this.tokens.head != null) {
			var _this = this.tokens;
			var k = _this.head;
			if(k == null) {
				return null;
			} else {
				_this.head = k.next;
				return k.elt;
			}
		}
		var char;
		if(this.char < 0) {
			char = this.input.charCodeAt(this.readPos++);
		} else {
			char = this.char;
			this.char = -1;
		}
		while(true) {
			if(char != char) {
				this.char = char;
				return hscript_Token.TEof;
			}
			switch(char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				break;
			case 9:case 13:case 32:
				break;
			case 35:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char]) {
					var id = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return this.preprocess(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(char)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				char = this.input.charCodeAt(this.readPos++);
				switch(char) {
				case 46:
					char = this.input.charCodeAt(this.readPos++);
					if(char != 46) {
						this.invalidChar(char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = char - 48;
					var exp = 1;
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						exp *= 10;
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + (char - 48);
							break;
						default:
							this.char = char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this.char = char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = (char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					char = this.input.charCodeAt(this.readPos++);
					exp1 *= 10;
					switch(char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.input.charCodeAt(this.readPos++) == 46) {
								var _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(hscript_Token.TOp("..."),_this1.head);
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar(char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + (char - 48);
						break;
					case 69:case 101:
						var tk = this.token();
						var pow = null;
						if(tk == null) {
							var _this2 = this.tokens;
							_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
						} else {
							switch(tk._hx_index) {
							case 1:
								var _g = tk.c;
								if(_g._hx_index == 0) {
									var e = _g.v;
									pow = e;
								} else {
									var _this3 = this.tokens;
									_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
								}
								break;
							case 3:
								if(tk.s == "-") {
									tk = this.token();
									if(tk == null) {
										var _this4 = this.tokens;
										_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
									} else if(tk._hx_index == 1) {
										var _g1 = tk.c;
										if(_g1._hx_index == 0) {
											var e1 = _g1.v;
											pow = -e1;
										} else {
											var _this5 = this.tokens;
											_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
										}
									} else {
										var _this6 = this.tokens;
										_this6.head = new haxe_ds_GenericCell(tk,_this6.head);
									}
								} else {
									var _this7 = this.tokens;
									_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
								}
								break;
							default:
								var _this8 = this.tokens;
								_this8.head = new haxe_ds_GenericCell(tk,_this8.head);
							}
						}
						if(pow == null) {
							this.invalidChar(char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar(char);
						}
						var n2 = 0;
						while(true) {
							char = this.input.charCodeAt(this.readPos++);
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + (char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + (char - 87);
								break;
							default:
								this.char = char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this.char = char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				char = this.input.charCodeAt(this.readPos++);
				if(char == 61) {
					return hscript_Token.TOp("==");
				} else if(char == 62) {
					return hscript_Token.TOp("=>");
				}
				this.char = char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char] || char == 58) {
					var id1 = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TMeta(id1);
						}
						id1 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[char]) {
					var op = String.fromCodePoint(char);
					var prev = -1;
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.ops[char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,char);
							}
							this.char = char;
							return hscript_Token.TOp(op);
						}
						prev = char;
						op += String.fromCodePoint(char);
					}
				}
				if(this.idents[char]) {
					var id2 = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TId(id2);
						}
						id2 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
			}
			char = this.input.charCodeAt(this.readPos++);
		}
	}
	,preprocValue: function(id) {
		var _this = this.preprocesorValues;
		if(__map_reserved[id] != null) {
			return _this.getReserved(id);
		} else {
			return _this.h[id];
		}
	}
	,parsePreproCond: function() {
		var tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 2:
				var id = tk.s;
				return hscript_Expr.EIdent(id);
			case 3:
				if(tk.s == "!") {
					return hscript_Expr.EUnop("!",true,this.parsePreproCond());
				} else {
					return this.unexpected(tk);
				}
				break;
			case 4:
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(hscript_Token.TPOpen,_this.head);
				return this.parseExpr();
			default:
				return this.unexpected(tk);
			}
		}
	}
	,evalPreproCond: function(e) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			return this.preprocValue(id) != null;
		case 3:
			var e1 = e.e;
			return this.evalPreproCond(e1);
		case 6:
			var _g6 = e.e2;
			var _g5 = e.e1;
			switch(e.op) {
			case "&&":
				var e2 = _g6;
				var e11 = _g5;
				if(this.evalPreproCond(e11)) {
					return this.evalPreproCond(e2);
				} else {
					return false;
				}
				break;
			case "||":
				var e21 = _g6;
				var e12 = _g5;
				if(!this.evalPreproCond(e12)) {
					return this.evalPreproCond(e21);
				} else {
					return true;
				}
				break;
			default:
				if(!this.resumeErrors) {
					throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
				}
				return false;
			}
			break;
		case 7:
			var _g1 = e.prefix;
			if(e.op == "!") {
				var e3 = e.e;
				return !this.evalPreproCond(e3);
			} else {
				if(!this.resumeErrors) {
					throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
				}
				return false;
			}
			break;
		default:
			if(!this.resumeErrors) {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
			}
			return false;
		}
	}
	,preprocess: function(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			var e = this.parsePreproCond();
			if(this.evalPreproCond(e)) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	,skipTokens: function() {
		var spos = this.preprocStack.length - 1;
		var obj = this.preprocStack[spos];
		var pos = this.readPos;
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				if(!this.resumeErrors) {
					throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Unclosed"));
				}
			}
			if(this.preprocStack[spos] != obj) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
	}
	,tokenComment: function(op,char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			while(char != 13 && char != 10) {
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					break;
				}
			}
			this.char = char;
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this.char = char;
				return this.token();
			}
			while(true) {
				while(char != 42) {
					if(char == 10) {
						this.line++;
					}
					char = this.input.charCodeAt(this.readPos++);
					if(char != char) {
						this.line = old;
						if(!this.resumeErrors) {
							throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedComment);
						}
						break;
					}
				}
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					this.line = old;
					if(!this.resumeErrors) {
						throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedComment);
					}
					break;
				}
				if(char == 47) {
					break;
				}
			}
			return this.token();
		}
		this.char = char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c._hx_index) {
		case 0:
			var v = c.v;
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c.f;
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c.s;
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t._hx_index) {
		case 0:
			return "<eof>";
		case 1:
			var c = t.c;
			return this.constString(c);
		case 2:
			var s = t.s;
			return s;
		case 3:
			var s1 = t.s;
			return s1;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t.s;
			return "@" + id;
		case 16:
			var id1 = t.s;
			return "#" + id1;
		}
	}
	,__class__: hscript_Parser
};
var hscript_Tools = function() { };
$hxClasses["hscript.Tools"] = hscript_Tools;
hscript_Tools.__name__ = true;
hscript_Tools.iter = function(e,f) {
	switch(e._hx_index) {
	case 0:
		var _g19 = e.c;
		break;
	case 1:
		var _g27 = e.v;
		break;
	case 2:
		var _g32 = e.t;
		var _g31 = e.n;
		var e1 = e.e;
		if(e1 != null) {
			f(e1);
		}
		break;
	case 3:
		var e2 = e.e;
		f(e2);
		break;
	case 4:
		var el = e.e;
		var _g = 0;
		while(_g < el.length) {
			var e3 = el[_g];
			++_g;
			f(e3);
		}
		break;
	case 5:
		var _g49 = e.f;
		var e4 = e.e;
		f(e4);
		break;
	case 6:
		var _g36 = e.op;
		var e21 = e.e2;
		var e11 = e.e1;
		f(e11);
		f(e21);
		break;
	case 7:
		var _g13 = e.prefix;
		var _g12 = e.op;
		var e5 = e.e;
		f(e5);
		break;
	case 8:
		var args = e.params;
		var e6 = e.e;
		f(e6);
		var _g1 = 0;
		while(_g1 < args.length) {
			var a = args[_g1];
			++_g1;
			f(a);
		}
		break;
	case 9:
		var e22 = e.e2;
		var e12 = e.e1;
		var c = e.cond;
		f(c);
		f(e12);
		if(e22 != null) {
			f(e22);
		}
		break;
	case 10:
		var e7 = e.e;
		var c1 = e.cond;
		f(c1);
		f(e7);
		break;
	case 11:
		var _g28 = e.v;
		var e8 = e.e;
		var it = e.it;
		f(it);
		f(e8);
		break;
	case 12:case 13:
		break;
	case 14:
		var _g44 = e.ret;
		var _g43 = e.name;
		var _g41 = e.args;
		var e9 = e.e;
		f(e9);
		break;
	case 15:
		var e10 = e.e;
		if(e10 != null) {
			f(e10);
		}
		break;
	case 16:
		var i = e.index;
		var e13 = e.e;
		f(e13);
		f(i);
		break;
	case 17:
		var el1 = e.e;
		var _g2 = 0;
		while(_g2 < el1.length) {
			var e14 = el1[_g2];
			++_g2;
			f(e14);
		}
		break;
	case 18:
		var _g17 = e.cl;
		var el2 = e.params;
		var _g3 = 0;
		while(_g3 < el2.length) {
			var e15 = el2[_g3];
			++_g3;
			f(e15);
		}
		break;
	case 19:
		var e16 = e.e;
		f(e16);
		break;
	case 20:
		var _g5 = e.t;
		var _g4 = e.v;
		var c2 = e.ecatch;
		var e17 = e.e;
		f(e17);
		f(c2);
		break;
	case 21:
		var fl = e.fl;
		var _g6 = 0;
		while(_g6 < fl.length) {
			var fi = fl[_g6];
			++_g6;
			f(fi.e);
		}
		break;
	case 22:
		var e23 = e.e2;
		var e18 = e.e1;
		var c3 = e.cond;
		f(c3);
		f(e18);
		f(e23);
		break;
	case 23:
		var def = e.defaultExpr;
		var cases = e.cases;
		var e19 = e.e;
		f(e19);
		var _g7 = 0;
		while(_g7 < cases.length) {
			var c4 = cases[_g7];
			++_g7;
			var _g8 = 0;
			var _g11 = c4.values;
			while(_g8 < _g11.length) {
				var v = _g11[_g8];
				++_g8;
				f(v);
			}
			f(c4.expr);
		}
		if(def != null) {
			f(def);
		}
		break;
	case 24:
		var e20 = e.e;
		var c5 = e.cond;
		f(c5);
		f(e20);
		break;
	case 25:
		var e24 = e.e;
		var args1 = e.args;
		var name = e.name;
		if(args1 != null) {
			var _g9 = 0;
			while(_g9 < args1.length) {
				var a1 = args1[_g9];
				++_g9;
				f(a1);
			}
		}
		f(e24);
		break;
	case 26:
		var _g46 = e.t;
		var e25 = e.e;
		f(e25);
		break;
	}
};
hscript_Tools.map = function(e,f) {
	var edef;
	switch(e._hx_index) {
	case 0:
		var _g19 = e.c;
		edef = e;
		break;
	case 1:
		var _g27 = e.v;
		edef = e;
		break;
	case 2:
		var e1 = e.e;
		var t = e.t;
		var n = e.n;
		edef = hscript_Expr.EVar(n,t,e1 != null ? f(e1) : null);
		break;
	case 3:
		var e2 = e.e;
		edef = hscript_Expr.EParent(f(e2));
		break;
	case 4:
		var el = e.e;
		var _g = [];
		var _g1 = 0;
		while(_g1 < el.length) {
			var e3 = el[_g1];
			++_g1;
			_g.push(f(e3));
		}
		edef = hscript_Expr.EBlock(_g);
		break;
	case 5:
		var fi = e.f;
		var e4 = e.e;
		edef = hscript_Expr.EField(f(e4),fi);
		break;
	case 6:
		var e21 = e.e2;
		var e11 = e.e1;
		var op = e.op;
		edef = hscript_Expr.EBinop(op,f(e11),f(e21));
		break;
	case 7:
		var e5 = e.e;
		var pre = e.prefix;
		var op1 = e.op;
		edef = hscript_Expr.EUnop(op1,pre,f(e5));
		break;
	case 8:
		var args = e.params;
		var e6 = e.e;
		var edef1 = f(e6);
		var _g2 = [];
		var _g11 = 0;
		while(_g11 < args.length) {
			var a = args[_g11];
			++_g11;
			_g2.push(f(a));
		}
		edef = hscript_Expr.ECall(edef1,_g2);
		break;
	case 9:
		var e22 = e.e2;
		var e12 = e.e1;
		var c = e.cond;
		edef = hscript_Expr.EIf(f(c),f(e12),e22 != null ? f(e22) : null);
		break;
	case 10:
		var e7 = e.e;
		var c1 = e.cond;
		edef = hscript_Expr.EWhile(f(c1),f(e7));
		break;
	case 11:
		var e8 = e.e;
		var it = e.it;
		var v = e.v;
		edef = hscript_Expr.EFor(v,f(it),f(e8));
		break;
	case 12:case 13:
		edef = e;
		break;
	case 14:
		var t1 = e.ret;
		var name = e.name;
		var e9 = e.e;
		var args1 = e.args;
		edef = hscript_Expr.EFunction(args1,f(e9),name,t1);
		break;
	case 15:
		var e10 = e.e;
		edef = hscript_Expr.EReturn(e10 != null ? f(e10) : null);
		break;
	case 16:
		var i = e.index;
		var e13 = e.e;
		edef = hscript_Expr.EArray(f(e13),f(i));
		break;
	case 17:
		var el1 = e.e;
		var _g3 = [];
		var _g12 = 0;
		while(_g12 < el1.length) {
			var e14 = el1[_g12];
			++_g12;
			_g3.push(f(e14));
		}
		edef = hscript_Expr.EArrayDecl(_g3);
		break;
	case 18:
		var el2 = e.params;
		var cl = e.cl;
		var _g4 = [];
		var _g13 = 0;
		while(_g13 < el2.length) {
			var e15 = el2[_g13];
			++_g13;
			_g4.push(f(e15));
		}
		edef = hscript_Expr.ENew(cl,_g4);
		break;
	case 19:
		var e16 = e.e;
		edef = hscript_Expr.EThrow(f(e16));
		break;
	case 20:
		var c2 = e.ecatch;
		var t2 = e.t;
		var v1 = e.v;
		var e17 = e.e;
		edef = hscript_Expr.ETry(f(e17),v1,t2,f(c2));
		break;
	case 21:
		var fl = e.fl;
		var _g5 = [];
		var _g14 = 0;
		while(_g14 < fl.length) {
			var fi1 = fl[_g14];
			++_g14;
			_g5.push({ name : fi1.name, e : f(fi1.e)});
		}
		edef = hscript_Expr.EObject(_g5);
		break;
	case 22:
		var e23 = e.e2;
		var e18 = e.e1;
		var c3 = e.cond;
		edef = hscript_Expr.ETernary(f(c3),f(e18),f(e23));
		break;
	case 23:
		var def = e.defaultExpr;
		var cases = e.cases;
		var e19 = e.e;
		var edef2 = f(e19);
		var _g6 = [];
		var _g15 = 0;
		while(_g15 < cases.length) {
			var c4 = cases[_g15];
			++_g15;
			var _g16 = [];
			var _g21 = 0;
			var _g31 = c4.values;
			while(_g21 < _g31.length) {
				var v2 = _g31[_g21];
				++_g21;
				_g16.push(f(v2));
			}
			_g6.push({ values : _g16, expr : f(c4.expr)});
		}
		edef = hscript_Expr.ESwitch(edef2,_g6,def == null ? null : f(def));
		break;
	case 24:
		var e20 = e.e;
		var c5 = e.cond;
		edef = hscript_Expr.EDoWhile(f(c5),f(e20));
		break;
	case 25:
		var e24 = e.e;
		var args2 = e.args;
		var name1 = e.name;
		var edef3;
		if(args2 == null) {
			edef3 = null;
		} else {
			var _g7 = [];
			var _g17 = 0;
			while(_g17 < args2.length) {
				var a1 = args2[_g17];
				++_g17;
				_g7.push(f(a1));
			}
			edef3 = _g7;
		}
		edef = hscript_Expr.EMeta(name1,edef3,f(e24));
		break;
	case 26:
		var t3 = e.t;
		var e25 = e.e;
		edef = hscript_Expr.ECheckType(f(e25),t3);
		break;
	}
	return edef;
};
hscript_Tools.expr = function(e) {
	return e;
};
hscript_Tools.mk = function(e,p) {
	return e;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if(((val) instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_lib__$ArrayBuffer_ArrayBufferCompat = function() { };
$hxClasses["js.lib._ArrayBuffer.ArrayBufferCompat"] = js_lib__$ArrayBuffer_ArrayBufferCompat;
js_lib__$ArrayBuffer_ArrayBufferCompat.__name__ = true;
js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var js_node_Fs = require("fs");
var js_node_Http = require("http");
var js_node_Https = require("https");
var js_node__$KeyValue_KeyValue_$Impl_$ = {};
$hxClasses["js.node._KeyValue.KeyValue_Impl_"] = js_node__$KeyValue_KeyValue_$Impl_$;
js_node__$KeyValue_KeyValue_$Impl_$.__name__ = true;
js_node__$KeyValue_KeyValue_$Impl_$.__properties__ = {get_value:"get_value",get_key:"get_key"};
js_node__$KeyValue_KeyValue_$Impl_$.get_key = function(this1) {
	return this1[0];
};
js_node__$KeyValue_KeyValue_$Impl_$.get_value = function(this1) {
	return this1[1];
};
var js_node_Url = require("url");
var js_node_Zlib = require("zlib");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_node_buffer__$Buffer_Helper = function() { };
$hxClasses["js.node.buffer._Buffer.Helper"] = js_node_buffer__$Buffer_Helper;
js_node_buffer__$Buffer_Helper.__name__ = true;
js_node_buffer__$Buffer_Helper.bytesOfBuffer = function(b) {
	var o = Object.create(haxe_io_Bytes.prototype);
	o.length = b.byteLength;
	o.b = b;
	b.bufferValue = b;
	b.hxBytes = o;
	b.bytes = b;
	return o;
};
var js_node_stream__$Writable_WritableNewOptionsAdapter_$Impl_$ = {};
$hxClasses["js.node.stream._Writable.WritableNewOptionsAdapter_Impl_"] = js_node_stream__$Writable_WritableNewOptionsAdapter_$Impl_$;
js_node_stream__$Writable_WritableNewOptionsAdapter_$Impl_$.__name__ = true;
js_node_stream__$Writable_WritableNewOptionsAdapter_$Impl_$.from = function(options) {
	if(!Object.prototype.hasOwnProperty.call(options,"final")) {
		Object.defineProperty(options,"final",{ get : function() {
			return options.final_;
		}});
	}
	return options;
};
var js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$ = {};
$hxClasses["js.node.url._URLSearchParams.URLSearchParamsEntry_Impl_"] = js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$;
js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$.__name__ = true;
js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$.__properties__ = {get_value:"get_value",get_name:"get_name"};
js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$._new = function(name,value) {
	var this1 = [name,value];
	return this1;
};
js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$.get_name = function(this1) {
	return this1[0];
};
js_node_url__$URLSearchParams_URLSearchParamsEntry_$Impl_$.get_value = function(this1) {
	return this1[1];
};
var lib_EvalHandler = function() { };
$hxClasses["lib.EvalHandler"] = lib_EvalHandler;
lib_EvalHandler.__name__ = true;
lib_EvalHandler.init = function() {
	lib_EvalHandler.interp = new hscript_Interp();
	lib_EvalHandler.parser = new hscript_Parser();
	lib_EvalHandler.loadVars(lib_EvalHandler.interp.variables);
};
lib_EvalHandler.loadVars = function(v) {
	var value = Math;
	if(__map_reserved["Math"] != null) {
		v.setReserved("Math",value);
	} else {
		v.h["Math"] = value;
	}
	var value1 = lib_EvalHandler.doTrace;
	if(__map_reserved["trace"] != null) {
		v.setReserved("trace",value1);
	} else {
		v.h["trace"] = value1;
	}
	var value2 = lib_Logger;
	if(__map_reserved["Logger"] != null) {
		v.setReserved("Logger",value2);
	} else {
		v.h["Logger"] = value2;
	}
	var value3 = lib_Settings;
	if(__map_reserved["Settings"] != null) {
		v.setReserved("Settings",value3);
	} else {
		v.h["Settings"] = value3;
	}
};
lib_EvalHandler.doTrace = function(s) {
	var tmp = Std.string(s);
	lib_EvalHandler.logs.push(tmp);
};
lib_EvalHandler.evaluate = function(s) {
	lib_EvalHandler.logs = [];
	var p = lib_EvalHandler.parser.parseString(s);
	if(p == null) {
		return null;
	}
	var tmp = lib_EvalHandler.interp.execute(p);
	var b_b = "";
	var _g = 0;
	var _g1 = lib_EvalHandler.logs;
	while(_g < _g1.length) {
		var o = _g1[_g];
		++_g;
		b_b += Std.string(o + "\n");
	}
	b_b += Std.string(Std.string(tmp));
	return b_b;
};
var lib_JsonHandler = function() { };
$hxClasses["lib.JsonHandler"] = lib_JsonHandler;
lib_JsonHandler.__name__ = true;
lib_JsonHandler.canRead = function(file) {
	return sys_FileSystem.exists(file);
};
lib_JsonHandler.read = function(file) {
	var content = null;
	if(sys_FileSystem.exists(file)) {
		try {
			content = js_node_Fs.readFileSync(file,{ encoding : "utf8"});
		} catch( e ) {
			haxe_CallStack.lastException = e;
			haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "Source/lib/JsonHandler.hx", lineNumber : 21, className : "lib.JsonHandler", methodName : "read"});
		}
	}
	return JSON.parse(content);
};
lib_JsonHandler.write = function(file,s) {
	if(!sys_FileSystem.exists(file)) {
		return;
	}
	try {
		var a = new sys_io_FileOutput(js_node_Fs.openSync(file,"w"));
		a.writeString(JSON.stringify(s));
		a.close();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		haxe_Log.trace(((e) instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "Source/lib/JsonHandler.hx", lineNumber : 39, className : "lib.JsonHandler", methodName : "write"});
	}
};
var lib_Modio = function() { };
$hxClasses["lib.Modio"] = lib_Modio;
lib_Modio.__name__ = true;
lib_Modio.getMods = function(cb) {
	lib_Modio.getModioData("games/34/mods",cb);
};
lib_Modio.getModioData = function(_path,cb) {
	lib_Modio.makeRequest("https://api.mod.io/v1/" + _path + "?api_key=" + Bot.getModioKey(),cb);
};
lib_Modio.makeRequest = function(full_path,cb) {
	var req = new haxe_http_HttpNodeJs(full_path);
	req.setHeader("Content-Type","application-json");
	req.addParameter("port","443");
	req.onData = function(e) {
		cb(e);
	};
	req.onError = function(e1) {
		haxe_Log.trace("Modio Error : " + e1,{ fileName : "Source/lib/Modio.hx", lineNumber : 24, className : "lib.Modio", methodName : "makeRequest"});
	};
	req.onStatus = function(e2) {
		haxe_Log.trace("Modio Status : " + e2,{ fileName : "Source/lib/Modio.hx", lineNumber : 27, className : "lib.Modio", methodName : "makeRequest"});
	};
	req.request();
};
var lib_Settings = function() { };
$hxClasses["lib.Settings"] = lib_Settings;
lib_Settings.__name__ = true;
lib_Settings.getUser = function(id) {
};
lib_Settings.getGuild = function(id) {
};
var lib_Logger = function() { };
$hxClasses["lib.Logger"] = lib_Logger;
lib_Logger.__name__ = true;
lib_Logger.save = function() {
	lib_JsonHandler.write("logs.json",lib_Logger.logs);
};
lib_Logger.addLog = function(v,infos) {
	if(lib_Logger.logs == null) {
		lib_Logger.logs = lib_Logger.getLogData();
	}
	if(lib_Logger.logs.logs == null) {
		lib_Logger.logs = lib_Logger.getLogData();
	}
	lib_Logger.logs.logs.push(haxe_Log.formatOutput(v,infos));
};
lib_Logger.getLogData = function() {
	var tmp = lib_JsonHandler.read("logs.json");
	if(tmp == null || tmp == "") {
		return { logs : []};
	} else {
		return JSON.parse(tmp);
	}
};
lib_Logger.formatLogs = function() {
	var tmp = lib_Logger.logs.logs.join("\n");
	var length = tmp.length;
	var max = 1990;
	var tmp2 = length / max;
	var tmp3 = Math.ceil(tmp2);
	var r = [];
	haxe_Log.trace(tmp,{ fileName : "Source/lib/Settings.hx", lineNumber : 35, className : "lib.Logger", methodName : "formatLogs"});
	var _g = 0;
	var _g1 = tmp3;
	while(_g < _g1) {
		var o = _g++;
		r.push("```\n" + tmp.substring(max * o,max * (o + 1)) + "\n```");
	}
	return r;
};
lib_Logger.clearLogs = function() {
	lib_Logger.logs = { logs : []};
	lib_JsonHandler.write("logs.json",lib_Logger.logs);
};
lib_Logger.setTrace = function() {
	lib_Logger.oldTrace = haxe_Log.trace;
	haxe_Log.trace = function(v,infos) {
		lib_Logger.addLog("[" + HxOverrides.dateStr(new Date()) + "] " + v,infos);
		lib_Logger.oldTrace("[" + HxOverrides.dateStr(new Date()) + "] " + v,infos);
	};
};
var lib_UserService = function() { };
$hxClasses["lib.UserService"] = lib_UserService;
lib_UserService.__name__ = true;
lib_UserService.getPerms = function(u,s) {
	var perm = Reflect.field(com_raidandfade_haxicord_utils_DPERMS,s);
	if(u.hasPermissions(perm)) {
		return true;
	} else {
		return false;
	}
};
lib_UserService.canKick = function(u) {
	var tmp = u.hasPermissions(com_raidandfade_haxicord_utils_DPERMS.ADMINISTRATOR) || u.hasPermissions(com_raidandfade_haxicord_utils_DPERMS.KICK_MEMBERS);
	return tmp;
};
lib_UserService.canBan = function(u) {
	var tmp = u.hasPermissions(com_raidandfade_haxicord_utils_DPERMS.ADMINISTRATOR) || u.hasPermissions(com_raidandfade_haxicord_utils_DPERMS.BAN_MEMBERS);
	return tmp;
};
var sys_FileSystem = function() { };
$hxClasses["sys.FileSystem"] = sys_FileSystem;
sys_FileSystem.__name__ = true;
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _ ) {
		haxe_CallStack.lastException = _;
		var _1 = ((_) instanceof js__$Boot_HaxeError) ? _.val : _;
		return false;
	}
};
var sys_io_FileInput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileInput"] = sys_io_FileInput;
sys_io_FileInput.__name__ = true;
sys_io_FileInput.__super__ = haxe_io_Input;
sys_io_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		var buf = js_node_buffer_Buffer.alloc(1);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,0,1,this.pos);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos++;
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,pos,len,this.pos);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos += bytesRead;
		return bytesRead;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,eof: function() {
		return this.pos >= js_node_Fs.fstatSync(this.fd).size;
	}
	,__class__: sys_io_FileInput
});
var sys_io_FileOutput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
$hxClasses["sys.io.FileOutput"] = sys_io_FileOutput;
sys_io_FileOutput.__name__ = true;
sys_io_FileOutput.__super__ = haxe_io_Output;
sys_io_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(b) {
		var buf = js_node_buffer_Buffer.alloc(1);
		buf[0] = b;
		js_node_Fs.writeSync(this.fd,buf,0,1,this.pos);
		this.pos++;
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var wrote = js_node_Fs.writeSync(this.fd,buf,pos,len,this.pos);
		this.pos += wrote;
		return wrote;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,__class__: sys_io_FileOutput
});
var sys_io_FileSeek = $hxEnums["sys.io.FileSeek"] = { __ename__ : true, __constructs__ : ["SeekBegin","SeekCur","SeekEnd"]
	,SeekBegin: {_hx_index:0,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekCur: {_hx_index:1,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekEnd: {_hx_index:2,__enum__:"sys.io.FileSeek",toString:$estr}
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = true;
$hxClasses["Array"] = Array;
Array.__name__ = true;
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
Bot.hasStartedBefore = false;
Bot.prefix = "]";
CommandHandler.has_init = false;
CommandHandler.commands = new haxe_ds_StringMap();
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
com_raidandfade_haxicord_DiscordClient.libName = "Haxicord";
com_raidandfade_haxicord_DiscordClient.userAgent = "DiscordBot (https://github.com/RaidAndFade/Haxicord, 0.2.0)";
com_raidandfade_haxicord_DiscordClient.gatewayVersion = 6;
com_raidandfade_haxicord_endpoints_Endpoints.BASEURL = "https://discordapp.com/api/";
com_raidandfade_haxicord_logger_Logger.outPrefix = "[%c{Green}%t%c{Reset}] %c{lightblue}%cn%c{Reset}->%c{LightBlue}%fn()%c{Reset}:%c{LightRed}%l%c{Reset}: ";
com_raidandfade_haxicord_utils_DPERMS.CREATE_INSTANT_INVITE = 1;
com_raidandfade_haxicord_utils_DPERMS.KICK_MEMBERS = 2;
com_raidandfade_haxicord_utils_DPERMS.BAN_MEMBERS = 4;
com_raidandfade_haxicord_utils_DPERMS.ADMINISTRATOR = 8;
com_raidandfade_haxicord_utils_DPERMS.MANAGE_CHANNELS = 16;
com_raidandfade_haxicord_utils_DPERMS.MANAGE_GUILD = 32;
com_raidandfade_haxicord_utils_DPERMS.ADD_REACTIONS = 64;
com_raidandfade_haxicord_utils_DPERMS.VIEW_AUDIT_LOG = 128;
com_raidandfade_haxicord_utils_DPERMS.VIEW_CHANNEL = 1024;
com_raidandfade_haxicord_utils_DPERMS.SEND_MESSAGES = 2048;
com_raidandfade_haxicord_utils_DPERMS.SEND_TTS_MESSAGES = 4096;
com_raidandfade_haxicord_utils_DPERMS.MANAGE_MESSAGES = 8192;
com_raidandfade_haxicord_utils_DPERMS.EMBED_LINKS = 16384;
com_raidandfade_haxicord_utils_DPERMS.ATTACH_FILES = 32768;
com_raidandfade_haxicord_utils_DPERMS.READ_MESSAGE_HISTORY = 65536;
com_raidandfade_haxicord_utils_DPERMS.MENTION_EVERYONE = 131072;
com_raidandfade_haxicord_utils_DPERMS.USE_EXTERNAL_EMOJIS = 262144;
com_raidandfade_haxicord_utils_DPERMS.CONNECT = 1048576;
com_raidandfade_haxicord_utils_DPERMS.SPEAK = 2097152;
com_raidandfade_haxicord_utils_DPERMS.MUTE_MEMBERS = 4194304;
com_raidandfade_haxicord_utils_DPERMS.DEAFEN_MEMBERS = 8388608;
com_raidandfade_haxicord_utils_DPERMS.MOVE_MEMBERS = 16777216;
com_raidandfade_haxicord_utils_DPERMS.USE_VAD = 33554432;
com_raidandfade_haxicord_utils_DPERMS.PRIORITY_SPEAKER = 256;
com_raidandfade_haxicord_utils_DPERMS.CHANGE_NICKNAME = 67108864;
com_raidandfade_haxicord_utils_DPERMS.MANAGE_NICKNAMES = 134217728;
com_raidandfade_haxicord_utils_DPERMS.MANAGE_ROLES = 268435456;
com_raidandfade_haxicord_utils_DPERMS.MANAGE_WEBHOOKS = 536870912;
com_raidandfade_haxicord_utils_DPERMS.MANAGE_EMOJIS = 1073741824;
com_raidandfade_haxicord_utils_DPERMS.pnames = ["CREATE_INSTANT_INVITE","KICK_MEMBERS","BAN_MEMBERS","ADMINISTRATOR","MANAGE_CHANNELS","MANAGE_GUILD","ADD_REACTIONS","VIEW_AUDIT_LOG","VIEW_CHANNEL","SEND_MESSAGES","SEND_TTS_MESSAGES","MANAGE_MESSAGES","EMBED_LINKS","ATTACH_FILES","READ_MESSAGE_HISTORY","MENTION_EVERYONE","USE_EXTERNAL_EMOJIS","CONNECT","SPEAK","MUTE_MEMBERS","DEAFEN_MEMBERS","MOVE_MEMBERS","USE_VAD","PRIORITY_SPEAKER","CHANGE_NICKNAME","MANAGE_NICKNAMES","MANAGE_ROLES","MANAGE_WEBHOOKS","MANAGE_EMOJIS"];
com_raidandfade_haxicord_utils_DPERMS.pvals = [com_raidandfade_haxicord_utils_DPERMS.CREATE_INSTANT_INVITE,com_raidandfade_haxicord_utils_DPERMS.KICK_MEMBERS,com_raidandfade_haxicord_utils_DPERMS.BAN_MEMBERS,com_raidandfade_haxicord_utils_DPERMS.ADMINISTRATOR,com_raidandfade_haxicord_utils_DPERMS.MANAGE_CHANNELS,com_raidandfade_haxicord_utils_DPERMS.MANAGE_GUILD,com_raidandfade_haxicord_utils_DPERMS.ADD_REACTIONS,com_raidandfade_haxicord_utils_DPERMS.VIEW_AUDIT_LOG,com_raidandfade_haxicord_utils_DPERMS.VIEW_CHANNEL,com_raidandfade_haxicord_utils_DPERMS.SEND_MESSAGES,com_raidandfade_haxicord_utils_DPERMS.SEND_TTS_MESSAGES,com_raidandfade_haxicord_utils_DPERMS.MANAGE_MESSAGES,com_raidandfade_haxicord_utils_DPERMS.EMBED_LINKS,com_raidandfade_haxicord_utils_DPERMS.ATTACH_FILES,com_raidandfade_haxicord_utils_DPERMS.READ_MESSAGE_HISTORY,com_raidandfade_haxicord_utils_DPERMS.MENTION_EVERYONE,com_raidandfade_haxicord_utils_DPERMS.USE_EXTERNAL_EMOJIS,com_raidandfade_haxicord_utils_DPERMS.CONNECT,com_raidandfade_haxicord_utils_DPERMS.SPEAK,com_raidandfade_haxicord_utils_DPERMS.MUTE_MEMBERS,com_raidandfade_haxicord_utils_DPERMS.DEAFEN_MEMBERS,com_raidandfade_haxicord_utils_DPERMS.MOVE_MEMBERS,com_raidandfade_haxicord_utils_DPERMS.USE_VAD,com_raidandfade_haxicord_utils_DPERMS.PRIORITY_SPEAKER,com_raidandfade_haxicord_utils_DPERMS.CHANGE_NICKNAME,com_raidandfade_haxicord_utils_DPERMS.MANAGE_NICKNAMES,com_raidandfade_haxicord_utils_DPERMS.MANAGE_ROLES,com_raidandfade_haxicord_utils_DPERMS.MANAGE_WEBHOOKS,com_raidandfade_haxicord_utils_DPERMS.MANAGE_EMOJIS];
com_raidandfade_haxicord_websocket_WebSocketConnection.ZLIB_SUFFIX = "0000ffff";
com_raidandfade_haxicord_websocket_WebSocketConnection.BUFFER_SIZE = 1048576;
haxe_EntryPoint.pending = [];
haxe_EntryPoint.threadCount = 0;
hscript_Parser.p1 = 0;
hscript_Parser.tokenMin = 0;
hscript_Parser.tokenMax = 0;
{
	Bot.main();
	haxe_EntryPoint.run();
}
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=bot.js.map